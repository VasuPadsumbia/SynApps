menu(asynENABLE) {
    choice(asynENABLE_Disable, "Disable")
    choice(asynENABLE_Enable, "Enable")
}
menu(stringoutPOST) {
    choice(stringoutPOST_OnChange, "On Change")
    choice(stringoutPOST_Always, "Always")
}
menu(menuSimm) {
    choice(menuSimmNO, "NO")
    choice(menuSimmYES, "YES")
    choice(menuSimmRAW, "RAW")
}
menu(serialDBIT) {
    choice(serialDBIT_unknown, "Unknown")
    choice(serialDBIT_5, "5")
    choice(serialDBIT_6, "6")
    choice(serialDBIT_7, "7")
    choice(serialDBIT_8, "8")
}
menu(fanoutSELM) {
    choice(fanoutSELM_All, "All")
    choice(fanoutSELM_Specified, "Specified")
    choice(fanoutSELM_Mask, "Mask")
}
menu(menuPost) {
    choice(menuPost_OnChange, "On Change")
    choice(menuPost_Always, "Always")
}
menu(aSubLFLG) {
    choice(aSubLFLG_IGNORE, "IGNORE")
    choice(aSubLFLG_READ, "READ")
}
menu(serialSBIT) {
    choice(serialSBIT_unknown, "Unknown")
    choice(serialSBIT_1, "1")
    choice(serialSBIT_2, "2")
}
menu(asynTRACE) {
    choice(asynTRACE_Off, "Off")
    choice(asynTRACE_On, "On")
}
menu(serialPRTY) {
    choice(serialPRTY_unknown, "Unknown")
    choice(serialPRTY_None, "None")
    choice(serialPRTY_Even, "Even")
    choice(serialPRTY_Odd, "Odd")
}
menu(waveformPOST) {
    choice(waveformPOST_Always, "Always")
    choice(waveformPOST_OnChange, "On Change")
}
menu(asynINTERFACE) {
    choice(asynINTERFACE_OCTET, "asynOctet")
    choice(asynINTERFACE_INT32, "asynInt32")
    choice(asynINTERFACE_UINT32, "asynUInt32Digital")
    choice(asynINTERFACE_FLOAT64, "asynFloat64")
}
menu(calcoutINAV) {
    choice(calcoutINAV_EXT_NC, "Ext PV NC")
    choice(calcoutINAV_EXT, "Ext PV OK")
    choice(calcoutINAV_LOC, "Local PV")
    choice(calcoutINAV_CON, "Constant")
}
menu(menuScan) {
    choice(menuScanPassive, "Passive")
    choice(menuScanEvent, "Event")
    choice(menuScanI_O_Intr, "I/O Intr")
    choice(menuScan10_second, "10 second")
    choice(menuScan5_second, "5 second")
    choice(menuScan2_second, "2 second")
    choice(menuScan1_second, "1 second")
    choice(menuScan_5_second, ".5 second")
    choice(menuScan_2_second, ".2 second")
    choice(menuScan_1_second, ".1 second")
}
menu(compressALG) {
    choice(compressALG_N_to_1_Low_Value, "N to 1 Low Value")
    choice(compressALG_N_to_1_High_Value, "N to 1 High Value")
    choice(compressALG_N_to_1_Average, "N to 1 Average")
    choice(compressALG_Average, "Average")
    choice(compressALG_Circular_Buffer, "Circular Buffer")
    choice(compressALG_N_to_1_Median, "N to 1 Median")
}
menu(menuPriority) {
    choice(menuPriorityLOW, "LOW")
    choice(menuPriorityMEDIUM, "MEDIUM")
    choice(menuPriorityHIGH, "HIGH")
}
menu(gpibUCMD) {
    choice(gpibUCMD_None, "None")
    choice(gpibUCMD_Device_Clear__DCL_, "Device Clear (DCL)")
    choice(gpibUCMD_Local_Lockout__LL0_, "Local Lockout (LL0)")
    choice(gpibUCMD_Serial_Poll_Disable__SPD_, "Serial Poll Disable (SPD)")
    choice(gpibUCMD_Serial_Poll_Enable__SPE_, "Serial Poll Enable (SPE)")
    choice(gpibUCMD_Unlisten__UNL_, "Unlisten (UNL)")
    choice(gpibUCMD_Untalk__UNT_, "Untalk (UNT)")
}
menu(menuFtype) {
    choice(menuFtypeSTRING, "STRING")
    choice(menuFtypeCHAR, "CHAR")
    choice(menuFtypeUCHAR, "UCHAR")
    choice(menuFtypeSHORT, "SHORT")
    choice(menuFtypeUSHORT, "USHORT")
    choice(menuFtypeLONG, "LONG")
    choice(menuFtypeULONG, "ULONG")
    choice(menuFtypeFLOAT, "FLOAT")
    choice(menuFtypeDOUBLE, "DOUBLE")
    choice(menuFtypeENUM, "ENUM")
}
menu(asynEOMREASON) {
    choice(asynEOMREASONNone, "None")
    choice(asynEOMREASONCNT, "Count")
    choice(asynEOMREASONEOS, "Eos")
    choice(asynEOMREASONCNTEOS, "Count Eos")
    choice(asynEOMREASONEND, "End")
    choice(asynEOMREASONCNTEND, "Count End")
    choice(asynEOMREASONEOSEND, "Eos End")
    choice(asynEOMREASONCNTEOSEND, "Count Eos End")
}
menu(aSubEFLG) {
    choice(aSubEFLG_NEVER, "NEVER")
    choice(aSubEFLG_ON_CHANGE, "ON CHANGE")
    choice(aSubEFLG_ALWAYS, "ALWAYS")
}
menu(serialBAUD) {
    choice(serialBAUD_unknown, "Unknown")
    choice(serialBAUD_300, "300")
    choice(serialBAUD_600, "600")
    choice(serialBAUD_1200, "1200")
    choice(serialBAUD_2400, "2400")
    choice(serialBAUD_4800, "4800")
    choice(serialBAUD_9600, "9600")
    choice(serialBAUD_19200, "19200")
    choice(serialBAUD_38400, "38400")
    choice(serialBAUD_57600, "57600")
    choice(serialBAUD_115200, "115200")
    choice(serialBAUD_230400, "230400")
    choice(serialBAUD_460800, "460800")
    choice(serialBAUD_576000, "576000")
    choice(serialBAUD_921600, "921600")
    choice(serialBAUD_1152000, "1152000")
}
menu(calcoutOOPT) {
    choice(calcoutOOPT_Every_Time, "Every Time")
    choice(calcoutOOPT_On_Change, "On Change")
    choice(calcoutOOPT_When_Zero, "When Zero")
    choice(calcoutOOPT_When_Non_zero, "When Non-zero")
    choice(calcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(calcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
}
menu(aoOIF) {
    choice(aoOIF_Full, "Full")
    choice(aoOIF_Incremental, "Incremental")
}
menu(stringinPOST) {
    choice(stringinPOST_OnChange, "On Change")
    choice(stringinPOST_Always, "Always")
}
menu(serialIX) {
    choice(serialIX_unknown, "Unknown")
    choice(serialIX_No, "No")
    choice(serialIX_Yes, "Yes")
}
menu(dfanoutSELM) {
    choice(dfanoutSELM_All, "All")
    choice(dfanoutSELM_Specified, "Specified")
    choice(dfanoutSELM_Mask, "Mask")
}
menu(menuConvert) {
    choice(menuConvertNO_CONVERSION, "NO CONVERSION")
    choice(menuConvertSLOPE, "SLOPE")
    choice(menuConvertLINEAR, "LINEAR")
    choice(menuConverttypeKdegF, "typeKdegF")
    choice(menuConverttypeKdegC, "typeKdegC")
    choice(menuConverttypeJdegF, "typeJdegF")
    choice(menuConverttypeJdegC, "typeJdegC")
    choice(menuConverttypeEdegF, "typeEdegF(ixe only)")
    choice(menuConverttypeEdegC, "typeEdegC(ixe only)")
    choice(menuConverttypeTdegF, "typeTdegF")
    choice(menuConverttypeTdegC, "typeTdegC")
    choice(menuConverttypeRdegF, "typeRdegF")
    choice(menuConverttypeRdegC, "typeRdegC")
    choice(menuConverttypeSdegF, "typeSdegF")
    choice(menuConverttypeSdegC, "typeSdegC")
}
menu(selSELM) {
    choice(selSELM_Specified, "Specified")
    choice(selSELM_High_Signal, "High Signal")
    choice(selSELM_Low_Signal, "Low Signal")
    choice(selSELM_Median_Signal, "Median Signal")
}
menu(menuOmsl) {
    choice(menuOmslsupervisory, "supervisory")
    choice(menuOmslclosed_loop, "closed_loop")
}
menu(ipDRTO) {
    choice(ipDRTO_unknown, "Unknown")
    choice(ipDRTO_No, "No")
    choice(ipDRTO_Yes, "Yes")
}
menu(seqSELM) {
    choice(seqSELM_All, "All")
    choice(seqSELM_Specified, "Specified")
    choice(seqSELM_Mask, "Mask")
}
menu(menuYesNo) {
    choice(menuYesNoNO, "NO")
    choice(menuYesNoYES, "YES")
}
menu(menuAlarmStat) {
    choice(menuAlarmStatNO_ALARM, "NO_ALARM")
    choice(menuAlarmStatREAD, "READ")
    choice(menuAlarmStatWRITE, "WRITE")
    choice(menuAlarmStatHIHI, "HIHI")
    choice(menuAlarmStatHIGH, "HIGH")
    choice(menuAlarmStatLOLO, "LOLO")
    choice(menuAlarmStatLOW, "LOW")
    choice(menuAlarmStatSTATE, "STATE")
    choice(menuAlarmStatCOS, "COS")
    choice(menuAlarmStatCOMM, "COMM")
    choice(menuAlarmStatTIMEOUT, "TIMEOUT")
    choice(menuAlarmStatHWLIMIT, "HWLIMIT")
    choice(menuAlarmStatCALC, "CALC")
    choice(menuAlarmStatSCAN, "SCAN")
    choice(menuAlarmStatLINK, "LINK")
    choice(menuAlarmStatSOFT, "SOFT")
    choice(menuAlarmStatBAD_SUB, "BAD_SUB")
    choice(menuAlarmStatUDF, "UDF")
    choice(menuAlarmStatDISABLE, "DISABLE")
    choice(menuAlarmStatSIMM, "SIMM")
    choice(menuAlarmStatREAD_ACCESS, "READ_ACCESS")
    choice(menuAlarmStatWRITE_ACCESS, "WRITE_ACCESS")
}
menu(aaoPOST) {
    choice(aaoPOST_Always, "Always")
    choice(aaoPOST_OnChange, "On Change")
}
menu(serialFCTL) {
    choice(serialFCTL_unknown, "Unknown")
    choice(serialFCTL_None, "None")
    choice(serialFCTL_Hardware, "Hardware")
}
menu(serialMCTL) {
    choice(serialMCTL_unknown, "Unknown")
    choice(serialMCTL_CLOCAL, "CLOCAL")
    choice(serialMCTL_Yes, "YES")
}
menu(gpibACMD) {
    choice(gpibACMD_None, "None")
    choice(gpibACMD_Group_Execute_Trig___GET_, "Group Execute Trig. (GET)")
    choice(gpibACMD_Go_To_Local__GTL_, "Go To Local (GTL)")
    choice(gpibACMD_Selected_Dev__Clear__SDC_, "Selected Dev. Clear (SDC)")
    choice(gpibACMD_Take_Control__TCT_, "Take Control (TCT)")
    choice(gpibACMD_Serial_Poll, "Serial Poll")
}
menu(menuIvoa) {
    choice(menuIvoaContinue_normally, "Continue normally")
    choice(menuIvoaDon_t_drive_outputs, "Don't drive outputs")
    choice(menuIvoaSet_output_to_IVOV, "Set output to IVOV")
}
menu(asynAUTOCONNECT) {
    choice(asynAUTOCONNECT_noAutoConnect, "noAutoConnect")
    choice(asynAUTOCONNECT_autoConnect, "autoConnect")
}
menu(asynTMOD) {
    choice(asynTMOD_Write_Read, "Write/Read")
    choice(asynTMOD_Write, "Write")
    choice(asynTMOD_Read, "Read")
    choice(asynTMOD_Flush, "Flush")
    choice(asynTMOD_NoIO, "NoI/O")
}
menu(asynCONNECT) {
    choice(asynCONNECT_Disconnect, "Disconnect")
    choice(asynCONNECT_Connect, "Connect")
}
menu(menuAlarmSevr) {
    choice(menuAlarmSevrNO_ALARM, "NO_ALARM")
    choice(menuAlarmSevrMINOR, "MINOR")
    choice(menuAlarmSevrMAJOR, "MAJOR")
    choice(menuAlarmSevrINVALID, "INVALID")
}
menu(menuPini) {
    choice(menuPiniNO, "NO")
    choice(menuPiniYES, "YES")
    choice(menuPiniRUN, "RUN")
    choice(menuPiniRUNNING, "RUNNING")
    choice(menuPiniPAUSE, "PAUSE")
    choice(menuPiniPAUSED, "PAUSED")
}
menu(calcoutDOPT) {
    choice(calcoutDOPT_Use_VAL, "Use CALC")
    choice(calcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(aaiPOST) {
    choice(aaiPOST_Always, "Always")
    choice(aaiPOST_OnChange, "On Change")
}
menu(histogramCMD) {
    choice(histogramCMD_Read, "Read")
    choice(histogramCMD_Clear, "Clear")
    choice(histogramCMD_Start, "Start")
    choice(histogramCMD_Stop, "Stop")
}
menu(asynFMT) {
    choice(asynFMT_ASCII, "ASCII")
    choice(asynFMT_Hybrid, "Hybrid")
    choice(asynFMT_Binary, "Binary")
}
recordtype(calc) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Result")
        promptgroup("50 - Output")
    }
    field(CALC, DBF_STRING) {
        special(SPC_CALC)
        pp(TRUE)
        initial("0")
        prompt("Calculation")
        size(80)
        promptgroup("30 - Action")
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPC, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input C")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPE, DBF_INLINK) {
        interest(1)
        prompt("Input E")
        promptgroup("41 - Input A-F")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPG, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input G")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input I")
        interest(1)
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input J")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        prompt("Input K")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        prompt("Input L")
        promptgroup("42 - Input G-L")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prompt("Display Precision")
        prop(YES)
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Rng")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
        prop(YES)
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prop(YES)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Low Severity")
        prop(YES)
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(AFTC, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Filter Time Constant")
    }
    field(AFVL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Alarm Filter Value")
        interest(3)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of A")
        interest(3)
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of B")
        interest(3)
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of C")
        interest(3)
    }
    field(LD, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of D")
        interest(3)
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of E")
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of F")
        interest(3)
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of G")
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of H")
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of I")
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of L")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
        prompt("Reverse Polish Calc")
        interest(4)
        special(SPC_NOMOD)
    }
}
recordtype(waveform) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value")
        extra("void *		val")
    }
    field(RARM, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Rearm the waveform")
        interest(1)
        pp(TRUE)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(EGU, DBF_STRING) {
        interest(1)
        prop(YES)
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(NELM, DBF_ULONG) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Number of Elements")
        initial("1")
        special(SPC_NOMOD)
    }
    field(FTVL, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        prompt("Field Type of Value")
        promptgroup("30 - Action")
    }
    field(BUSY, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Busy Indicator")
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        interest(4)
        prompt("Buffer Pointer")
        extra("void *		bptr")
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
    }
    field(MPST, DBF_MENU) {
        interest(1)
        prompt("Post Value Monitors")
        promptgroup("80 - Display")
        menu(waveformPOST)
    }
    field(APST, DBF_MENU) {
        prompt("Post Archive Monitors")
        promptgroup("80 - Display")
        interest(1)
        menu(waveformPOST)
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(waveform, CONSTANT, devWfSoft, "Soft Channel")
device(waveform, INST_IO, asynWfOctetCmdResponse, "asynOctetCmdResponse")
device(waveform, INST_IO, asynWfOctetWriteRead, "asynOctetWriteRead")
device(waveform, INST_IO, asynWfOctetRead, "asynOctetRead")
device(waveform, INST_IO, asynWfOctetWrite, "asynOctetWrite")
device(waveform, INST_IO, asynWfOctetWriteBinary, "asynOctetWriteBinary")
device(waveform, INST_IO, asynInt8ArrayWfIn, "asynInt8ArrayIn")
device(waveform, INST_IO, asynInt8ArrayWfOut, "asynInt8ArrayOut")
device(waveform, INST_IO, asynInt16ArrayWfIn, "asynInt16ArrayIn")
device(waveform, INST_IO, asynInt16ArrayWfOut, "asynInt16ArrayOut")
device(waveform, INST_IO, asynInt32ArrayWfIn, "asynInt32ArrayIn")
device(waveform, INST_IO, asynInt32ArrayWfOut, "asynInt32ArrayOut")
device(waveform, INST_IO, asynInt32TimeSeries, "asynInt32TimeSeries")
device(waveform, INST_IO, asynFloat32ArrayWfIn, "asynFloat32ArrayIn")
device(waveform, INST_IO, asynFloat32ArrayWfOut, "asynFloat32ArrayOut")
device(waveform, INST_IO, asynFloat64ArrayWfIn, "asynFloat64ArrayIn")
device(waveform, INST_IO, asynFloat64ArrayWfOut, "asynFloat64ArrayOut")
device(waveform, INST_IO, asynFloat64TimeSeries, "asynFloat64TimeSeries")
recordtype(mbbiDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_USHORT) {
        promptgroup("40 - Input")
        prompt("Current Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(NOBT, DBF_SHORT) {
        prompt("Number of Bits")
        promptgroup("40 - Input")
        interest(1)
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        interest(1)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        interest(3)
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        promptgroup("40 - Input")
        interest(1)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        interest(2)
        menu(menuAlarmSevr)
    }
    field(B0, DBF_UCHAR) {
        interest(1)
        prompt("Bit 0")
        pp(TRUE)
    }
    field(B1, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 1")
    }
    field(B2, DBF_UCHAR) {
        prompt("Bit 2")
        interest(1)
        pp(TRUE)
    }
    field(B3, DBF_UCHAR) {
        prompt("Bit 3")
        interest(1)
        pp(TRUE)
    }
    field(B4, DBF_UCHAR) {
        interest(1)
        prompt("Bit 4")
        pp(TRUE)
    }
    field(B5, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 5")
        interest(1)
    }
    field(B6, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 6")
    }
    field(B7, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 7")
        interest(1)
    }
    field(B8, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 8")
        interest(1)
    }
    field(B9, DBF_UCHAR) {
        interest(1)
        prompt("Bit 9")
        pp(TRUE)
    }
    field(BA, DBF_UCHAR) {
        prompt("Bit A")
        interest(1)
        pp(TRUE)
    }
    field(BB, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit B")
        interest(1)
    }
    field(BC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit C")
        interest(1)
    }
    field(BD, DBF_UCHAR) {
        interest(1)
        prompt("Bit D")
        pp(TRUE)
    }
    field(BE, DBF_UCHAR) {
        interest(1)
        prompt("Bit E")
        pp(TRUE)
    }
    field(BF, DBF_UCHAR) {
        interest(1)
        prompt("Bit F")
        pp(TRUE)
    }
}
device(mbbiDirect, CONSTANT, devMbbiDirectSoft, "Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftRaw, "Raw Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftCallback, "Async Soft Channel")
device(mbbiDirect, INST_IO, asynMbbiDirectUInt32Digital, "asynUInt32Digital")
recordtype(stringout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("struct dset         *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_STRING) {
        pp(TRUE)
        prompt("Current Value")
        size(40)
        promptgroup("50 - Output")
        asl(ASL0)
    }
    field(OVAL, DBF_STRING) {
        special(SPC_NOMOD)
        interest(3)
        size(40)
        prompt("Previous Value")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Specification")
    }
    field(MPST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Value Monitors")
        menu(stringoutPOST)
    }
    field(APST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Archive Monitors")
        menu(stringoutPOST)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        interest(2)
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output action")
        menu(menuIvoa)
    }
    field(IVOV, DBF_STRING) {
        interest(2)
        prompt("INVALID output value")
        promptgroup("50 - Output")
        size(40)
    }
}
device(stringout, CONSTANT, devSoSoft, "Soft Channel")
device(stringout, CONSTANT, devSoSoftCallback, "Async Soft Channel")
device(stringout, INST_IO, devSoStdio, "stdio")
device(stringout, INST_IO, asynSoOctetWrite, "asynOctetWrite")
device(stringout, GPIB_IO, devSoTestGpib, "GPIB Test")
recordtype(ai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("40 - Input")
        prompt("Current EGU Value")
        asl(ASL0)
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(LINR, DBF_MENU) {
        interest(1)
        promptgroup("60 - Convert")
        prompt("Linearization")
        menu(menuConvert)
        pp(TRUE)
        special(SPC_LINCONV)
    }
    field(EGUF, DBF_DOUBLE) {
        pp(TRUE)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
        prompt("Engineer Units Full")
        interest(1)
    }
    field(EGUL, DBF_DOUBLE) {
        pp(TRUE)
        special(SPC_LINCONV)
        prompt("Engineer Units Low")
        promptgroup("60 - Convert")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        interest(1)
        prop(YES)
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("High Operating Range")
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(AOFF, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prompt("Adjustment Offset")
        promptgroup("60 - Convert")
    }
    field(ASLO, DBF_DOUBLE) {
        interest(1)
        promptgroup("60 - Convert")
        initial("1")
        prompt("Adjustment Slope")
        pp(TRUE)
    }
    field(SMOO, DBF_DOUBLE) {
        interest(1)
        prompt("Smoothing")
        promptgroup("60 - Convert")
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
        prop(YES)
        interest(1)
        pp(TRUE)
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        prop(YES)
        interest(1)
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(AFVL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Alarm Filter Value")
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Archived")
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(ESLO, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("60 - Convert")
        prompt("Raw to EGU Slope")
        initial("1")
        interest(2)
    }
    field(EOFF, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("60 - Convert")
        prompt("Raw to EGU Offset")
        interest(2)
    }
    field(ROFF, DBF_ULONG) {
        prompt("Raw Offset")
        interest(2)
        pp(TRUE)
    }
    field(PBRK, DBF_NOACCESS) {
        prompt("Ptrto brkTable")
        extra("void *   pbrk")
        interest(4)
        special(SPC_NOMOD)
    }
    field(INIT, DBF_SHORT) {
        prompt("Initialized?")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LBRK, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("LastBreak Point")
    }
    field(RVAL, DBF_LONG) {
        pp(TRUE)
        prompt("Current Raw Value")
    }
    field(ORAW, DBF_LONG) {
        prompt("Previous Raw Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim. Input Specification")
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim. Mode Location")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuSimm)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        prompt("Simulation Mode Severity")
        promptgroup("90 - Simulate")
        interest(2)
        menu(menuAlarmSevr)
    }
}
device(ai, CONSTANT, devAiSoft, "Soft Channel")
device(ai, CONSTANT, devAiSoftRaw, "Raw Soft Channel")
device(ai, CONSTANT, devAiSoftCallback, "Async Soft Channel")
device(ai, INST_IO, devTimestampAI, "Soft Timestamp")
device(ai, INST_IO, devAiGeneralTime, "General Time")
device(ai, INST_IO, asynAiInt32, "asynInt32")
device(ai, INST_IO, asynAiInt32Average, "asynInt32Average")
device(ai, INST_IO, asynAiFloat64, "asynFloat64")
device(ai, INST_IO, asynAiFloat64Average, "asynFloat64Average")
device(ai, GPIB_IO, devAiTestGpib, "GPIB Test")
device(ai, GPIB_IO, devGpib, "GPIB init/report")
recordtype(asyn) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("char                bkpt")
        prompt("Break Point")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        prompt("Value field (unused)")
        asl(ASL0)
        interest(4)
    }
    field(PORT, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        size(40)
        promptgroup("40 - Input")
        prompt("asyn port")
        initial("")
    }
    field(ADDR, DBF_LONG) {
        interest(1)
        prompt("asyn address")
        initial("0")
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(PCNCT, DBF_MENU) {
        special(SPC_MOD)
        menu(asynCONNECT)
        interest(2)
        prompt("Port Connect/Disconnect")
    }
    field(DRVINFO, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("40 - Input")
        initial("")
        prompt("Driver info string")
        interest(2)
    }
    field(REASON, DBF_LONG) {
        special(SPC_MOD)
        prompt("asynUser->reason")
        interest(2)
    }
    field(TMOD, DBF_MENU) {
        menu(asynTMOD)
        promptgroup("40 - Input")
        prompt("Transaction mode")
        interest(1)
    }
    field(TMOT, DBF_DOUBLE) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Timeout (sec)")
        initial("1.0")
    }
    field(IFACE, DBF_MENU) {
        promptgroup("40 - Input")
        prompt("Interface")
        interest(2)
        menu(asynINTERFACE)
        special(SPC_MOD)
    }
    field(OCTETIV, DBF_LONG) {
        interest(2)
        prompt("asynOctet is valid")
    }
    field(OPTIONIV, DBF_LONG) {
        interest(2)
        prompt("asynOption is valid")
    }
    field(GPIBIV, DBF_LONG) {
        prompt("asynGPIB is valid")
        interest(2)
    }
    field(I32IV, DBF_LONG) {
        prompt("asynInt32 is valid")
        interest(2)
    }
    field(UI32IV, DBF_LONG) {
        interest(2)
        prompt("asynUInt32Digital is valid")
    }
    field(F64IV, DBF_LONG) {
        prompt("asynFloat64 is valid")
        interest(2)
    }
    field(AOUT, DBF_STRING) {
        pp(TRUE)
        interest(1)
        prompt("Output (command) string")
        promptgroup("50 - Output")
        size(40)
    }
    field(OEOS, DBF_STRING) {
        special(SPC_MOD)
        prompt("Output delimiter")
        size(40)
        promptgroup("50 - Output")
        interest(1)
    }
    field(BOUT, DBF_CHAR) {
        interest(1)
        prompt("Output binary data")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(OPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *optr")
        prompt("Output buffer pointer")
        interest(4)
    }
    field(OMAX, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Max. size of output array")
        initial("80")
        promptgroup("50 - Output")
    }
    field(NOWT, DBF_LONG) {
        interest(1)
        promptgroup("50 - Output")
        initial("80")
        prompt("Number of bytes to write")
    }
    field(NAWT, DBF_LONG) {
        interest(1)
        prompt("Number of bytes actually written")
    }
    field(OFMT, DBF_MENU) {
        promptgroup("50 - Output")
        prompt("Output format")
        interest(1)
        menu(asynFMT)
    }
    field(AINP, DBF_STRING) {
        prompt("Input (response) string")
        size(40)
        interest(1)
        special(SPC_NOMOD)
    }
    field(TINP, DBF_STRING) {
        special(SPC_NOMOD)
        size(40)
        prompt("Translated input string")
        asl(ASL0)
        interest(1)
    }
    field(IEOS, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("40 - Input")
        prompt("Input Delimiter")
        special(SPC_MOD)
    }
    field(BINP, DBF_CHAR) {
        special(SPC_DBADDR)
        prompt("Input binary data")
        asl(ASL0)
    }
    field(IPTR, DBF_NOACCESS) {
        size(4)
        extra("void *iptr")
        prompt("Input buffer pointer")
        interest(4)
        special(SPC_NOMOD)
    }
    field(IMAX, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("80")
        prompt("Max. size of input array")
        promptgroup("40 - Input")
    }
    field(NRRD, DBF_LONG) {
        promptgroup("40 - Input")
        prompt("Number of bytes to read")
        interest(1)
    }
    field(NORD, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Number of bytes read")
    }
    field(IFMT, DBF_MENU) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input format")
        menu(asynFMT)
    }
    field(EOMR, DBF_MENU) {
        interest(1)
        prompt("EOM reason")
        menu(asynEOMREASON)
        special(SPC_NOMOD)
    }
    field(I32INP, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("asynInt32 input")
        interest(2)
    }
    field(I32OUT, DBF_LONG) {
        pp(TRUE)
        interest(2)
        promptgroup("50 - Output")
        prompt("asynInt32 output")
    }
    field(UI32INP, DBF_ULONG) {
        interest(2)
        prompt("asynUInt32Digital input")
        special(SPC_NOMOD)
    }
    field(UI32OUT, DBF_ULONG) {
        pp(TRUE)
        interest(2)
        promptgroup("50 - Output")
        prompt("asynUInt32Digital output")
    }
    field(UI32MASK, DBF_ULONG) {
        interest(2)
        promptgroup("50 - Output")
        prompt("asynUInt32Digital mask")
        initial("0xffffffff")
        special(SPC_MOD)
    }
    field(F64INP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(2)
        prompt("asynFloat64 input")
    }
    field(F64OUT, DBF_DOUBLE) {
        pp(TRUE)
        interest(2)
        prompt("asynFloat64 output")
        promptgroup("50 - Output")
    }
    field(BAUD, DBF_MENU) {
        special(SPC_MOD)
        menu(serialBAUD)
        prompt("Baud rate")
        promptgroup("40 - Input")
        interest(2)
    }
    field(LBAUD, DBF_LONG) {
        prompt("Baud rate")
        promptgroup("40 - Input")
        interest(2)
        special(SPC_MOD)
    }
    field(PRTY, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        prompt("Parity")
        menu(serialPRTY)
        special(SPC_MOD)
    }
    field(DBIT, DBF_MENU) {
        special(SPC_MOD)
        menu(serialDBIT)
        prompt("Data bits")
        promptgroup("40 - Input")
        interest(2)
    }
    field(SBIT, DBF_MENU) {
        promptgroup("40 - Input")
        prompt("Stop bits")
        interest(2)
        menu(serialSBIT)
        special(SPC_MOD)
    }
    field(MCTL, DBF_MENU) {
        promptgroup("40 - Input")
        prompt("Modem control")
        interest(2)
        menu(serialMCTL)
        special(SPC_MOD)
    }
    field(FCTL, DBF_MENU) {
        promptgroup("40 - Input")
        prompt("Flow control")
        interest(2)
        menu(serialFCTL)
        special(SPC_MOD)
    }
    field(IXON, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        prompt("Output XON/XOFF")
        menu(serialIX)
        special(SPC_MOD)
    }
    field(IXOFF, DBF_MENU) {
        interest(2)
        promptgroup("40 - Input")
        prompt("Input XON/XOFF")
        menu(serialIX)
        special(SPC_MOD)
    }
    field(IXANY, DBF_MENU) {
        special(SPC_MOD)
        menu(serialIX)
        prompt("XON=any character")
        promptgroup("40 - Input")
        interest(2)
    }
    field(HOSTINFO, DBF_STRING) {
        size(40)
        promptgroup("40 - Input")
        initial("")
        prompt("host info")
        interest(1)
        special(SPC_MOD)
    }
    field(DRTO, DBF_MENU) {
        menu(ipDRTO)
        special(SPC_MOD)
        promptgroup("40 - Input")
        prompt("Disconnect on timeout")
        interest(2)
    }
    field(UCMD, DBF_MENU) {
        pp(TRUE)
        menu(gpibUCMD)
        prompt("Universal command")
        promptgroup("50 - Output")
        interest(2)
    }
    field(ACMD, DBF_MENU) {
        prompt("Addressed command")
        promptgroup("50 - Output")
        interest(2)
        pp(TRUE)
        menu(gpibACMD)
    }
    field(SPR, DBF_UCHAR) {
        prompt("Serial poll response")
        interest(2)
        special(SPC_NOMOD)
    }
    field(TMSK, DBF_LONG) {
        special(SPC_MOD)
        prompt("Trace mask")
        promptgroup("80 - Display")
        interest(1)
    }
    field(TB0, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace error")
    }
    field(TB1, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace IO device")
        menu(asynTRACE)
        special(SPC_MOD)
    }
    field(TB2, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace IO filter")
    }
    field(TB3, DBF_MENU) {
        promptgroup("80 - Display")
        prompt("Trace IO driver")
        interest(1)
        menu(asynTRACE)
        special(SPC_MOD)
    }
    field(TB4, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        promptgroup("80 - Display")
        prompt("Trace flow")
        interest(1)
    }
    field(TB5, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace warning")
    }
    field(TIOM, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace I/O mask")
        special(SPC_MOD)
    }
    field(TIB0, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace IO ASCII")
    }
    field(TIB1, DBF_MENU) {
        menu(asynTRACE)
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace IO escape")
    }
    field(TIB2, DBF_MENU) {
        promptgroup("80 - Display")
        prompt("Trace IO hex")
        interest(1)
        menu(asynTRACE)
        special(SPC_MOD)
    }
    field(TINM, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        prompt("Trace Info mask")
        promptgroup("80 - Display")
    }
    field(TINB0, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace Info Time")
        menu(asynTRACE)
        special(SPC_MOD)
    }
    field(TINB1, DBF_MENU) {
        prompt("Trace Info Port")
        promptgroup("80 - Display")
        interest(1)
        special(SPC_MOD)
        menu(asynTRACE)
    }
    field(TINB2, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace Info Source")
        menu(asynTRACE)
        special(SPC_MOD)
    }
    field(TINB3, DBF_MENU) {
        special(SPC_MOD)
        menu(asynTRACE)
        interest(1)
        prompt("Trace Info Thread")
        promptgroup("80 - Display")
    }
    field(TSIZ, DBF_LONG) {
        special(SPC_MOD)
        interest(1)
        promptgroup("80 - Display")
        prompt("Trace IO truncate size")
    }
    field(TFIL, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        size(40)
        promptgroup("80 - Display")
        prompt("Trace IO file")
    }
    field(AUCT, DBF_MENU) {
        promptgroup("40 - Input")
        prompt("Autoconnect")
        interest(1)
        menu(asynAUTOCONNECT)
        special(SPC_MOD)
    }
    field(CNCT, DBF_MENU) {
        promptgroup("40 - Input")
        prompt("Connect/Disconnect")
        interest(1)
        menu(asynCONNECT)
        special(SPC_MOD)
    }
    field(ENBL, DBF_MENU) {
        menu(asynENABLE)
        special(SPC_MOD)
        interest(1)
        promptgroup("40 - Input")
        prompt("Enable/Disable")
    }
    field(ERRS, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(4)
        prompt("Error string")
        extra("char *errs")
    }
    field(AQR, DBF_UCHAR) {
        prompt("Abort queueRequest")
        interest(4)
        special(SPC_MOD)
    }
}
device(asyn, INST_IO, asynRecordDevice, "asynRecordDevice")
recordtype(aao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        extra("void *		val")
        prompt("Value")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(NELM, DBF_ULONG) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Number of Elements")
        initial("1")
        special(SPC_NOMOD)
    }
    field(FTVL, DBF_MENU) {
        interest(1)
        prompt("Field Type of Value")
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *		bptr")
        prompt("Buffer Pointer")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
    }
    field(SIOL, DBF_OUTLINK) {
        prompt("Sim Output Specifctn")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(MPST, DBF_MENU) {
        promptgroup("80 - Display")
        prompt("Post Value Monitors")
        interest(1)
        menu(aaoPOST)
    }
    field(APST, DBF_MENU) {
        promptgroup("80 - Display")
        prompt("Post Archive Monitors")
        interest(1)
        menu(aaoPOST)
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(aao, CONSTANT, devAaoSoft, "Soft Channel")
recordtype(mbbi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        asl(ASL0)
        prompt("Current Value")
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(NOBT, DBF_USHORT) {
        interest(1)
        prompt("Number of Bits")
        promptgroup("40 - Input")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(ZRVL, DBF_ULONG) {
        prompt("Zero Value")
        promptgroup("41 - Input 0-7")
        interest(1)
        base(HEX)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(ONVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        prompt("One Value")
        promptgroup("41 - Input 0-7")
        interest(1)
        base(HEX)
    }
    field(TWVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        base(HEX)
        prompt("Two Value")
        promptgroup("41 - Input 0-7")
    }
    field(THVL, DBF_ULONG) {
        base(HEX)
        interest(1)
        promptgroup("41 - Input 0-7")
        prompt("Three Value")
        pp(TRUE)
        special(SPC_MOD)
    }
    field(FRVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Four Value")
        promptgroup("41 - Input 0-7")
        interest(1)
        base(HEX)
    }
    field(FVVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Five Value")
        promptgroup("41 - Input 0-7")
        interest(1)
        base(HEX)
    }
    field(SXVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        interest(1)
        promptgroup("41 - Input 0-7")
        prompt("Six Value")
    }
    field(SVVL, DBF_ULONG) {
        interest(1)
        base(HEX)
        prompt("Seven Value")
        promptgroup("41 - Input 0-7")
        pp(TRUE)
        special(SPC_MOD)
    }
    field(EIVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        interest(1)
        promptgroup("42 - Input 8-15")
        prompt("Eight Value")
    }
    field(NIVL, DBF_ULONG) {
        interest(1)
        base(HEX)
        prompt("Nine Value")
        promptgroup("42 - Input 8-15")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(TEVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        interest(1)
        promptgroup("42 - Input 8-15")
        prompt("Ten Value")
    }
    field(ELVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        prompt("Eleven Value")
        promptgroup("42 - Input 8-15")
        interest(1)
        base(HEX)
    }
    field(TVVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Twelve Value")
        promptgroup("42 - Input 8-15")
        interest(1)
        base(HEX)
    }
    field(TTVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        base(HEX)
        prompt("Thirteen Value")
        promptgroup("42 - Input 8-15")
    }
    field(FTVL, DBF_ULONG) {
        promptgroup("42 - Input 8-15")
        prompt("Fourteen Value")
        base(HEX)
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(FFVL, DBF_ULONG) {
        base(HEX)
        interest(1)
        promptgroup("42 - Input 8-15")
        prompt("Fifteen Value")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(ZRST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        size(26)
        prompt("Zero String")
        interest(1)
    }
    field(ONST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        prompt("One String")
        size(26)
        promptgroup("81 - Display 0-7")
    }
    field(TWST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        size(26)
        promptgroup("81 - Display 0-7")
        prompt("Two String")
        interest(1)
    }
    field(THST, DBF_STRING) {
        prompt("Three String")
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(FRST, DBF_STRING) {
        prompt("Four String")
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(FVST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        promptgroup("81 - Display 0-7")
        size(26)
        prompt("Five String")
    }
    field(SXST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        prompt("Six String")
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
    }
    field(SVST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        size(26)
        promptgroup("81 - Display 0-7")
        prompt("Seven String")
        interest(1)
    }
    field(EIST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("82 - Display 8-15")
        size(26)
        prompt("Eight String")
    }
    field(NIST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        prompt("Nine String")
        promptgroup("82 - Display 8-15")
        size(26)
    }
    field(TEST, DBF_STRING) {
        prompt("Ten String")
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(ELST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
        prompt("Eleven String")
    }
    field(TVST, DBF_STRING) {
        prompt("Twelve String")
        size(26)
        promptgroup("82 - Display 8-15")
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(TTST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
        prompt("Thirteen String")
    }
    field(FTST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        size(26)
        prompt("Fourteen String")
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(FFST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        size(26)
        promptgroup("82 - Display 8-15")
        prompt("Fifteen String")
    }
    field(ZRSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Zero Severity")
    }
    field(ONSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State One Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(TWSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Two Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(THSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Three Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(FRSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Four Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(FVSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("71 - Alarm 0-7")
        prompt("State Five Severity")
        interest(1)
    }
    field(SXSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        prompt("State Six Severity")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(SVSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        prompt("State Seven Severity")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(EISV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        prompt("State Eight Severity")
        interest(1)
    }
    field(NISV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        prompt("State Nine Severity")
        interest(1)
    }
    field(TESV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Ten Severity")
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(ELSV, DBF_MENU) {
        promptgroup("72 - Alarm 8-15")
        prompt("State Eleven Severity")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(TVSV, DBF_MENU) {
        interest(1)
        prompt("State Twelve Severity")
        promptgroup("72 - Alarm 8-15")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(TTSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        prompt("State Thirteen Sevr")
        interest(1)
    }
    field(FTSV, DBF_MENU) {
        promptgroup("72 - Alarm 8-15")
        prompt("State Fourteen Sevr")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(FFSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Fifteen Severity")
    }
    field(AFTC, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Filter Time Constant")
        interest(1)
    }
    field(AFVL, DBF_DOUBLE) {
        interest(3)
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
    }
    field(UNSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prompt("Unknown State Severity")
        promptgroup("70 - Alarm")
    }
    field(COSV, DBF_MENU) {
        interest(1)
        prompt("Change of State Svr")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        interest(1)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        interest(3)
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SDEF, DBF_SHORT) {
        interest(3)
        prompt("States Defined")
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        promptgroup("40 - Input")
        interest(1)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(1)
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuSimm)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
}
device(mbbi, CONSTANT, devMbbiSoft, "Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftRaw, "Raw Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftCallback, "Async Soft Channel")
device(mbbi, INST_IO, asynMbbiInt32, "asynInt32")
device(mbbi, INST_IO, asynMbbiUInt32Digital, "asynUInt32Digital")
device(mbbi, GPIB_IO, devMbbiTestGpib, "GPIB Test")
recordtype(subArray) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        extra("void *		val")
        prompt("Value")
        pp(TRUE)
        special(SPC_DBADDR)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(FTVL, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        prompt("Field Type of Value")
        interest(1)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input Specification")
    }
    field(EGU, DBF_STRING) {
        interest(1)
        prop(YES)
        prompt("Engineering Units")
        promptgroup("80 - Display")
        size(16)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(MALM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("30 - Action")
        prompt("Maximum Elements")
        initial("1")
    }
    field(NELM, DBF_ULONG) {
        prompt("Number of Elements")
        initial("1")
        promptgroup("30 - Action")
        pp(TRUE)
    }
    field(INDX, DBF_ULONG) {
        promptgroup("30 - Action")
        prompt("Substring Index")
        pp(TRUE)
    }
    field(BUSY, DBF_SHORT) {
        prompt("Busy Indicator")
        special(SPC_NOMOD)
    }
    field(NORD, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *		bptr")
        prompt("Buffer Pointer")
    }
}
device(subArray, CONSTANT, devSASoft, "Soft Channel")
recordtype(event) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "dbScan.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_STRING) {
        promptgroup("40 - Input")
        size(40)
        prompt("Event Name To Post")
        asl(ASL0)
        special(SPC_MOD)
    }
    field(EPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Event private")
        extra("EVENTPVT epvt")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input Specification")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_STRING) {
        size(40)
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
}
device(event, CONSTANT, devEventSoft, "Soft Channel")
recordtype(state) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        asl(ASL0)
        prompt("Value")
        size(20)
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(OVAL, DBF_STRING) {
        special(SPC_NOMOD)
        size(20)
        prompt("Prev Value")
        interest(3)
    }
}
recordtype(dfanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        promptgroup("40 - Input")
        prompt("Desired Output")
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        interest(1)
        prompt("Select Mechanism")
        promptgroup("30 - Action")
        menu(dfanoutSELM)
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        initial("1")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        interest(1)
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
    }
    field(OUTA, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Spec A")
        interest(1)
    }
    field(OUTB, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Spec B")
        interest(1)
    }
    field(OUTC, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Spec C")
        interest(1)
    }
    field(OUTD, DBF_OUTLINK) {
        interest(1)
        prompt("Output Spec D")
        promptgroup("50 - Output")
    }
    field(OUTE, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Spec E")
        interest(1)
    }
    field(OUTF, DBF_OUTLINK) {
        prompt("Output Spec F")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTG, DBF_OUTLINK) {
        prompt("Output Spec G")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUTH, DBF_OUTLINK) {
        interest(1)
        prompt("Output Spec H")
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
    }
    field(OMSL, DBF_MENU) {
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
        menu(menuOmsl)
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        prompt("Engineering Units")
        prop(YES)
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
        prop(YES)
        interest(1)
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        prop(YES)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        interest(1)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prop(YES)
        prompt("Low Severity")
        promptgroup("70 - Alarm")
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Archived")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
}
recordtype(ao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        prompt("Undefined")
        initial("1")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        asl(ASL0)
        prompt("Desired Output")
        promptgroup("50 - Output")
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(OROC, DBF_DOUBLE) {
        interest(1)
        prompt("Output Rate of Change")
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
        menu(menuOmsl)
    }
    field(OIF, DBF_MENU) {
        menu(aoOIF)
        interest(1)
        prompt("Out Full/Incremental")
        promptgroup("50 - Output")
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(LINR, DBF_MENU) {
        prompt("Linearization")
        promptgroup("60 - Convert")
        interest(1)
        special(SPC_LINCONV)
        pp(TRUE)
        menu(menuConvert)
    }
    field(EGUF, DBF_DOUBLE) {
        interest(1)
        promptgroup("60 - Convert")
        prompt("Eng Units Full")
        special(SPC_LINCONV)
        pp(TRUE)
    }
    field(EGUL, DBF_DOUBLE) {
        interest(1)
        promptgroup("60 - Convert")
        prompt("Eng Units Low")
        pp(TRUE)
        special(SPC_LINCONV)
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
        prop(YES)
        interest(1)
    }
    field(ROFF, DBF_ULONG) {
        pp(TRUE)
        interest(2)
        prompt("Raw Offset")
    }
    field(EOFF, DBF_DOUBLE) {
        pp(TRUE)
        interest(2)
        promptgroup("60 - Convert")
        prompt("EGU to Raw Offset")
    }
    field(ESLO, DBF_DOUBLE) {
        interest(2)
        initial("1")
        prompt("EGU to Raw Slope")
        promptgroup("60 - Convert")
        pp(TRUE)
    }
    field(DRVH, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Drive High Limit")
        promptgroup("30 - Action")
        interest(1)
        prop(YES)
    }
    field(DRVL, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("Drive Low Limit")
        promptgroup("30 - Action")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(AOFF, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prompt("Adjustment Offset")
        promptgroup("60 - Convert")
    }
    field(ASLO, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Adjustment Slope")
        interest(1)
        pp(TRUE)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        prop(YES)
        interest(1)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        prop(YES)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
        prop(YES)
        interest(1)
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
    }
    field(RVAL, DBF_LONG) {
        prompt("Current Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous Raw Value")
    }
    field(RBV, DBF_LONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Readback Value")
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Archived")
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
    }
    field(PBRK, DBF_NOACCESS) {
        extra("void *   pbrk")
        prompt("Ptrto brkTable")
        interest(4)
        special(SPC_NOMOD)
    }
    field(INIT, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Initialized?")
        interest(3)
    }
    field(LBRK, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("LastBreak Point")
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        prompt("INVALID output action")
        interest(2)
    }
    field(IVOV, DBF_DOUBLE) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
    field(OMOD, DBF_UCHAR) {
        prompt("Was OVAL modified?")
        special(SPC_NOMOD)
    }
}
device(ao, CONSTANT, devAoSoft, "Soft Channel")
device(ao, CONSTANT, devAoSoftRaw, "Raw Soft Channel")
device(ao, CONSTANT, devAoSoftCallback, "Async Soft Channel")
device(ao, INST_IO, asynAoInt32, "asynInt32")
device(ao, INST_IO, asynAoFloat64, "asynFloat64")
device(ao, GPIB_IO, devAoTestGpib, "GPIB Test")
recordtype(longin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        promptgroup("40 - Input")
        prompt("Current value")
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        prompt("Engineering Units")
        prop(YES)
        interest(1)
    }
    field(HOPR, DBF_LONG) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(HIHI, DBF_LONG) {
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LOLO, DBF_LONG) {
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_LONG) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        prop(YES)
        interest(1)
    }
    field(LOW, DBF_LONG) {
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("High Severity")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_LONG) {
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(AFVL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Alarm Filter Value")
        interest(3)
    }
    field(ADEL, DBF_LONG) {
        interest(1)
        prompt("Archive Deadband")
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
        interest(1)
    }
    field(LALM, DBF_LONG) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(1)
    }
    field(SVAL, DBF_LONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
    }
}
device(longin, CONSTANT, devLiSoft, "Soft Channel")
device(longin, CONSTANT, devLiSoftCallback, "Async Soft Channel")
device(longin, INST_IO, devLiGeneralTime, "General Time")
device(longin, INST_IO, asynLiInt32, "asynInt32")
device(longin, INST_IO, asynLiUInt32Digital, "asynUInt32Digital")
device(longin, GPIB_IO, devLiTestGpib, "GPIB Test")
recordtype(longout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        pp(TRUE)
        promptgroup("50 - Output")
        prompt("Desired Output")
        asl(ASL0)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        interest(1)
        promptgroup("50 - Output")
        prompt("Output Mode Select")
        menu(menuOmsl)
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
    }
    field(DRVH, DBF_LONG) {
        pp(TRUE)
        prompt("Drive High Limit")
        promptgroup("30 - Action")
        interest(1)
        prop(YES)
    }
    field(DRVL, DBF_LONG) {
        prompt("Drive Low Limit")
        promptgroup("30 - Action")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(HOPR, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_LONG) {
        prompt("Low Operating Range")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(HIHI, DBF_LONG) {
        promptgroup("70 - Alarm")
        prompt("Hihi Alarm Limit")
        prop(YES)
        interest(1)
        pp(TRUE)
    }
    field(LOLO, DBF_LONG) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
        prop(YES)
        interest(1)
    }
    field(HIGH, DBF_LONG) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("High Alarm Limit")
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_LONG) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("High Severity")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Low Severity")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(HYST, DBF_LONG) {
        interest(1)
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("Archive Deadband")
        interest(1)
    }
    field(MDEL, DBF_LONG) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
    }
    field(LALM, DBF_LONG) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        interest(3)
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        interest(2)
        menu(menuAlarmSevr)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output action")
    }
    field(IVOV, DBF_LONG) {
        prompt("INVALID output value")
        promptgroup("50 - Output")
        interest(2)
    }
}
device(longout, CONSTANT, devLoSoft, "Soft Channel")
device(longout, CONSTANT, devLoSoftCallback, "Async Soft Channel")
device(longout, INST_IO, asynLoInt32, "asynInt32")
device(longout, INST_IO, asynLoUInt32Digital, "asynUInt32Digital")
device(longout, GPIB_IO, devLoTestGpib, "GPIB Test")
recordtype(histogram) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("struct dset         *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value")
        extra("void *	val")
    }
    field(NELM, DBF_USHORT) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Num of Array Elements")
        initial("1")
        special(SPC_NOMOD)
    }
    field(CSTA, DBF_SHORT) {
        interest(1)
        initial("1")
        prompt("Collection Status")
        special(SPC_NOMOD)
    }
    field(CMD, DBF_MENU) {
        special(SPC_CALC)
        menu(histogramCMD)
        interest(1)
        asl(ASL0)
        prompt("Collection Control")
    }
    field(ULIM, DBF_DOUBLE) {
        special(SPC_RESET)
        prompt("Upper Signal Limit")
        promptgroup("30 - Action")
        interest(1)
        prop(YES)
    }
    field(LLIM, DBF_DOUBLE) {
        promptgroup("30 - Action")
        prompt("Lower Signal Limit ")
        prop(YES)
        interest(1)
        special(SPC_RESET)
    }
    field(WDTH, DBF_DOUBLE) {
        prompt("Element Width")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SGNL, DBF_DOUBLE) {
        prompt("Signal Value")
        special(SPC_MOD)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(SVL, DBF_INLINK) {
        prompt("Signal Value Location")
        promptgroup("40 - Input")
        interest(1)
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("epicsUInt32 *bptr")
        prompt("Buffer Pointer")
    }
    field(WDOG, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void *  wdog")
        prompt("Watchdog callback")
    }
    field(MDEL, DBF_SHORT) {
        prompt("Monitor Count Deadband")
        promptgroup("80 - Display")
        interest(1)
    }
    field(MCNT, DBF_SHORT) {
        prompt("Counts Since Monitor")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SDEL, DBF_DOUBLE) {
        prompt("Monitor Seconds Dband")
        promptgroup("80 - Display")
        interest(1)
        special(SPC_RESET)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        interest(2)
        menu(menuAlarmSevr)
    }
    field(HOPR, DBF_ULONG) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_ULONG) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
}
device(histogram, CONSTANT, devHistogramSoft, "Soft Channel")
recordtype(permissive) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("char                bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(LABL, DBF_STRING) {
        pp(TRUE)
        interest(1)
        prompt("Button Label")
        promptgroup("80 - Display")
        size(20)
    }
    field(VAL, DBF_USHORT) {
        asl(ASL0)
        prompt("Status")
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(OVAL, DBF_USHORT) {
        prompt("Old Status")
        interest(3)
        special(SPC_NOMOD)
    }
    field(WFLG, DBF_USHORT) {
        pp(TRUE)
        prompt("Wait Flag")
    }
    field(OFLG, DBF_USHORT) {
        interest(3)
        prompt("Old Flag")
        special(SPC_NOMOD)
    }
}
recordtype(seq) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("char                bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        prompt("Used to trigger")
        asl(ASL0)
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        menu(seqSELM)
        interest(1)
        promptgroup("30 - Action")
        prompt("Select Mechanism")
    }
    field(SELN, DBF_USHORT) {
        interest(1)
        initial("1")
        prompt("Link Selection")
    }
    field(SELL, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Link Selection Loc")
    }
    field(OFFS, DBF_SHORT) {
        interest(1)
        prompt("Offset for Specified")
        initial("0")
        promptgroup("30 - Action")
    }
    field(SHFT, DBF_SHORT) {
        interest(1)
        prompt("Shift for Mask mode")
        initial("-1")
        promptgroup("30 - Action")
    }
    field(OLDN, DBF_USHORT) {
        prompt("Old Selection")
        interest(4)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(DLY0, DBF_DOUBLE) {
        prompt("Delay 0")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL0, DBF_INLINK) {
        interest(1)
        prompt("Input link 0")
        promptgroup("41 - Link 0-7")
    }
    field(DO0, DBF_DOUBLE) {
        prompt("Value 0")
        interest(1)
    }
    field(LNK0, DBF_OUTLINK) {
        prompt("Output Link 0")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY1, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        prompt("Delay 1")
        interest(1)
    }
    field(DOL1, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link1")
    }
    field(DO1, DBF_DOUBLE) {
        interest(1)
        prompt("Value 1")
    }
    field(LNK1, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 1")
    }
    field(DLY2, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        prompt("Delay 2")
        interest(1)
    }
    field(DOL2, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Input link 2")
        interest(1)
    }
    field(DO2, DBF_DOUBLE) {
        prompt("Value 2")
        interest(1)
    }
    field(LNK2, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Output Link 2")
        interest(1)
    }
    field(DLY3, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        prompt("Delay 3")
        interest(1)
    }
    field(DOL3, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 3")
    }
    field(DO3, DBF_DOUBLE) {
        prompt("Value 3")
        interest(1)
    }
    field(LNK3, DBF_OUTLINK) {
        prompt("Output Link 3")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DLY4, DBF_DOUBLE) {
        prompt("Delay 4")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL4, DBF_INLINK) {
        prompt("Input link 4")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO4, DBF_DOUBLE) {
        prompt("Value 4")
        interest(1)
    }
    field(LNK4, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 4")
    }
    field(DLY5, DBF_DOUBLE) {
        prompt("Delay 5")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL5, DBF_INLINK) {
        prompt("Input link 5")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO5, DBF_DOUBLE) {
        interest(1)
        prompt("Value 5")
    }
    field(LNK5, DBF_OUTLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Output Link 5")
    }
    field(DLY6, DBF_DOUBLE) {
        prompt("Delay 6")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DOL6, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Link 0-7")
        prompt("Input link 6")
    }
    field(DO6, DBF_DOUBLE) {
        interest(1)
        prompt("Value 6")
    }
    field(LNK6, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 6")
        promptgroup("41 - Link 0-7")
    }
    field(DLY7, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        prompt("Delay 7")
        interest(1)
    }
    field(DOL7, DBF_INLINK) {
        prompt("Input link 7")
        promptgroup("41 - Link 0-7")
        interest(1)
    }
    field(DO7, DBF_DOUBLE) {
        interest(1)
        prompt("Value 7")
    }
    field(LNK7, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Output Link 7")
        interest(1)
    }
    field(DLY8, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        prompt("Delay 8")
        interest(1)
    }
    field(DOL8, DBF_INLINK) {
        prompt("Input link 8")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DO8, DBF_DOUBLE) {
        interest(1)
        prompt("Value 8")
    }
    field(LNK8, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 8")
    }
    field(DLY9, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        prompt("Delay 9")
        interest(1)
    }
    field(DOL9, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        prompt("Input link 9")
        interest(1)
    }
    field(DO9, DBF_DOUBLE) {
        interest(1)
        prompt("Value 9")
    }
    field(LNK9, DBF_OUTLINK) {
        prompt("Output Link 9")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DLYA, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 10")
    }
    field(DOLA, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Input link 10")
    }
    field(DOA, DBF_DOUBLE) {
        interest(1)
        prompt("Value 10")
    }
    field(LNKA, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 10")
        promptgroup("42 - Link 8-F")
    }
    field(DLYB, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 11")
    }
    field(DOLB, DBF_INLINK) {
        prompt("Input link 11")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOB, DBF_DOUBLE) {
        prompt("Value 11")
        interest(1)
    }
    field(LNKB, DBF_OUTLINK) {
        prompt("Output Link 11")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DLYC, DBF_DOUBLE) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Delay 12")
    }
    field(DOLC, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        prompt("Input link 12")
        interest(1)
    }
    field(DOC, DBF_DOUBLE) {
        prompt("Value 12")
        interest(1)
    }
    field(LNKC, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 12")
    }
    field(DLYD, DBF_DOUBLE) {
        prompt("Delay 13")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOLD, DBF_INLINK) {
        prompt("Input link 13")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOD, DBF_DOUBLE) {
        prompt("Value 13")
        interest(1)
    }
    field(LNKD, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 13")
        promptgroup("42 - Link 8-F")
    }
    field(DLYE, DBF_DOUBLE) {
        prompt("Delay 14")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOLE, DBF_INLINK) {
        interest(1)
        prompt("Input link 14")
        promptgroup("42 - Link 8-F")
    }
    field(DOE, DBF_DOUBLE) {
        prompt("Value 14")
        interest(1)
    }
    field(LNKE, DBF_OUTLINK) {
        interest(1)
        promptgroup("42 - Link 8-F")
        prompt("Output Link 14")
    }
    field(DLYF, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        prompt("Delay 15")
        interest(1)
    }
    field(DOLF, DBF_INLINK) {
        prompt("Input link 15")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
    field(DOF, DBF_DOUBLE) {
        prompt("Value 15")
        interest(1)
    }
    field(LNKF, DBF_OUTLINK) {
        prompt("Output Link 15")
        promptgroup("42 - Link 8-F")
        interest(1)
    }
}
recordtype(compress) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Undefined")
        initial("1")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        extra("void *		val")
        prompt("Value")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(RES, DBF_SHORT) {
        interest(3)
        asl(ASL0)
        prompt("Reset")
        special(SPC_RESET)
    }
    field(ALG, DBF_MENU) {
        interest(1)
        prompt("Compression Algorithm")
        promptgroup("30 - Action")
        special(SPC_RESET)
        menu(compressALG)
    }
    field(NSAM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Number of Values")
        promptgroup("30 - Action")
    }
    field(N, DBF_ULONG) {
        special(SPC_RESET)
        initial("1")
        prompt("N to 1 Compression")
        promptgroup("30 - Action")
        interest(1)
    }
    field(IHIL, DBF_DOUBLE) {
        interest(1)
        prompt("Init High Interest Lim")
        promptgroup("30 - Action")
    }
    field(ILIL, DBF_DOUBLE) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Init Low Interest Lim")
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prompt("Display Precision")
        prop(YES)
        interest(1)
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prop(YES)
    }
    field(OFF, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Offset")
    }
    field(NUSE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number Used")
    }
    field(OUSE, DBF_ULONG) {
        prompt("Old Number Used")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        extra("double		*bptr")
        prompt("Buffer Pointer")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPTR, DBF_NOACCESS) {
        prompt("Summing Buffer Ptr")
        extra("double		*sptr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(WPTR, DBF_NOACCESS) {
        extra("double		*wptr")
        prompt("Working Buffer Ptr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(INPN, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Number of elements in Working Buffer")
        interest(4)
    }
    field(CVB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Compress Value Buffer")
        interest(3)
    }
    field(INX, DBF_ULONG) {
        interest(3)
        prompt("Compressed Array Inx")
        special(SPC_NOMOD)
    }
}
recordtype(fanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Used to trigger")
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        promptgroup("30 - Action")
        interest(1)
        menu(fanoutSELM)
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        initial("1")
        interest(1)
    }
    field(SELL, DBF_INLINK) {
        interest(1)
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
    }
    field(OFFS, DBF_SHORT) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Offset for Specified")
        initial("0")
    }
    field(SHFT, DBF_SHORT) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Shift for Mask mode")
        initial("-1")
    }
    field(LNK0, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 0")
        promptgroup("51 - Output 0-7")
    }
    field(LNK1, DBF_FWDLINK) {
        prompt("Forward Link 1")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK2, DBF_FWDLINK) {
        prompt("Forward Link 2")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK3, DBF_FWDLINK) {
        prompt("Forward Link 3")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK4, DBF_FWDLINK) {
        prompt("Forward Link 4")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(LNK5, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        prompt("Forward Link 5")
        interest(1)
    }
    field(LNK6, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 6")
        promptgroup("51 - Output 0-7")
    }
    field(LNK7, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        prompt("Forward Link 7")
        interest(1)
    }
    field(LNK8, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 8")
        promptgroup("52 - Output 8-F")
    }
    field(LNK9, DBF_FWDLINK) {
        interest(1)
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 9")
    }
    field(LNKA, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 10")
        interest(1)
    }
    field(LNKB, DBF_FWDLINK) {
        prompt("Forward Link 11")
        promptgroup("52 - Output 8-F")
        interest(1)
    }
    field(LNKC, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 12")
        interest(1)
    }
    field(LNKD, DBF_FWDLINK) {
        interest(1)
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 13")
    }
    field(LNKE, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 14")
        interest(1)
    }
    field(LNKF, DBF_FWDLINK) {
        interest(1)
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 15")
    }
}
recordtype(lso) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "devSup.h"
    %
    %/* Declare Device Support Entry Table */
    %typedef struct lsodset {
    %    long number;
    %    DEVSUPFUN report;
    %    DEVSUPFUN init;
    %    DEVSUPFUN init_record;
    %    DEVSUPFUN get_ioint_info;
    %    DEVSUPFUN write_string;
    %} lsodset;
    %
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        size(29)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("char                bkpt")
        prompt("Break Point")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        pp(TRUE)
        asl(ASL0)
        prompt("Current Value")
        extra("char *val")
    }
    field(OVAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(3)
        prompt("Previous Value")
        extra("char *oval")
    }
    field(SIZV, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("50 - Output")
        initial("41")
        prompt("Size of buffers")
    }
    field(LEN, DBF_ULONG) {
        prompt("Length of VAL")
        special(SPC_NOMOD)
    }
    field(OLEN, DBF_ULONG) {
        interest(3)
        prompt("Length of OVAL")
        special(SPC_NOMOD)
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Link")
        interest(1)
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        prompt("INVALID Output Action")
        promptgroup("50 - Output")
        menu(menuIvoa)
    }
    field(IVOV, DBF_STRING) {
        prompt("INVALID Output Value")
        size(40)
        promptgroup("50 - Output")
        interest(2)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        promptgroup("80 - Display")
        interest(1)
        menu(menuPost)
    }
    field(APST, DBF_MENU) {
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Archive Monitors")
        menu(menuPost)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Mode link")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        interest(2)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
    }
}
device(lso, CONSTANT, devLsoSoft, "Soft Channel")
device(lso, CONSTANT, devLsoSoftCallback, "Async Soft Channel")
device(lso, INST_IO, devLsoStdio, "stdio")
recordtype(calcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "dbScan.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        extra("struct rset         *rset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        extra("struct dset         *dset")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(RPVT, DBF_NOACCESS) {
        extra("struct rpvtStruct *rpvt")
        prompt("Record Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        promptgroup("50 - Output")
        prompt("Result")
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(CALC, DBF_STRING) {
        size(80)
        promptgroup("30 - Action")
        initial("0")
        prompt("Calculation")
        pp(TRUE)
        special(SPC_CALC)
    }
    field(CLCV, DBF_LONG) {
        interest(1)
        prompt("CALC Valid")
    }
    field(INPA, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        special(SPC_MOD)
        prompt("Input C")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input D")
        interest(1)
        special(SPC_MOD)
    }
    field(INPE, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        prompt("Input E")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input F")
        interest(1)
        special(SPC_MOD)
    }
    field(INPG, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        prompt("Input G")
        promptgroup("42 - Input G-L")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        promptgroup("42 - Input G-L")
        interest(1)
        special(SPC_MOD)
    }
    field(INPI, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        prompt("Input I")
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input J")
        interest(1)
        special(SPC_MOD)
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input K")
        special(SPC_MOD)
    }
    field(INPL, DBF_INLINK) {
        special(SPC_MOD)
        interest(1)
        prompt("Input L")
        promptgroup("42 - Input G-L")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        promptgroup("50 - Output")
        interest(1)
        special(SPC_MOD)
    }
    field(INAV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
        prompt("INPA PV Status")
        initial("1")
    }
    field(INBV, DBF_MENU) {
        interest(1)
        prompt("INPB PV Status")
        initial("1")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INCV, DBF_MENU) {
        prompt("INPC PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(INDV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        prompt("INPD PV Status")
        initial("1")
        interest(1)
    }
    field(INEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        initial("1")
        prompt("INPE PV Status")
        interest(1)
    }
    field(INFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        interest(1)
        initial("1")
        prompt("INPF PV Status")
    }
    field(INGV, DBF_MENU) {
        prompt("INPG PV Status")
        initial("1")
        interest(1)
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INHV, DBF_MENU) {
        interest(1)
        prompt("INPH PV Status")
        initial("1")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INIV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        prompt("INPI PV Status")
        interest(1)
    }
    field(INJV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        prompt("INPJ PV Status")
        initial("1")
        interest(1)
    }
    field(INKV, DBF_MENU) {
        interest(1)
        prompt("INPK PV Status")
        initial("1")
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(INLV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPL PV Status")
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(OUTV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        prompt("OUT PV Status")
        interest(1)
    }
    field(OOPT, DBF_MENU) {
        prompt("Output Execute Opt")
        promptgroup("50 - Output")
        interest(1)
        menu(calcoutOOPT)
    }
    field(ODLY, DBF_DOUBLE) {
        promptgroup("50 - Output")
        prompt("Output Execute Delay")
        asl(ASL0)
        interest(1)
    }
    field(DLYA, DBF_USHORT) {
        prompt("Output Delay Active")
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(DOPT, DBF_MENU) {
        menu(calcoutDOPT)
        interest(1)
        prompt("Output Data Opt")
        promptgroup("30 - Action")
    }
    field(OCAL, DBF_STRING) {
        special(SPC_CALC)
        pp(TRUE)
        prompt("Output Calculation")
        initial("0")
        promptgroup("30 - Action")
        size(80)
    }
    field(OCLV, DBF_LONG) {
        prompt("OCAL Valid")
        interest(1)
    }
    field(OEVT, DBF_STRING) {
        special(SPC_MOD)
        size(40)
        promptgroup("30 - Action")
        prompt("Event To Issue")
        asl(ASL0)
    }
    field(EPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("EVENTPVT epvt")
        prompt("Event private")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output action")
    }
    field(IVOV, DBF_DOUBLE) {
        promptgroup("50 - Output")
        prompt("INVALID output value")
        interest(2)
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Rng")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Lolo Alarm Limit")
        prop(YES)
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        prompt("High Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        prop(YES)
        prompt("Lolo Severity")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        interest(1)
        prop(YES)
        prompt("High Severity")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        prompt("Archive Deadband")
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(OVAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Output Value")
    }
    field(LA, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of A")
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of B")
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of D")
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of E")
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        prompt("Prev Value of F")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of G")
        interest(3)
    }
    field(LH, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of H")
        special(SPC_NOMOD)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of J")
        special(SPC_NOMOD)
    }
    field(LK, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of K")
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of L")
        interest(3)
    }
    field(POVL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Prev Value of OVAL")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Archived")
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
    }
    field(RPCL, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Reverse Polish Calc")
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
    }
    field(ORPC, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("char	orpc[INFIX_TO_POSTFIX_SIZE(80)]")
        prompt("Reverse Polish OCalc")
    }
}
device(calcout, CONSTANT, devCalcoutSoft, "Soft Channel")
device(calcout, CONSTANT, devCalcoutSoftCallback, "Async Soft Channel")
recordtype(aSub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %struct aSubRecord;
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Subr. return value")
    }
    field(OVAL, DBF_LONG) {
        interest(3)
        prompt("Old return value")
        special(SPC_NOMOD)
    }
    field(INAM, DBF_STRING) {
        prompt("Initialize Subr. Name")
        size(41)
        promptgroup("30 - Action")
        interest(1)
        special(SPC_NOMOD)
    }
    field(LFLG, DBF_MENU) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Subr. Input Enable")
        menu(aSubLFLG)
    }
    field(SUBL, DBF_INLINK) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        prompt("Subroutine Name Link")
        interest(1)
    }
    field(SNAM, DBF_STRING) {
        special(SPC_MOD)
        prompt("Process Subr. Name")
        size(41)
        promptgroup("30 - Action")
        interest(1)
    }
    field(ONAM, DBF_STRING) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        size(41)
        prompt("Old Subr. Name")
        interest(3)
    }
    field(SADR, DBF_NOACCESS) {
        interest(2)
        extra("long (*sadr)(struct aSubRecord *)")
        prompt("Subroutine Address")
        special(SPC_NOMOD)
    }
    field(CADR, DBF_NOACCESS) {
        prompt("Subroutine Cleanup Address")
        extra("void (*cadr)(struct aSubRecord *)")
        interest(2)
        special(SPC_NOMOD)
    }
    field(BRSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Bad Return Severity")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(EFLG, DBF_MENU) {
        menu(aSubEFLG)
        prompt("Output Event Flag")
        initial("1")
        promptgroup("50 - Output")
        interest(1)
    }
    field(INPA, DBF_INLINK) {
        interest(1)
        prompt("Input Link A")
        promptgroup("41 - Input A-G")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        prompt("Input Link B")
        interest(1)
    }
    field(INPC, DBF_INLINK) {
        prompt("Input Link C")
        promptgroup("41 - Input A-G")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Input Link D")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        prompt("Input Link E")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        prompt("Input Link F")
        promptgroup("41 - Input A-G")
    }
    field(INPG, DBF_INLINK) {
        interest(1)
        prompt("Input Link G")
        promptgroup("41 - Input A-G")
    }
    field(INPH, DBF_INLINK) {
        prompt("Input Link H")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Input Link I")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input Link J")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Input Link K")
    }
    field(INPL, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        prompt("Input Link L")
        interest(1)
    }
    field(INPM, DBF_INLINK) {
        prompt("Input Link M")
        promptgroup("42 - Input H-N")
        interest(1)
    }
    field(INPN, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        prompt("Input Link N")
        interest(1)
    }
    field(INPO, DBF_INLINK) {
        interest(1)
        prompt("Input Link O")
        promptgroup("43 - Input O-U")
    }
    field(INPP, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        prompt("Input Link P")
        interest(1)
    }
    field(INPQ, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        prompt("Input Link Q")
        interest(1)
    }
    field(INPR, DBF_INLINK) {
        prompt("Input Link R")
        promptgroup("43 - Input O-U")
        interest(1)
    }
    field(INPS, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        prompt("Input Link S")
        interest(1)
    }
    field(INPT, DBF_INLINK) {
        interest(1)
        prompt("Input Link T")
        promptgroup("43 - Input O-U")
    }
    field(INPU, DBF_INLINK) {
        interest(1)
        prompt("Input Link U")
        promptgroup("43 - Input O-U")
    }
    field(A, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Input value A")
        extra("void *a")
    }
    field(B, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        prompt("Input value B")
        extra("void *b")
        special(SPC_DBADDR)
    }
    field(C, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        extra("void *c")
        prompt("Input value C")
    }
    field(D, DBF_NOACCESS) {
        extra("void *d")
        prompt("Input value D")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(E, DBF_NOACCESS) {
        prompt("Input value E")
        extra("void *e")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(F, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *f")
        prompt("Input value F")
        interest(2)
        asl(ASL0)
    }
    field(G, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Input value G")
        extra("void *g")
    }
    field(H, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        prompt("Input value H")
        extra("void *h")
        special(SPC_DBADDR)
    }
    field(I, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Input value I")
        extra("void *i")
    }
    field(J, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        extra("void *j")
        prompt("Input value J")
    }
    field(K, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        extra("void *k")
        prompt("Input value K")
        special(SPC_DBADDR)
    }
    field(L, DBF_NOACCESS) {
        special(SPC_DBADDR)
        prompt("Input value L")
        extra("void *l")
        interest(2)
        asl(ASL0)
    }
    field(M, DBF_NOACCESS) {
        prompt("Input value M")
        extra("void *m")
        interest(2)
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(N, DBF_NOACCESS) {
        extra("void *n")
        prompt("Input value N")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(O, DBF_NOACCESS) {
        special(SPC_DBADDR)
        prompt("Input value O")
        extra("void *o")
        interest(2)
        asl(ASL0)
    }
    field(P, DBF_NOACCESS) {
        prompt("Input value P")
        extra("void *p")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(Q, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        prompt("Input value Q")
        extra("void *q")
    }
    field(R, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        extra("void *r")
        prompt("Input value R")
    }
    field(S, DBF_NOACCESS) {
        special(SPC_DBADDR)
        prompt("Input value S")
        extra("void *s")
        asl(ASL0)
        interest(2)
    }
    field(T, DBF_NOACCESS) {
        extra("void *t")
        prompt("Input value T")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(U, DBF_NOACCESS) {
        prompt("Input value U")
        extra("void *u")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(FTA, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        prompt("Type of A")
        initial("DOUBLE")
        interest(1)
    }
    field(FTB, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        prompt("Type of B")
        initial("DOUBLE")
        promptgroup("41 - Input A-G")
    }
    field(FTC, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        initial("DOUBLE")
        prompt("Type of C")
        interest(1)
    }
    field(FTD, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of D")
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTE, DBF_MENU) {
        interest(1)
        prompt("Type of E")
        initial("DOUBLE")
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTF, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        prompt("Type of F")
        initial("DOUBLE")
        interest(1)
    }
    field(FTG, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of G")
        promptgroup("41 - Input A-G")
        interest(1)
    }
    field(FTH, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Type of H")
        initial("DOUBLE")
    }
    field(FTI, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        initial("DOUBLE")
        prompt("Type of I")
        promptgroup("42 - Input H-N")
    }
    field(FTJ, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Type of J")
        initial("DOUBLE")
    }
    field(FTK, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of K")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTL, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        prompt("Type of L")
        initial("DOUBLE")
        promptgroup("42 - Input H-N")
    }
    field(FTM, DBF_MENU) {
        prompt("Type of M")
        initial("DOUBLE")
        promptgroup("42 - Input H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTN, DBF_MENU) {
        interest(1)
        promptgroup("42 - Input H-N")
        initial("DOUBLE")
        prompt("Type of N")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTO, DBF_MENU) {
        promptgroup("43 - Input O-U")
        initial("DOUBLE")
        prompt("Type of O")
        interest(1)
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTP, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
        prompt("Type of P")
        initial("DOUBLE")
    }
    field(FTQ, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        prompt("Type of Q")
        initial("DOUBLE")
        promptgroup("43 - Input O-U")
    }
    field(FTR, DBF_MENU) {
        interest(1)
        prompt("Type of R")
        initial("DOUBLE")
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTS, DBF_MENU) {
        prompt("Type of S")
        initial("DOUBLE")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        prompt("Type of T")
        initial("DOUBLE")
        promptgroup("43 - Input O-U")
    }
    field(FTU, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("43 - Input O-U")
        initial("DOUBLE")
        prompt("Type of U")
    }
    field(NOA, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in A")
        promptgroup("41 - Input A-G")
        interest(1)
    }
    field(NOB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Max. elements in B")
        promptgroup("41 - Input A-G")
    }
    field(NOC, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("41 - Input A-G")
        prompt("Max. elements in C")
        initial("1")
    }
    field(NOD, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in D")
        promptgroup("41 - Input A-G")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOE, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        prompt("Max. elements in E")
        initial("1")
        interest(1)
    }
    field(NOF, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in F")
        promptgroup("41 - Input A-G")
        interest(1)
    }
    field(NOG, DBF_ULONG) {
        interest(1)
        promptgroup("41 - Input A-G")
        initial("1")
        prompt("Max. elements in G")
        special(SPC_NOMOD)
    }
    field(NOH, DBF_ULONG) {
        interest(1)
        prompt("Max. elements in H")
        initial("1")
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(NOI, DBF_ULONG) {
        interest(1)
        prompt("Max. elements in I")
        initial("1")
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(NOJ, DBF_ULONG) {
        interest(1)
        promptgroup("42 - Input H-N")
        initial("1")
        prompt("Max. elements in J")
        special(SPC_NOMOD)
    }
    field(NOK, DBF_ULONG) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Max. elements in K")
        initial("1")
        special(SPC_NOMOD)
    }
    field(NOL, DBF_ULONG) {
        interest(1)
        initial("1")
        prompt("Max. elements in L")
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(NOM, DBF_ULONG) {
        promptgroup("42 - Input H-N")
        prompt("Max. elements in M")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NON, DBF_ULONG) {
        interest(1)
        promptgroup("42 - Input H-N")
        prompt("Max. elements in N")
        initial("1")
        special(SPC_NOMOD)
    }
    field(NOO, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        prompt("Max. elements in O")
        initial("1")
        interest(1)
    }
    field(NOP, DBF_ULONG) {
        interest(1)
        promptgroup("43 - Input O-U")
        initial("1")
        prompt("Max. elements in P")
        special(SPC_NOMOD)
    }
    field(NOQ, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Max. elements in Q")
        promptgroup("43 - Input O-U")
    }
    field(NOR, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        initial("1")
        prompt("Max. elements in R")
        interest(1)
    }
    field(NOS, DBF_ULONG) {
        interest(1)
        promptgroup("43 - Input O-U")
        initial("1")
        prompt("Max. elements in S")
        special(SPC_NOMOD)
    }
    field(NOT, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in T")
        promptgroup("43 - Input O-U")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOU, DBF_ULONG) {
        promptgroup("43 - Input O-U")
        initial("1")
        prompt("Max. elements in U")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NEA, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in A")
    }
    field(NEB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in B")
    }
    field(NEC, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in C")
        interest(3)
    }
    field(NED, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEE, DBF_ULONG) {
        prompt("Num. elements in E")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEF, DBF_ULONG) {
        prompt("Num. elements in F")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEG, DBF_ULONG) {
        interest(3)
        prompt("Num. elements in G")
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEH, DBF_ULONG) {
        prompt("Num. elements in H")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEI, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in I")
        interest(3)
    }
    field(NEJ, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in J")
        special(SPC_NOMOD)
    }
    field(NEK, DBF_ULONG) {
        prompt("Num. elements in K")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEL, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in L")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in M")
    }
    field(NEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in N")
        initial("1")
        interest(3)
    }
    field(NEO, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in O")
        initial("1")
        interest(3)
    }
    field(NEP, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in P")
        interest(3)
    }
    field(NEQ, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in Q")
        initial("1")
        interest(3)
    }
    field(NER, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in R")
        interest(3)
    }
    field(NES, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in S")
        initial("1")
    }
    field(NET, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in T")
        initial("1")
    }
    field(NEU, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in U")
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output Link A")
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(OUTB, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Output Link B")
    }
    field(OUTC, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        prompt("Output Link C")
        interest(1)
    }
    field(OUTD, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        prompt("Output Link D")
        interest(1)
    }
    field(OUTE, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link E")
        promptgroup("51 - Output A-G")
    }
    field(OUTF, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        prompt("Output Link F")
        interest(1)
    }
    field(OUTG, DBF_OUTLINK) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Output Link G")
    }
    field(OUTH, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link H")
    }
    field(OUTI, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link I")
    }
    field(OUTJ, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link J")
        promptgroup("52 - Output H-N")
    }
    field(OUTK, DBF_OUTLINK) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Output Link K")
    }
    field(OUTL, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link L")
        promptgroup("52 - Output H-N")
    }
    field(OUTM, DBF_OUTLINK) {
        prompt("Output Link M")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(OUTN, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link N")
        promptgroup("52 - Output H-N")
    }
    field(OUTO, DBF_OUTLINK) {
        prompt("Output Link O")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(OUTP, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link P")
        promptgroup("53 - Output O-U")
    }
    field(OUTQ, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link Q")
    }
    field(OUTR, DBF_OUTLINK) {
        prompt("Output Link R")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(OUTS, DBF_OUTLINK) {
        promptgroup("53 - Output O-U")
        prompt("Output Link S")
        interest(1)
    }
    field(OUTT, DBF_OUTLINK) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Output Link T")
    }
    field(OUTU, DBF_OUTLINK) {
        prompt("Output Link U")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(VALA, DBF_NOACCESS) {
        prompt("Output value A")
        extra("void *vala")
        interest(2)
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(VALB, DBF_NOACCESS) {
        prompt("Output value B")
        extra("void *valb")
        interest(2)
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(VALC, DBF_NOACCESS) {
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        extra("void *valc")
        prompt("Output value C")
    }
    field(VALD, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        extra("void *vald")
        prompt("Output value D")
    }
    field(VALE, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *vale")
        prompt("Output value E")
        interest(2)
        asl(ASL0)
    }
    field(VALF, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        extra("void *valf")
        prompt("Output value F")
    }
    field(VALG, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *valg")
        prompt("Output value G")
        asl(ASL0)
        interest(2)
    }
    field(VALH, DBF_NOACCESS) {
        special(SPC_DBADDR)
        prompt("Output value H")
        extra("void *valh")
        asl(ASL0)
        interest(2)
    }
    field(VALI, DBF_NOACCESS) {
        extra("void *vali")
        prompt("Output value I")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
    }
    field(VALJ, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        prompt("Output value J")
        extra("void *valj")
    }
    field(VALK, DBF_NOACCESS) {
        prompt("Output value K")
        extra("void *valk")
        interest(2)
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(VALL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        prompt("Output value L")
        extra("void *vall")
        interest(2)
        asl(ASL0)
    }
    field(VALM, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        extra("void *valm")
        prompt("Output value M")
        special(SPC_DBADDR)
    }
    field(VALN, DBF_NOACCESS) {
        special(SPC_DBADDR)
        prompt("Output value N")
        extra("void *valn")
        asl(ASL0)
        interest(2)
    }
    field(VALO, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Output value O")
        extra("void *valo")
        special(SPC_DBADDR)
    }
    field(VALP, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        extra("void *valp")
        prompt("Output value P")
        special(SPC_DBADDR)
    }
    field(VALQ, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        extra("void *valq")
        prompt("Output value Q")
    }
    field(VALR, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        extra("void *valr")
        prompt("Output value R")
    }
    field(VALS, DBF_NOACCESS) {
        prompt("Output value S")
        extra("void *vals")
        interest(2)
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(VALT, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        extra("void *valt")
        prompt("Output value T")
    }
    field(VALU, DBF_NOACCESS) {
        special(SPC_DBADDR)
        asl(ASL0)
        interest(2)
        prompt("Output value U")
        extra("void *valu")
    }
    field(OVLA, DBF_NOACCESS) {
        prompt("Old Output A")
        extra("void *ovla")
        interest(4)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(OVLB, DBF_NOACCESS) {
        asl(ASL0)
        interest(4)
        prompt("Old Output B")
        extra("void *ovlb")
        special(SPC_NOMOD)
    }
    field(OVLC, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        asl(ASL0)
        extra("void *ovlc")
        prompt("Old Output C")
    }
    field(OVLD, DBF_NOACCESS) {
        prompt("Old Output D")
        extra("void *ovld")
        asl(ASL0)
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLE, DBF_NOACCESS) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(4)
        prompt("Old Output E")
        extra("void *ovle")
    }
    field(OVLF, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        extra("void *ovlf")
        prompt("Old Output F")
        special(SPC_NOMOD)
    }
    field(OVLG, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        extra("void *ovlg")
        prompt("Old Output G")
        special(SPC_NOMOD)
    }
    field(OVLH, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        asl(ASL0)
        extra("void *ovlh")
        prompt("Old Output H")
    }
    field(OVLI, DBF_NOACCESS) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(4)
        prompt("Old Output I")
        extra("void *ovli")
    }
    field(OVLJ, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        prompt("Old Output J")
        extra("void *ovlj")
        special(SPC_NOMOD)
    }
    field(OVLK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(4)
        extra("void *ovlk")
        prompt("Old Output K")
    }
    field(OVLL, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Old Output L")
        extra("void *ovll")
        interest(4)
        asl(ASL0)
    }
    field(OVLM, DBF_NOACCESS) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(4)
        extra("void *ovlm")
        prompt("Old Output M")
    }
    field(OVLN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Old Output N")
        extra("void *ovln")
        asl(ASL0)
        interest(4)
    }
    field(OVLO, DBF_NOACCESS) {
        prompt("Old Output O")
        extra("void *ovlo")
        asl(ASL0)
        interest(4)
        special(SPC_NOMOD)
    }
    field(OVLP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlp")
        prompt("Old Output P")
        asl(ASL0)
        interest(4)
    }
    field(OVLQ, DBF_NOACCESS) {
        asl(ASL0)
        interest(4)
        extra("void *ovlq")
        prompt("Old Output Q")
        special(SPC_NOMOD)
    }
    field(OVLR, DBF_NOACCESS) {
        prompt("Old Output R")
        extra("void *ovlr")
        interest(4)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(OVLS, DBF_NOACCESS) {
        asl(ASL0)
        interest(4)
        prompt("Old Output S")
        extra("void *ovls")
        special(SPC_NOMOD)
    }
    field(OVLT, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        extra("void *ovlt")
        prompt("Old Output T")
        special(SPC_NOMOD)
    }
    field(OVLU, DBF_NOACCESS) {
        asl(ASL0)
        interest(4)
        extra("void *ovlu")
        prompt("Old Output U")
        special(SPC_NOMOD)
    }
    field(FTVA, DBF_MENU) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Type of VALA")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTVB, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALB")
        promptgroup("51 - Output A-G")
    }
    field(FTVC, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALC")
        promptgroup("51 - Output A-G")
    }
    field(FTVD, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALD")
        promptgroup("51 - Output A-G")
    }
    field(FTVE, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of VALE")
        initial("DOUBLE")
        promptgroup("51 - Output A-G")
        interest(1)
    }
    field(FTVF, DBF_MENU) {
        interest(1)
        promptgroup("51 - Output A-G")
        prompt("Type of VALF")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTVG, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        initial("DOUBLE")
        prompt("Type of VALG")
        interest(1)
    }
    field(FTVH, DBF_MENU) {
        prompt("Type of VALH")
        initial("DOUBLE")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVI, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALI")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVJ, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALJ")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVK, DBF_MENU) {
        initial("DOUBLE")
        prompt("Type of VALK")
        promptgroup("52 - Output H-N")
        interest(1)
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVL, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        initial("DOUBLE")
        prompt("Type of VALL")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(FTVM, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        interest(1)
        prompt("Type of VALM")
        initial("DOUBLE")
        promptgroup("52 - Output H-N")
    }
    field(FTVN, DBF_MENU) {
        promptgroup("52 - Output H-N")
        initial("DOUBLE")
        prompt("Type of VALN")
        interest(1)
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTVO, DBF_MENU) {
        interest(1)
        promptgroup("53 - Output O-U")
        initial("DOUBLE")
        prompt("Type of VALO")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTVP, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of VALP")
        initial("DOUBLE")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(FTVQ, DBF_MENU) {
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Type of VALQ")
        initial("DOUBLE")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(FTVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of VALR")
        initial("DOUBLE")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(FTVS, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        prompt("Type of VALS")
        initial("DOUBLE")
    }
    field(FTVT, DBF_MENU) {
        interest(1)
        prompt("Type of VALT")
        initial("DOUBLE")
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTVU, DBF_MENU) {
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALU")
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(NOVA, DBF_ULONG) {
        prompt("Max. elements in VALA")
        initial("1")
        promptgroup("51 - Output A-G")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVB, DBF_ULONG) {
        promptgroup("51 - Output A-G")
        prompt("Max. elements in VALB")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVC, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        initial("1")
        prompt("Max. elements in VALC")
    }
    field(NOVD, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Max. elements in VALD")
        promptgroup("51 - Output A-G")
    }
    field(NOVE, DBF_ULONG) {
        prompt("Max. elements in VALE")
        initial("1")
        promptgroup("51 - Output A-G")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVF, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("51 - Output A-G")
        initial("1")
        prompt("Max. elements in VALF")
    }
    field(NOVG, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Max. elements in VALG")
        promptgroup("51 - Output A-G")
    }
    field(NOVH, DBF_ULONG) {
        interest(1)
        promptgroup("52 - Output H-N")
        initial("1")
        prompt("Max. elements in VAlH")
        special(SPC_NOMOD)
    }
    field(NOVI, DBF_ULONG) {
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Max. elements in VALI")
        initial("1")
        special(SPC_NOMOD)
    }
    field(NOVJ, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("52 - Output H-N")
        prompt("Max. elements in VALJ")
        initial("1")
    }
    field(NOVK, DBF_ULONG) {
        interest(1)
        promptgroup("52 - Output H-N")
        initial("1")
        prompt("Max. elements in VALK")
        special(SPC_NOMOD)
    }
    field(NOVL, DBF_ULONG) {
        promptgroup("52 - Output H-N")
        prompt("Max. elements in VALL")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVM, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Max. elements in VALM")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(NOVN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Max. elements in VALN")
        initial("1")
        promptgroup("52 - Output H-N")
        interest(1)
    }
    field(NOVO, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Max. elements in VALO")
        promptgroup("53 - Output O-U")
    }
    field(NOVP, DBF_ULONG) {
        initial("1")
        prompt("Max. elements in VALP")
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVQ, DBF_ULONG) {
        promptgroup("53 - Output O-U")
        initial("1")
        prompt("Max. elements in VALQ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NOVR, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        promptgroup("53 - Output O-U")
        initial("1")
        prompt("Max. elements in VALR")
    }
    field(NOVS, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Max. elements in VALS")
        initial("1")
        promptgroup("53 - Output O-U")
        interest(1)
    }
    field(NOVT, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        initial("1")
        prompt("Max. elements in VALT")
        interest(1)
    }
    field(NOVU, DBF_ULONG) {
        prompt("Max. elements in VALU")
        initial("1")
        promptgroup("53 - Output O-U")
        interest(1)
        special(SPC_NOMOD)
    }
    field(NEVA, DBF_ULONG) {
        prompt("Num. elements in VALA")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in VALB")
    }
    field(NEVC, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALC")
        special(SPC_NOMOD)
    }
    field(NEVD, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VALD")
        initial("1")
        interest(3)
    }
    field(NEVE, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALE")
        special(SPC_NOMOD)
    }
    field(NEVF, DBF_ULONG) {
        prompt("Num. elements in VALF")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVG, DBF_ULONG) {
        interest(3)
        prompt("Num. elements in VALG")
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEVH, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VAlH")
        initial("1")
    }
    field(NEVI, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in VALI")
    }
    field(NEVJ, DBF_ULONG) {
        prompt("Num. elements in VALJ")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVK, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALK")
        special(SPC_NOMOD)
    }
    field(NEVL, DBF_ULONG) {
        prompt("Num. elements in VALL")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVM, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALM")
        special(SPC_NOMOD)
    }
    field(NEVN, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALN")
        special(SPC_NOMOD)
    }
    field(NEVO, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VALO")
        initial("1")
        interest(3)
    }
    field(NEVP, DBF_ULONG) {
        prompt("Num. elements in VALP")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVQ, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Num. elements in VALQ")
        initial("1")
    }
    field(NEVR, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALR")
        special(SPC_NOMOD)
    }
    field(NEVS, DBF_ULONG) {
        interest(3)
        prompt("Num. elements in VALS")
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEVT, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in VALT")
        interest(3)
    }
    field(NEVU, DBF_ULONG) {
        interest(3)
        prompt("Num. elements in VALU")
        initial("1")
        special(SPC_NOMOD)
    }
    field(ONVA, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLA")
        initial("1")
        interest(4)
    }
    field(ONVB, DBF_ULONG) {
        interest(4)
        prompt("Num. elements in OVLB")
        initial("1")
        special(SPC_NOMOD)
    }
    field(ONVC, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLC")
        special(SPC_NOMOD)
    }
    field(ONVD, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLD")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLE")
    }
    field(ONVF, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLF")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVG, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLG")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVH, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in VAlH")
        initial("1")
    }
    field(ONVI, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLI")
        special(SPC_NOMOD)
    }
    field(ONVJ, DBF_ULONG) {
        interest(4)
        prompt("Num. elements in OVLJ")
        initial("1")
        special(SPC_NOMOD)
    }
    field(ONVK, DBF_ULONG) {
        prompt("Num. elements in OVLK")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVL, DBF_ULONG) {
        prompt("Num. elements in OVLL")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVM, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLM")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLN")
        initial("1")
        interest(4)
    }
    field(ONVO, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Num. elements in OVLO")
        interest(4)
    }
    field(ONVP, DBF_ULONG) {
        initial("1")
        prompt("Num. elements in OVLP")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVQ, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLQ")
        initial("1")
    }
    field(ONVR, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLR")
        special(SPC_NOMOD)
    }
    field(ONVS, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Num. elements in OVLS")
        initial("1")
    }
    field(ONVT, DBF_ULONG) {
        interest(4)
        prompt("Num. elements in OVLT")
        initial("1")
        special(SPC_NOMOD)
    }
    field(ONVU, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLU")
        initial("1")
        interest(4)
    }
}
recordtype(mbboDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_USHORT) {
        pp(TRUE)
        asl(ASL0)
        prompt("Word")
        promptgroup("50 - Output")
    }
    field(OMSL, DBF_MENU) {
        pp(TRUE)
        special(SPC_RESET)
        menu(menuOmsl)
        interest(1)
        prompt("Output Mode Select")
        promptgroup("50 - Output")
    }
    field(NOBT, DBF_SHORT) {
        prompt("Number of Bits")
        promptgroup("50 - Output")
        interest(1)
        special(SPC_NOMOD)
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(B0, DBF_UCHAR) {
        promptgroup("51 - Output 0-7")
        prompt("Bit 0")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B1, DBF_UCHAR) {
        special(SPC_MOD)
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        prompt("Bit 1")
        interest(1)
    }
    field(B2, DBF_UCHAR) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 2")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(B3, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        prompt("Bit 3")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(B4, DBF_UCHAR) {
        promptgroup("51 - Output 0-7")
        prompt("Bit 4")
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(B5, DBF_UCHAR) {
        interest(1)
        prompt("Bit 5")
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B6, DBF_UCHAR) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        promptgroup("51 - Output 0-7")
        prompt("Bit 6")
    }
    field(B7, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        prompt("Bit 7")
        promptgroup("51 - Output 0-7")
        interest(1)
    }
    field(B8, DBF_UCHAR) {
        promptgroup("52 - Output 9-F")
        prompt("Bit 8")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B9, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output 9-F")
        prompt("Bit 9")
    }
    field(BA, DBF_UCHAR) {
        interest(1)
        promptgroup("52 - Output 9-F")
        prompt("Bit 10")
        pp(TRUE)
        special(SPC_MOD)
    }
    field(BB, DBF_UCHAR) {
        special(SPC_MOD)
        pp(TRUE)
        promptgroup("52 - Output 9-F")
        prompt("Bit 11")
        interest(1)
    }
    field(BC, DBF_UCHAR) {
        prompt("Bit 12")
        promptgroup("52 - Output 9-F")
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(BD, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("52 - Output 9-F")
        prompt("Bit 13")
    }
    field(BE, DBF_UCHAR) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        promptgroup("52 - Output 9-F")
        prompt("Bit 14")
    }
    field(BF, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        prompt("Bit 15")
        promptgroup("52 - Output 9-F")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
        special(SPC_NOMOD)
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
        interest(3)
    }
    field(RBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_ULONG) {
        interest(3)
        prompt("Prev Readback Value")
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        prompt("Hardware Mask")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_ULONG) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_ULONG) {
        prompt("Shift")
        promptgroup("50 - Output")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        prompt("Sim Output Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        interest(2)
        prompt("INVALID outpt action")
        promptgroup("50 - Output")
    }
    field(IVOV, DBF_USHORT) {
        promptgroup("50 - Output")
        prompt("INVALID output value")
        interest(2)
    }
}
device(mbboDirect, CONSTANT, devMbboDirectSoft, "Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftRaw, "Raw Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftCallback, "Async Soft Channel")
device(mbboDirect, INST_IO, asynMbboDirectUInt32Digital, "asynUInt32Digital")
recordtype(aai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        prompt("Record Name")
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Value")
        extra("void *		val")
        asl(ASL0)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Display Precision")
    }
    field(INP, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input Specification")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(NELM, DBF_ULONG) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Number of Elements")
        initial("1")
        special(SPC_NOMOD)
    }
    field(FTVL, DBF_MENU) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Field Type of Value")
        menu(menuFtype)
        special(SPC_NOMOD)
    }
    field(NORD, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        prompt("Buffer Pointer")
        extra("void *		bptr")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(1)
    }
    field(MPST, DBF_MENU) {
        interest(1)
        prompt("Post Value Monitors")
        promptgroup("80 - Display")
        menu(aaiPOST)
    }
    field(APST, DBF_MENU) {
        interest(1)
        prompt("Post Archive Monitors")
        promptgroup("80 - Display")
        menu(aaiPOST)
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(aai, CONSTANT, devAaiSoft, "Soft Channel")
recordtype(bo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("DSET address")
        extra("struct dset         *dset")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_ENUM) {
        asl(ASL0)
        promptgroup("50 - Output")
        prompt("Current Value")
        pp(TRUE)
    }
    field(OMSL, DBF_MENU) {
        interest(1)
        prompt("Output Mode Select")
        promptgroup("50 - Output")
        menu(menuOmsl)
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Specification")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        prompt("Seconds to Hold High")
        promptgroup("30 - Action")
    }
    field(ZNAM, DBF_STRING) {
        size(26)
        promptgroup("80 - Display")
        prompt("Zero Name")
        prop(YES)
        interest(1)
        pp(TRUE)
    }
    field(ONAM, DBF_STRING) {
        prop(YES)
        interest(1)
        size(26)
        promptgroup("80 - Display")
        prompt("One Name")
        pp(TRUE)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Hardware Mask")
        interest(1)
    }
    field(RPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Record Private")
        extra("void *  rpvt")
        interest(4)
    }
    field(WDPT, DBF_NOACCESS) {
        extra("void *	wdpt")
        prompt("Watch Dog Timer ID")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ZSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Zero Error Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(OSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prompt("One Error Severity")
        promptgroup("70 - Alarm")
    }
    field(COSV, DBF_MENU) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Change of State Sevr")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Prev Readback Value")
        interest(3)
    }
    field(MLST, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
        interest(3)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        prompt("INVALID outpt action")
        promptgroup("50 - Output")
        interest(2)
    }
    field(IVOV, DBF_USHORT) {
        interest(2)
        promptgroup("50 - Output")
        prompt("INVALID output value")
    }
}
device(bo, CONSTANT, devBoSoft, "Soft Channel")
device(bo, CONSTANT, devBoSoftRaw, "Raw Soft Channel")
device(bo, CONSTANT, devBoSoftCallback, "Async Soft Channel")
device(bo, INST_IO, devBoGeneralTime, "General Time")
device(bo, INST_IO, devBoDbState, "Db State")
device(bo, INST_IO, asynBoInt32, "asynInt32")
device(bo, INST_IO, asynBoUInt32Digital, "asynUInt32Digital")
device(bo, GPIB_IO, devBoTestGpib, "GPIB Test")
recordtype(sub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %struct subRecord;
    %typedef long (*SUBFUNCPTR)(struct subRecord *);
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        extra("void                *dpvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        asl(ASL0)
        prompt("Result")
    }
    field(INAM, DBF_STRING) {
        interest(1)
        prompt("Init Routine Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(SNAM, DBF_STRING) {
        special(SPC_MOD)
        interest(1)
        size(40)
        promptgroup("30 - Action")
        prompt("Subroutine Name")
    }
    field(SADR, DBF_NOACCESS) {
        interest(4)
        extra("SUBFUNCPTR sadr")
        prompt("Subroutine Address")
        special(SPC_NOMOD)
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        promptgroup("41 - Input A-F")
        interest(1)
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        interest(1)
        prompt("Input C")
        promptgroup("41 - Input A-F")
    }
    field(INPD, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        prompt("Input F")
        promptgroup("41 - Input A-F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPH, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input H")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        interest(1)
        prompt("Input I")
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        interest(1)
        prompt("Input J")
        promptgroup("42 - Input G-L")
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input K")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input L")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(HIGH, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        prop(YES)
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prompt("Display Precision")
        prop(YES)
        interest(1)
    }
    field(BRSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Bad Return Severity")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("High Severity")
        prop(YES)
        interest(1)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        prompt("Archive Deadband")
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of A")
        interest(3)
    }
    field(LB, DBF_DOUBLE) {
        prompt("Prev Value of B")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        prompt("Prev Value of E")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of G")
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of H")
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LK, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of K")
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of L")
        interest(3)
    }
    field(LALM, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
        interest(3)
    }
}
recordtype(lsi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "devSup.h"
    %
    %/* Declare Device Support Entry Table */
    %typedef struct lsidset {
    %    long number;
    %    DEVSUPFUN report;
    %    DEVSUPFUN init;
    %    DEVSUPFUN init_record;
    %    DEVSUPFUN get_ioint_info;
    %    DEVSUPFUN read_string;
    %} lsidset;
    %
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        promptgroup("10 - Common")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        extra("struct dset         *dset")
        prompt("DSET address")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        extra("char *val")
        prompt("Current Value")
        pp(TRUE)
        special(SPC_DBADDR)
    }
    field(OVAL, DBF_NOACCESS) {
        interest(3)
        extra("char *oval")
        prompt("Old Value")
        special(SPC_DBADDR)
    }
    field(SIZV, DBF_USHORT) {
        promptgroup("40 - Input")
        initial("41")
        prompt("Size of buffers")
        interest(1)
        special(SPC_NOMOD)
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OLEN, DBF_ULONG) {
        prompt("Length of OVAL")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(MPST, DBF_MENU) {
        interest(1)
        prompt("Post Value Monitors")
        promptgroup("80 - Display")
        menu(menuPost)
    }
    field(APST, DBF_MENU) {
        menu(menuPost)
        prompt("Post Archive Monitors")
        promptgroup("80 - Display")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Link")
    }
    field(SIMM, DBF_MENU) {
        interest(2)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Simulation Mode Severity")
    }
    field(SIOL, DBF_INLINK) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
    }
}
device(lsi, CONSTANT, devLsiSoft, "Soft Channel")
device(lsi, INST_IO, devLsiEnviron, "getenv")
recordtype(printf) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "devSup.h"
    %
    %/* Declare Device Support Entry Table */
    %typedef struct printfdset {
    %    long number;
    %    DEVSUPFUN report;
    %    DEVSUPFUN init;
    %    DEVSUPFUN init_record;
    %    DEVSUPFUN get_ioint_info;
    %    DEVSUPFUN write_string;
    %} printfdset;
    %
    %/* Number of INPx fields defined */
    %#define PRINTF_NLINKS 10
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        interest(1)
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        promptgroup("70 - Alarm")
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        special(SPC_DBADDR)
        asl(ASL0)
        extra("char *val")
        prompt("Result")
    }
    field(SIZV, DBF_USHORT) {
        interest(1)
        prompt("Size of VAL buffer")
        initial("41")
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(FMT, DBF_STRING) {
        size(81)
        promptgroup("30 - Action")
        prompt("Format String")
        pp(TRUE)
    }
    field(IVLS, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        prompt("Invalid Link String")
        initial("LNK")
    }
    field(INP0, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input 0")
        interest(1)
    }
    field(INP1, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 1")
    }
    field(INP2, DBF_INLINK) {
        interest(1)
        prompt("Input 2")
        promptgroup("40 - Input")
    }
    field(INP3, DBF_INLINK) {
        interest(1)
        promptgroup("40 - Input")
        prompt("Input 3")
    }
    field(INP4, DBF_INLINK) {
        prompt("Input 4")
        promptgroup("40 - Input")
        interest(1)
    }
    field(INP5, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input 5")
        interest(1)
    }
    field(INP6, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input 6")
        interest(1)
    }
    field(INP7, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input 7")
        interest(1)
    }
    field(INP8, DBF_INLINK) {
        interest(1)
        prompt("Input 8")
        promptgroup("40 - Input")
    }
    field(INP9, DBF_INLINK) {
        interest(1)
        prompt("Input 9")
        promptgroup("40 - Input")
    }
}
device(printf, CONSTANT, devPrintfSoft, "Soft Channel")
device(printf, CONSTANT, devPrintfSoftCallback, "Async Soft Channel")
device(printf, INST_IO, devPrintfStdio, "stdio")
recordtype(stringin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        prompt("Record Name")
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        promptgroup("10 - Common")
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
        interest(1)
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        extra("char                bkpt")
        prompt("Break Point")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        prompt("Undefined")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        pp(TRUE)
        asl(ASL0)
        promptgroup("40 - Input")
        size(40)
        prompt("Current Value")
    }
    field(OVAL, DBF_STRING) {
        prompt("Previous Value")
        size(40)
        interest(3)
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(MPST, DBF_MENU) {
        menu(stringinPOST)
        interest(1)
        promptgroup("80 - Display")
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        menu(stringinPOST)
        promptgroup("80 - Display")
        prompt("Post Archive Monitors")
        interest(1)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(1)
    }
    field(SVAL, DBF_STRING) {
        size(40)
        prompt("Simulation Value")
        pp(TRUE)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
        interest(2)
    }
}
device(stringin, CONSTANT, devSiSoft, "Soft Channel")
device(stringin, CONSTANT, devSiSoftCallback, "Async Soft Channel")
device(stringin, INST_IO, devTimestampSI, "Soft Timestamp")
device(stringin, INST_IO, devSiGeneralTime, "General Time")
device(stringin, INST_IO, devSiEnviron, "getenv")
device(stringin, INST_IO, asynSiOctetCmdResponse, "asynOctetCmdResponse")
device(stringin, INST_IO, asynSiOctetWriteRead, "asynOctetWriteRead")
device(stringin, INST_IO, asynSiOctetRead, "asynOctetRead")
device(stringin, GPIB_IO, devSiTestGpib, "GPIB Test")
recordtype(sel) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        promptgroup("70 - Alarm")
        interest(2)
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuPriority)
        interest(1)
        prompt("Scheduling Priority")
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(1)
        extra("char                bkpt")
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        promptgroup("10 - Common")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Time")
        extra("epicsTimeStamp      time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Result")
        promptgroup("40 - Input")
        special(SPC_NOMOD)
    }
    field(SELM, DBF_MENU) {
        promptgroup("30 - Action")
        prompt("Select Mechanism")
        menu(selSELM)
    }
    field(SELN, DBF_USHORT) {
        prompt("Index value")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(NVL, DBF_INLINK) {
        interest(1)
        promptgroup("30 - Action")
        prompt("Index Value Location")
    }
    field(INPA, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input C")
    }
    field(INPD, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input D")
        interest(1)
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input E")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        promptgroup("41 - Input A-F")
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input G")
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        interest(1)
        promptgroup("42 - Input G-L")
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input K")
        interest(1)
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        promptgroup("42 - Input G-L")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        promptgroup("80 - Display")
        size(16)
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Rng")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("Lolo Alarm Limit")
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("High Alarm Limit")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Low Alarm Limit")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prop(YES)
        prompt("Hihi Severity")
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        prompt("Lolo Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("High Severity")
        prop(YES)
        interest(1)
    }
    field(LSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Low Severity")
        prop(YES)
        interest(1)
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        prompt("Archive Deadband")
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Monitor Deadband")
        interest(1)
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of B")
        interest(3)
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of D")
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of E")
        interest(3)
    }
    field(LF, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of F")
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of G")
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of H")
    }
    field(LI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of I")
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of J")
        interest(3)
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of L")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Archived")
        interest(3)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(NLST, DBF_USHORT) {
        interest(3)
        prompt("Last Index Monitored")
        special(SPC_NOMOD)
    }
}
recordtype(bi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scan Mechanism")
        interest(1)
        menu(menuScan)
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        promptgroup("20 - Scan")
        interest(1)
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        size(40)
        promptgroup("20 - Scan")
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        interest(2)
        promptgroup("70 - Alarm")
        prompt("Alarm Ack Transient")
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        promptgroup("70 - Alarm")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("void                *dpvt")
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        extra("char                bkpt")
        interest(1)
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        promptgroup("10 - Common")
        initial("1")
        prompt("Undefined")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        promptgroup("40 - Input")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        pp(TRUE)
        asl(ASL0)
        promptgroup("40 - Input")
        prompt("Current Value")
    }
    field(ZSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Zero Error Severity")
        interest(1)
    }
    field(OSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prompt("One Error Severity")
        promptgroup("70 - Alarm")
    }
    field(COSV, DBF_MENU) {
        interest(1)
        prompt("Change of State Svr")
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(ZNAM, DBF_STRING) {
        pp(TRUE)
        interest(1)
        prop(YES)
        prompt("Zero Name")
        promptgroup("80 - Display")
        size(26)
    }
    field(ONAM, DBF_STRING) {
        pp(TRUE)
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        size(26)
        prompt("One Name")
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("prev Raw Value")
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        prompt("Hardware Mask")
        interest(1)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        promptgroup("90 - Simulate")
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
    }
}
device(bi, CONSTANT, devBiSoft, "Soft Channel")
device(bi, CONSTANT, devBiSoftRaw, "Raw Soft Channel")
device(bi, CONSTANT, devBiSoftCallback, "Async Soft Channel")
device(bi, INST_IO, devBiDbState, "Db State")
device(bi, INST_IO, asynBiInt32, "asynInt32")
device(bi, INST_IO, asynBiUInt32Digital, "asynUInt32Digital")
device(bi, GPIB_IO, devBiTestGpib, "GPIB Test")
recordtype(mbbo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Process at iocInit")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        promptgroup("20 - Scan")
        size(40)
        interest(1)
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        promptgroup("70 - Alarm")
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        prompt("Disable Alarm Sevrty")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        interest(4)
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct rset         *rset")
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        interest(4)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        prompt("Scheduling Priority")
        interest(1)
        menu(menuPriority)
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        prompt("Undefined")
        initial("1")
        interest(1)
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        promptgroup("70 - Alarm")
        interest(1)
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        extra("epicsTimeStamp      time")
        prompt("Time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        special(SPC_DBADDR)
        pp(TRUE)
        promptgroup("50 - Output")
        prompt("Desired Value")
        asl(ASL0)
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
    }
    field(OMSL, DBF_MENU) {
        promptgroup("50 - Output")
        prompt("Output Mode Select")
        interest(1)
        menu(menuOmsl)
    }
    field(NOBT, DBF_USHORT) {
        interest(1)
        prompt("Number of Bits")
        promptgroup("50 - Output")
        special(SPC_NOMOD)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(ZRVL, DBF_ULONG) {
        prompt("Zero Value")
        promptgroup("51 - Output 0-7")
        interest(1)
        base(HEX)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(ONVL, DBF_ULONG) {
        promptgroup("51 - Output 0-7")
        prompt("One Value")
        base(HEX)
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(TWVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        prompt("Two Value")
        base(HEX)
        interest(1)
    }
    field(THVL, DBF_ULONG) {
        prompt("Three Value")
        promptgroup("51 - Output 0-7")
        interest(1)
        base(HEX)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(FRVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        prompt("Four Value")
        base(HEX)
        interest(1)
    }
    field(FVVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        prompt("Five Value")
        base(HEX)
        interest(1)
    }
    field(SXVL, DBF_ULONG) {
        prompt("Six Value")
        promptgroup("51 - Output 0-7")
        interest(1)
        base(HEX)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(SVVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        prompt("Seven Value")
        base(HEX)
        interest(1)
    }
    field(EIVL, DBF_ULONG) {
        prompt("Eight Value")
        promptgroup("52 - Output 8-15")
        interest(1)
        base(HEX)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(NIVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        prompt("Nine Value")
        base(HEX)
        interest(1)
    }
    field(TEVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        base(HEX)
        prompt("Ten Value")
        promptgroup("52 - Output 8-15")
    }
    field(ELVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Eleven Value")
        promptgroup("52 - Output 8-15")
        interest(1)
        base(HEX)
    }
    field(TVVL, DBF_ULONG) {
        promptgroup("52 - Output 8-15")
        prompt("Twelve Value")
        base(HEX)
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(TTVL, DBF_ULONG) {
        promptgroup("52 - Output 8-15")
        prompt("Thirteen Value")
        base(HEX)
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(FTVL, DBF_ULONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        prompt("Fourteen Value")
        base(HEX)
        interest(1)
    }
    field(FFVL, DBF_ULONG) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Fifteen Value")
        promptgroup("52 - Output 8-15")
        interest(1)
        base(HEX)
    }
    field(ZRST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        size(26)
        promptgroup("81 - Display 0-7")
        prompt("Zero String")
    }
    field(ONST, DBF_STRING) {
        prompt("One String")
        promptgroup("81 - Display 0-7")
        size(26)
        interest(1)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(TWST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        size(26)
        promptgroup("81 - Display 0-7")
        prompt("Two String")
        interest(1)
    }
    field(THST, DBF_STRING) {
        interest(1)
        size(26)
        promptgroup("81 - Display 0-7")
        prompt("Three String")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(FRST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        promptgroup("81 - Display 0-7")
        size(26)
        prompt("Four String")
    }
    field(FVST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        prompt("Five String")
        promptgroup("81 - Display 0-7")
        size(26)
    }
    field(SXST, DBF_STRING) {
        interest(1)
        size(26)
        promptgroup("81 - Display 0-7")
        prompt("Six String")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(SVST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        prompt("Seven String")
        promptgroup("81 - Display 0-7")
        size(26)
    }
    field(EIST, DBF_STRING) {
        prompt("Eight String")
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(NIST, DBF_STRING) {
        interest(1)
        prompt("Nine String")
        size(26)
        promptgroup("82 - Display 8-15")
        pp(TRUE)
        special(SPC_MOD)
    }
    field(TEST, DBF_STRING) {
        pp(TRUE)
        special(SPC_MOD)
        interest(1)
        promptgroup("82 - Display 8-15")
        size(26)
        prompt("Ten String")
    }
    field(ELST, DBF_STRING) {
        prompt("Eleven String")
        promptgroup("82 - Display 8-15")
        size(26)
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(TVST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        size(26)
        prompt("Twelve String")
        interest(1)
        special(SPC_MOD)
        pp(TRUE)
    }
    field(TTST, DBF_STRING) {
        interest(1)
        prompt("Thirteen String")
        promptgroup("82 - Display 8-15")
        size(26)
        pp(TRUE)
        special(SPC_MOD)
    }
    field(FTST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        size(26)
        promptgroup("82 - Display 8-15")
        prompt("Fourteen String")
        interest(1)
    }
    field(FFST, DBF_STRING) {
        special(SPC_MOD)
        pp(TRUE)
        interest(1)
        promptgroup("82 - Display 8-15")
        size(26)
        prompt("Fifteen String")
    }
    field(ZRSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Zero Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(ONSV, DBF_MENU) {
        prompt("State One Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(TWSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Two Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(THSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Three Severity")
    }
    field(FRSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Four Severity")
    }
    field(FVSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Five Severity")
        promptgroup("71 - Alarm 0-7")
        interest(1)
    }
    field(SXSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prompt("State Six Severity")
        promptgroup("71 - Alarm 0-7")
    }
    field(SVSV, DBF_MENU) {
        interest(1)
        promptgroup("71 - Alarm 0-7")
        prompt("State Seven Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(EISV, DBF_MENU) {
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Eight Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(NISV, DBF_MENU) {
        promptgroup("72 - Alarm 8-15")
        prompt("State Nine Severity")
        interest(1)
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(TESV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Ten Severity")
        promptgroup("72 - Alarm 8-15")
        interest(1)
    }
    field(ELSV, DBF_MENU) {
        prompt("State Eleven Severity")
        promptgroup("72 - Alarm 8-15")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(TVSV, DBF_MENU) {
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Twelve Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(TTSV, DBF_MENU) {
        prompt("State Thirteen Sevr")
        promptgroup("72 - Alarm 8-15")
        interest(1)
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(FTSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        interest(1)
        promptgroup("72 - Alarm 8-15")
        prompt("State Fourteen Sevr")
    }
    field(FFSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        prompt("State Fifteen Sevr")
        interest(1)
    }
    field(UNSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prompt("Unknown State Sevr")
        interest(1)
    }
    field(COSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        interest(1)
        prompt("Change of State Sevr")
        promptgroup("70 - Alarm")
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Prev Raw Value")
        interest(3)
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Readback Value")
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SDEF, DBF_SHORT) {
        prompt("States Defined")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        promptgroup("50 - Output")
        prompt("Shift")
        interest(1)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        interest(2)
        prompt("Sim mode Alarm Svrty")
        promptgroup("90 - Simulate")
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID outpt action")
        promptgroup("50 - Output")
        interest(2)
        menu(menuIvoa)
    }
    field(IVOV, DBF_USHORT) {
        promptgroup("50 - Output")
        prompt("INVALID output value")
        interest(2)
    }
}
device(mbbo, CONSTANT, devMbboSoft, "Soft Channel")
device(mbbo, CONSTANT, devMbboSoftRaw, "Raw Soft Channel")
device(mbbo, CONSTANT, devMbboSoftCallback, "Async Soft Channel")
device(mbbo, INST_IO, asynMbboInt32, "asynInt32")
device(mbbo, INST_IO, asynMbboUInt32Digital, "asynUInt32Digital")
device(mbbo, GPIB_IO, devMbboTestGpib, "GPIB Test")
driver(drvAsyn)
registrar(dbndInitialize)
registrar(asynInterposeEosRegister)
registrar(asSub)
registrar(vxi11RegisterCommands)
registrar(tsInitialize)
registrar(arrInitialize)
registrar(syncInitialize)
registrar(asynRegister)
registrar(asynInterposeFlushRegister)
variable(dbRecordsOnceOnly, int)
variable(atExitDebug, int)
variable(CASDEBUG, int)
variable(dbRecordsAbcSorted, int)
variable(dbBptNotMonotonic, int)
variable(calcoutODLYprecision, int)
variable(callbackParallelThreadsDefault, int)
variable(dbThreadRealtimeLock, int)
variable(boHIGHprecision, int)
variable(histogramSDELprecision, int)
variable(asCaDebug, int)
variable(boHIGHlimit, double)
variable(dbQuietMacroWarnings, int)
variable(dbTemplateMaxVars, int)
variable(seqDLYlimit, double)
variable(seqDLYprecision, int)
variable(calcoutODLYlimit, double)
