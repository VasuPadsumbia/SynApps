menu(calcoutOOPT) {
    choice(calcoutOOPT_Every_Time, "Every Time")
    choice(calcoutOOPT_On_Change, "On Change")
    choice(calcoutOOPT_When_Zero, "When Zero")
    choice(calcoutOOPT_When_Non_zero, "When Non-zero")
    choice(calcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(calcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
}
menu(aoOIF) {
    choice(aoOIF_Full, "Full")
    choice(aoOIF_Incremental, "Incremental")
}
menu(sscanACQM) {
    choice(sscanACQM_NORMAL, "NORMAL")
    choice(sscanACQM_ACC, "ACCUMULATE")
    choice(sscanACQM_ADD, "ADD TO PREV")
}
menu(menuSimm) {
    choice(menuSimmNO, "NO")
    choice(menuSimmYES, "YES")
    choice(menuSimmRAW, "RAW")
}
menu(swaitINAP) {
    choice(swaitINAP_No, "No")
    choice(swaitINAP_Yes, "Yes")
}
menu(acalcoutINAV) {
    choice(acalcoutINAV_EXT_NC, "Ext PV NC")
    choice(acalcoutINAV_EXT, "Ext PV OK")
    choice(acalcoutINAV_LOC, "Local PV")
    choice(acalcoutINAV_CON, "Constant")
}
menu(sscanPASM) {
    choice(sscanPASM_Stay, "STAY")
    choice(sscanPASM_Start_Pos, "START POS")
    choice(sscanPASM_Prior_Pos, "PRIOR POS")
    choice(sscanPASM_Peak_Pos, "PEAK POS")
    choice(sscanPASM_Valley_Pos, "VALLEY POS")
    choice(sscanPASM_RisingEdge_Pos, "+EDGE POS")
    choice(sscanPASM_FallingEdge_Pos, "-EDGE POS")
    choice(sscanPASM_COM, "CNTR OF MASS")
}
menu(serialMCTL) {
    choice(serialMCTL_unknown, "Unknown")
    choice(serialMCTL_CLOCAL, "CLOCAL")
    choice(serialMCTL_Yes, "YES")
}
menu(acalcoutSIZE) {
    choice(acalcoutSIZE_NELM, "NELM")
    choice(acalcoutSIZE_NUSE, "NUSE")
}
menu(acalcoutOOPT) {
    choice(acalcoutOOPT_Every_Time, "Every Time")
    choice(acalcoutOOPT_On_Change, "On Change")
    choice(acalcoutOOPT_When_Zero, "When Zero")
    choice(acalcoutOOPT_When_Non_zero, "When Non-zero")
    choice(acalcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(acalcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
    choice(acalcoutOOPT_Never, "Never")
}
menu(sscanFFO) {
    choice(sscanFFO_Use_F_Flags, "USE F-FLAGS")
    choice(sscanFFO_Override, "OVERRIDE")
}
menu(swaitOOPT) {
    choice(swaitOOPT_Every_Time, "Every Time")
    choice(swaitOOPT_On_Change, "On Change")
    choice(swaitOOPT_When_Zero, "When Zero")
    choice(swaitOOPT_When_Non_zero, "When Non-zero")
    choice(swaitOOPT_Transition_To_Zero, "Transition To Zero")
    choice(swaitOOPT_Transition_To_Non_zero, "Transition To Non-zero")
    choice(swaitOOPT_Never, "Never")
}
menu(dfanoutSELM) {
    choice(dfanoutSELM_All, "All")
    choice(dfanoutSELM_Specified, "Specified")
    choice(dfanoutSELM_Mask, "Mask")
}
menu(menuOmsl) {
    choice(menuOmslsupervisory, "supervisory")
    choice(menuOmslclosed_loop, "closed_loop")
}
menu(sscanDSTATE) {
    choice(sscanDSTATE_UNPACKED, "UNPACKED")
    choice(sscanDSTATE_TRIG_ARRAY_READ, "TRIG_ARRAY_READ")
    choice(sscanDSTATE_ARRAY_READ_WAIT, "ARRAY_READ_WAIT")
    choice(sscanDSTATE_ARRAY_GET_CALLBACK_WAIT, "ARRAY_GET_CALLBACK_WAIT")
    choice(sscanDSTATE_RECORD_ARRAY_DATA, "RECORD_ARRAY_DATA")
    choice(sscanDSTATE_SAVE_DATA_WAIT, "SAVE_DATA_WAIT")
    choice(sscanDSTATE_PACKED, "PACKED")
    choice(sscanDSTATE_POSTED, "POSTED")
}
menu(transformCOPT) {
    choice(transformCOPT_CONDITIONAL, "Conditional")
    choice(transformCOPT_ALWAYS, "Always")
}
menu(aaiPOST) {
    choice(aaiPOST_Always, "Always")
    choice(aaiPOST_OnChange, "On Change")
}
menu(menuConvert) {
    choice(menuConvertNO_CONVERSION, "NO CONVERSION")
    choice(menuConvertSLOPE, "SLOPE")
    choice(menuConvertLINEAR, "LINEAR")
    choice(menuConverttypeKdegF, "typeKdegF")
    choice(menuConverttypeKdegC, "typeKdegC")
    choice(menuConverttypeJdegF, "typeJdegF")
    choice(menuConverttypeJdegC, "typeJdegC")
    choice(menuConverttypeEdegF, "typeEdegF(ixe only)")
    choice(menuConverttypeEdegC, "typeEdegC(ixe only)")
    choice(menuConverttypeTdegF, "typeTdegF")
    choice(menuConverttypeTdegC, "typeTdegC")
    choice(menuConverttypeRdegF, "typeRdegF")
    choice(menuConverttypeRdegC, "typeRdegC")
    choice(menuConverttypeSdegF, "typeSdegF")
    choice(menuConverttypeSdegC, "typeSdegC")
}
menu(acalcoutINAP) {
    choice(acalcoutINAP_No, "No PROC on Change")
    choice(acalcoutINAP_Yes, "PROC on Change")
}
menu(selSELM) {
    choice(selSELM_Specified, "Specified")
    choice(selSELM_High_Signal, "High Signal")
    choice(selSELM_Low_Signal, "Low Signal")
    choice(selSELM_Median_Signal, "Median Signal")
}
menu(gpibACMD) {
    choice(gpibACMD_None, "None")
    choice(gpibACMD_Group_Execute_Trig___GET_, "Group Execute Trig. (GET)")
    choice(gpibACMD_Go_To_Local__GTL_, "Go To Local (GTL)")
    choice(gpibACMD_Selected_Dev__Clear__SDC_, "Selected Dev. Clear (SDC)")
    choice(gpibACMD_Take_Control__TCT_, "Take Control (TCT)")
    choice(gpibACMD_Serial_Poll, "Serial Poll")
}
menu(mcaREAD) {
    choice(mcaREAD_Done, "Done")
    choice(mcaREAD_Read, "Read")
}
menu(sscanNOYES) {
    choice(sscanNOYES_NO, "NO")
    choice(sscanNOYES_YES, "YES")
}
menu(ipDRTO) {
    choice(ipDRTO_unknown, "Unknown")
    choice(ipDRTO_No, "No")
    choice(ipDRTO_Yes, "Yes")
}
menu(swaitDOPT) {
    choice(swaitDOPT_Use_VAL, "Use VAL")
    choice(swaitDOPT_Use_DOL, "Use DOL")
}
menu(serialSBIT) {
    choice(serialSBIT_unknown, "Unknown")
    choice(serialSBIT_1, "1")
    choice(serialSBIT_2, "2")
}
menu(calcoutINAV) {
    choice(calcoutINAV_EXT_NC, "Ext PV NC")
    choice(calcoutINAV_EXT, "Ext PV OK")
    choice(calcoutINAV_LOC, "Local PV")
    choice(calcoutINAV_CON, "Constant")
}
menu(sscanACQT) {
    choice(sscanACQT_SCALAR, "SCALAR")
    choice(sscanACQT_1D_ARRAY, "1D ARRAY")
}
menu(acalcoutDOPT) {
    choice(acalcoutDOPT_Use_VAL, "Use CALC")
    choice(acalcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(asynTRACE) {
    choice(asynTRACE_Off, "Off")
    choice(asynTRACE_On, "On")
}
menu(serialIX) {
    choice(serialIX_unknown, "Unknown")
    choice(serialIX_No, "No")
    choice(serialIX_Yes, "Yes")
}
menu(serialDBIT) {
    choice(serialDBIT_unknown, "Unknown")
    choice(serialDBIT_5, "5")
    choice(serialDBIT_6, "6")
    choice(serialDBIT_7, "7")
    choice(serialDBIT_8, "8")
}
menu(menuPini) {
    choice(menuPiniNO, "NO")
    choice(menuPiniYES, "YES")
    choice(menuPiniRUN, "RUN")
    choice(menuPiniRUNNING, "RUNNING")
    choice(menuPiniPAUSE, "PAUSE")
    choice(menuPiniPAUSED, "PAUSED")
}
menu(asynAUTOCONNECT) {
    choice(asynAUTOCONNECT_noAutoConnect, "noAutoConnect")
    choice(asynAUTOCONNECT_autoConnect, "autoConnect")
}
menu(sscanCMND) {
    choice(sscanCMND_CLEAR_MSG, "Clear msg")
    choice(sscanCMND_CHECK_LIMITS, "Check limits")
    choice(sscanCMND_PREVIEW_SCAN, "Preview scan")
    choice(sscanCMND_CLEAR_ALL_PVS, "Clear all PV's")
    choice(sscanCMND_CLEAR_POS_PVS_ETC, "Clear pos PV's, etc")
    choice(sscanCMND_CLEAR_POS_PVS, "Clear pos PV's")
    choice(sscanCMND_CLEAR_POS_RDBK_PVS_ETC, "Clear pos&rdbk PV's, etc")
    choice(sscanCMND_CLEAR_POS_RDBK_PVS, "Clear pos&rdbk PV's")
}
menu(scalcoutINAP) {
    choice(scalcoutINAP_No, "No PROC on Change")
    choice(scalcoutINAP_Yes, "PROC on Change")
}
menu(asynINTERFACE) {
    choice(asynINTERFACE_OCTET, "asynOctet")
    choice(asynINTERFACE_INT32, "asynInt32")
    choice(asynINTERFACE_UINT32, "asynUInt32Digital")
    choice(asynINTERFACE_FLOAT64, "asynFloat64")
}
menu(mcaMODE) {
    choice(mcaMODE_PHA, "PHA")
    choice(mcaMODE_MCS, "MCS")
    choice(mcaMODE_List, "List")
}
menu(mcaSTRT) {
    choice(mcaSTRT_Done, "Done")
    choice(mcaSTRT_Acquire, "Acquire")
}
menu(sscanFPTS) {
    choice(sscanFPTS_No, "NO")
    choice(sscanFPTS_Freeze, "FREEZE")
}
menu(sseqWAIT) {
    choice(sseqWAIT_NoWait, "NoWait")
    choice(sseqWAIT_Wait, "Wait")
    choice(sseqWAIT_Wait1, "After1")
    choice(sseqWAIT_Wait2, "After2")
    choice(sseqWAIT_Wait3, "After3")
    choice(sseqWAIT_Wait4, "After4")
    choice(sseqWAIT_Wait5, "After5")
    choice(sseqWAIT_Wait6, "After6")
    choice(sseqWAIT_Wait7, "After7")
    choice(sseqWAIT_Wait8, "After8")
    choice(sseqWAIT_Wait9, "After9")
    choice(sseqWAIT_Wait10, "AfterA")
}
menu(asynEOMREASON) {
    choice(asynEOMREASONNone, "None")
    choice(asynEOMREASONCNT, "Count")
    choice(asynEOMREASONEOS, "Eos")
    choice(asynEOMREASONCNTEOS, "Count Eos")
    choice(asynEOMREASONEND, "End")
    choice(asynEOMREASONCNTEND, "Count End")
    choice(asynEOMREASONEOSEND, "Eos End")
    choice(asynEOMREASONCNTEOSEND, "Count Eos End")
}
menu(scalcoutOOPT) {
    choice(scalcoutOOPT_Every_Time, "Every Time")
    choice(scalcoutOOPT_On_Change, "On Change")
    choice(scalcoutOOPT_When_Zero, "When Zero")
    choice(scalcoutOOPT_When_Non_zero, "When Non-zero")
    choice(scalcoutOOPT_Transition_To_Zero, "Transition To Zero")
    choice(scalcoutOOPT_Transition_To_Non_zero, "Transition To Non-zero")
    choice(scalcoutOOPT_Never, "Never")
}
menu(sseqLNKV) {
    choice(sseqLNKV_EXT_NC, "Ext PV NC")
    choice(sseqLNKV_EXT, "Ext PV OK")
    choice(sseqLNKV_LOC, "Local PV")
    choice(sseqLNKV_CON, "Constant")
}
menu(aSubLFLG) {
    choice(aSubLFLG_IGNORE, "IGNORE")
    choice(aSubLFLG_READ, "READ")
}
menu(asynCONNECT) {
    choice(asynCONNECT_Disconnect, "Disconnect")
    choice(asynCONNECT_Connect, "Connect")
}
menu(transformIAV) {
    choice(transformIAV_EXT_NC, "Ext PV NC")
    choice(transformIAV_EXT, "Ext PV OK")
    choice(transformIAV_LOC, "Local PV")
    choice(transformIAV_CON, "Constant")
}
menu(gpibUCMD) {
    choice(gpibUCMD_None, "None")
    choice(gpibUCMD_Device_Clear__DCL_, "Device Clear (DCL)")
    choice(gpibUCMD_Local_Lockout__LL0_, "Local Lockout (LL0)")
    choice(gpibUCMD_Serial_Poll_Disable__SPD_, "Serial Poll Disable (SPD)")
    choice(gpibUCMD_Serial_Poll_Enable__SPE_, "Serial Poll Enable (SPE)")
    choice(gpibUCMD_Unlisten__UNL_, "Unlisten (UNL)")
    choice(gpibUCMD_Untalk__UNT_, "Untalk (UNT)")
}
menu(serialBAUD) {
    choice(serialBAUD_unknown, "Unknown")
    choice(serialBAUD_300, "300")
    choice(serialBAUD_600, "600")
    choice(serialBAUD_1200, "1200")
    choice(serialBAUD_2400, "2400")
    choice(serialBAUD_4800, "4800")
    choice(serialBAUD_9600, "9600")
    choice(serialBAUD_19200, "19200")
    choice(serialBAUD_38400, "38400")
    choice(serialBAUD_57600, "57600")
    choice(serialBAUD_115200, "115200")
    choice(serialBAUD_230400, "230400")
    choice(serialBAUD_460800, "460800")
    choice(serialBAUD_576000, "576000")
    choice(serialBAUD_921600, "921600")
    choice(serialBAUD_1152000, "1152000")
}
menu(asynTMOD) {
    choice(asynTMOD_Write_Read, "Write/Read")
    choice(asynTMOD_Write, "Write")
    choice(asynTMOD_Read, "Read")
    choice(asynTMOD_Flush, "Flush")
    choice(asynTMOD_NoIO, "NoI/O")
}
menu(sscanPAUS) {
    choice(sscanPAUS_Go, "GO")
    choice(sscanPAUS_Pause, "PAUSE")
}
menu(serialPRTY) {
    choice(serialPRTY_unknown, "Unknown")
    choice(serialPRTY_None, "None")
    choice(serialPRTY_Even, "Even")
    choice(serialPRTY_Odd, "Odd")
}
menu(aSubEFLG) {
    choice(aSubEFLG_NEVER, "NEVER")
    choice(aSubEFLG_ON_CHANGE, "ON CHANGE")
    choice(aSubEFLG_ALWAYS, "ALWAYS")
}
menu(scalcoutWAIT) {
    choice(scalcoutWAIT_NoWait, "NoWait")
    choice(scalcoutWAIT_Wait, "Wait")
}
menu(asynENABLE) {
    choice(asynENABLE_Disable, "Disable")
    choice(asynENABLE_Enable, "Enable")
}
menu(sscanP1SM) {
    choice(sscanP1SM_Linear, "LINEAR")
    choice(sscanP1SM_Table, "TABLE")
    choice(sscanP1SM_On_The_Fly, "FLY")
}
menu(sseqSELM) {
    choice(sseqSELM_All, "All")
    choice(sseqSELM_Specified, "Specified")
    choice(sseqSELM_Mask, "Mask")
}
menu(sscanP1NV) {
    choice(sscanP1NV_PV_OK, "PV OK")
    choice(sscanP1NV_No_PV, "No PV")
    choice(sscanP1NV_PV_NoRead, "PV NoRead")
    choice(sscanP1NV_PV_xxx, "PV illegal1")
    choice(sscanP1NV_PV_NoWrite, "PV NoWrite")
    choice(sscanP1NV_PV_yyy, "PV illegal2")
    choice(sscanP1NV_PV_NC, "PV BAD")
}
menu(stringinPOST) {
    choice(stringinPOST_OnChange, "On Change")
    choice(stringinPOST_Always, "Always")
}
menu(mcaERAS) {
    choice(mcaERAS_Done, "Done")
    choice(mcaERAS_Erase, "Erase")
}
menu(menuAlarmSevr) {
    choice(menuAlarmSevrNO_ALARM, "NO_ALARM")
    choice(menuAlarmSevrMINOR, "MINOR")
    choice(menuAlarmSevrMAJOR, "MAJOR")
    choice(menuAlarmSevrINVALID, "INVALID")
}
menu(transformIVLA) {
    choice(transformIVLA_IGNORE, "Ignore error")
    choice(transformIVLA_DO_NOTHING, "Do Nothing")
}
menu(mcaR0IP) {
    choice(mcaR0IP_N, "N")
    choice(mcaR0IP_Y, "Y")
}
menu(calcoutDOPT) {
    choice(calcoutDOPT_Use_VAL, "Use CALC")
    choice(calcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(compressALG) {
    choice(compressALG_N_to_1_Low_Value, "N to 1 Low Value")
    choice(compressALG_N_to_1_High_Value, "N to 1 High Value")
    choice(compressALG_N_to_1_Average, "N to 1 Average")
    choice(compressALG_Average, "Average")
    choice(compressALG_Circular_Buffer, "Circular Buffer")
    choice(compressALG_N_to_1_Median, "N to 1 Median")
}
menu(serialFCTL) {
    choice(serialFCTL_unknown, "Unknown")
    choice(serialFCTL_None, "None")
    choice(serialFCTL_Hardware, "Hardware")
}
menu(mcaCHAS) {
    choice(mcaCHAS_Internal, "Internal")
    choice(mcaCHAS_External, "External")
}
menu(menuPriority) {
    choice(menuPriorityLOW, "LOW")
    choice(menuPriorityMEDIUM, "MEDIUM")
    choice(menuPriorityHIGH, "HIGH")
}
menu(menuFtype) {
    choice(menuFtypeSTRING, "STRING")
    choice(menuFtypeCHAR, "CHAR")
    choice(menuFtypeUCHAR, "UCHAR")
    choice(menuFtypeSHORT, "SHORT")
    choice(menuFtypeUSHORT, "USHORT")
    choice(menuFtypeLONG, "LONG")
    choice(menuFtypeULONG, "ULONG")
    choice(menuFtypeFLOAT, "FLOAT")
    choice(menuFtypeDOUBLE, "DOUBLE")
    choice(menuFtypeENUM, "ENUM")
}
menu(acalcoutWAIT) {
    choice(acalcoutWAIT_NoWait, "NoWait")
    choice(acalcoutWAIT_Wait, "Wait")
}
menu(menuAlarmStat) {
    choice(menuAlarmStatNO_ALARM, "NO_ALARM")
    choice(menuAlarmStatREAD, "READ")
    choice(menuAlarmStatWRITE, "WRITE")
    choice(menuAlarmStatHIHI, "HIHI")
    choice(menuAlarmStatHIGH, "HIGH")
    choice(menuAlarmStatLOLO, "LOLO")
    choice(menuAlarmStatLOW, "LOW")
    choice(menuAlarmStatSTATE, "STATE")
    choice(menuAlarmStatCOS, "COS")
    choice(menuAlarmStatCOMM, "COMM")
    choice(menuAlarmStatTIMEOUT, "TIMEOUT")
    choice(menuAlarmStatHWLIMIT, "HWLIMIT")
    choice(menuAlarmStatCALC, "CALC")
    choice(menuAlarmStatSCAN, "SCAN")
    choice(menuAlarmStatLINK, "LINK")
    choice(menuAlarmStatSOFT, "SOFT")
    choice(menuAlarmStatBAD_SUB, "BAD_SUB")
    choice(menuAlarmStatUDF, "UDF")
    choice(menuAlarmStatDISABLE, "DISABLE")
    choice(menuAlarmStatSIMM, "SIMM")
    choice(menuAlarmStatREAD_ACCESS, "READ_ACCESS")
    choice(menuAlarmStatWRITE_ACCESS, "WRITE_ACCESS")
}
menu(scalcoutDOPT) {
    choice(scalcoutDOPT_Use_VAL, "Use CALC")
    choice(scalcoutDOPT_Use_OVAL, "Use OCAL")
}
menu(menuIvoa) {
    choice(menuIvoaContinue_normally, "Continue normally")
    choice(menuIvoaDon_t_drive_outputs, "Don't drive outputs")
    choice(menuIvoaSet_output_to_IVOV, "Set output to IVOV")
}
menu(asynFMT) {
    choice(asynFMT_ASCII, "ASCII")
    choice(asynFMT_Hybrid, "Hybrid")
    choice(asynFMT_Binary, "Binary")
}
menu(seqSELM) {
    choice(seqSELM_All, "All")
    choice(seqSELM_Specified, "Specified")
    choice(seqSELM_Mask, "Mask")
}
menu(sscanFAZE) {
    choice(sscanFAZE_IDLE, "IDLE")
    choice(sscanFAZE_INIT_SCAN, "INIT_SCAN")
    choice(sscanFAZE_BEFORE_SCAN, "DO:BEFORE_SCAN")
    choice(sscanFAZE_BEFORE_SCAN_WAIT, "WAIT:BEFORE_SCAN")
    choice(sscanFAZE_MOVE_MOTORS, "MOVE_MOTORS")
    choice(sscanFAZE_CHECK_MOTORS, "WAIT:MOTORS")
    choice(sscanFAZE_TRIG_DETCTRS, "TRIG_DETCTRS")
    choice(sscanFAZE_READ_DETCTRS, "WAIT:DETCTRS")
    choice(sscanFAZE_RETRACE_MOVE, "RETRACE_MOVE")
    choice(sscanFAZE_RETRACE_WAIT, "WAIT:RETRACE")
    choice(sscanFAZE_AFTER_SCAN_DO, "DO:AFTER_SCAN")
    choice(sscanFAZE_AFTER_SCAN_WAIT, "WAIT:AFTER_SCAN")
    choice(sscanFAZE_SCAN_DONE, "SCAN_DONE")
    choice(sscanFAZE_SCAN_PENDING, "SCAN_PENDING")
    choice(sscanFAZE_PREVIEW, "PREVIEW")
    choice(sscanFAZE_RECORD_SCALAR_DATA, "RECORD SCALAR DATA")
}
menu(swaitINAV) {
    choice(swaitINAV_PV_OK, "PV OK")
    choice(swaitINAV_PV_BAD, "PV BAD")
    choice(swaitINAV_No_PV, "No PV")
}
menu(menuYesNo) {
    choice(menuYesNoNO, "NO")
    choice(menuYesNoYES, "YES")
}
menu(fanoutSELM) {
    choice(fanoutSELM_All, "All")
    choice(fanoutSELM_Specified, "Specified")
    choice(fanoutSELM_Mask, "Mask")
}
menu(histogramCMD) {
    choice(histogramCMD_Read, "Read")
    choice(histogramCMD_Clear, "Clear")
    choice(histogramCMD_Start, "Start")
    choice(histogramCMD_Stop, "Stop")
}
menu(stringoutPOST) {
    choice(stringoutPOST_OnChange, "On Change")
    choice(stringoutPOST_Always, "Always")
}
menu(sscanP1AR) {
    choice(sscanP1AR_Absolute, "ABSOLUTE")
    choice(sscanP1AR_Relative, "RELATIVE")
}
menu(aaoPOST) {
    choice(aaoPOST_Always, "Always")
    choice(aaoPOST_OnChange, "On Change")
}
menu(menuPost) {
    choice(menuPost_OnChange, "On Change")
    choice(menuPost_Always, "Always")
}
menu(menuScan) {
    choice(menuScanPassive, "Passive")
    choice(menuScanEvent, "Event")
    choice(menuScanI_O_Intr, "I/O Intr")
    choice(menuScan10_second, "10 second")
    choice(menuScan5_second, "5 second")
    choice(menuScan2_second, "2 second")
    choice(menuScan1_second, "1 second")
    choice(menuScan_5_second, ".5 second")
    choice(menuScan_2_second, ".2 second")
    choice(menuScan_1_second, ".1 second")
}
menu(waveformPOST) {
    choice(waveformPOST_Always, "Always")
    choice(waveformPOST_OnChange, "On Change")
}
menu(scalcoutINAV) {
    choice(scalcoutINAV_EXT_NC, "Ext PV NC")
    choice(scalcoutINAV_EXT, "Ext PV OK")
    choice(scalcoutINAV_LOC, "Local PV")
    choice(scalcoutINAV_CON, "Constant")
}
menu(sscanLINKWAIT) {
    choice(sscanLINKWAIT_YES, "Wait")
    choice(sscanLINKWAIT_NO, "NoWait")
}
recordtype(bi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Specification")
    }
    field(VAL, DBF_ENUM) {
        asl(ASL0)
        prompt("Current Value")
        pp(TRUE)
        promptgroup("40 - Input")
    }
    field(ZSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Zero Error Severity")
        interest(1)
    }
    field(OSV, DBF_MENU) {
        prompt("One Error Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(COSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Change of State Svr")
        interest(1)
    }
    field(ZNAM, DBF_STRING) {
        size(26)
        pp(TRUE)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Zero Name")
    }
    field(ONAM, DBF_STRING) {
        prompt("One Name")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
        size(26)
        pp(TRUE)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("prev Raw Value")
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        prompt("Hardware Mask")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Input Specifctn")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuSimm)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
}
device(bi, CONSTANT, devBiSoft, "Soft Channel")
device(bi, CONSTANT, devBiSoftRaw, "Raw Soft Channel")
device(bi, CONSTANT, devBiSoftCallback, "Async Soft Channel")
device(bi, INST_IO, devBiDbState, "Db State")
device(bi, INST_IO, asynBiInt32, "asynInt32")
device(bi, INST_IO, asynBiUInt32Digital, "asynUInt32Digital")
recordtype(sscan) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VERS, DBF_DOUBLE) {
        special(SPC_NOMOD)
        initial("3")
        prompt("Code Version")
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Value Field")
    }
    field(SMSG, DBF_STRING) {
        size(40)
        interest(1)
        prompt("Record State Msg")
    }
    field(CMND, DBF_MENU) {
        prompt("Command Field")
        interest(1)
        asl(ASL0)
        special(SPC_MOD)
        menu(sscanCMND)
    }
    field(ALRT, DBF_UCHAR) {
        prompt("Operator Alert")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        size(4)
        extra("void *           rpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Ptr to Pvt Struct")
    }
    field(MPTS, DBF_LONG) {
        promptgroup("40 - Link")
        special(SPC_NOMOD)
        interest(1)
        initial("100")
        prompt("Max # of Points")
    }
    field(EXSC, DBF_SHORT) {
        special(SPC_MOD)
        pp(TRUE)
        prompt("Execute Scan")
        asl(ASL0)
        interest(1)
    }
    field(XSC, DBF_SHORT) {
        prompt("Internal execScan")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PXSC, DBF_UCHAR) {
        prompt("Previous XScan")
        special(SPC_NOMOD)
    }
    field(BUSY, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Scan in progress")
    }
    field(KILL, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Abort right now")
    }
    field(WAIT, DBF_SHORT) {
        prompt("Wait for client(s)")
        special(SPC_MOD)
    }
    field(WCNT, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Wait count)")
    }
    field(AWCT, DBF_SHORT) {
        special(SPC_MOD)
        prompt("Auto WCNT")
    }
    field(WTNG, DBF_SHORT) {
        prompt("Waiting for client(s)")
        special(SPC_NOMOD)
    }
    field(AWAIT, DBF_SHORT) {
        prompt("Waiting for data-storage client")
        special(SPC_MOD)
    }
    field(AAWAIT, DBF_MENU) {
        prompt("AutoWait for data-storage client")
        promptgroup("40 - Input")
        menu(sscanNOYES)
    }
    field(DATA, DBF_SHORT) {
        prompt("Scan data ready")
        special(SPC_NOMOD)
    }
    field(REFD, DBF_SHORT) {
        prompt("Reference detector")
        initial("1")
        special(SPC_MOD)
    }
    field(NPTS, DBF_LONG) {
        interest(1)
        initial("100")
        asl(ASL0)
        prompt("Number of Points")
        special(116)
        promptgroup("40 - Link")
    }
    field(FPTS, DBF_MENU) {
        special(118)
        promptgroup("50 - Output")
        menu(sscanFPTS)
        prompt("Freeze Num of Points")
        initial("FREEZE")
        asl(ASL0)
        interest(1)
    }
    field(FFO, DBF_MENU) {
        interest(1)
        asl(ASL0)
        prompt("Freeze Flag Override")
        menu(sscanFFO)
        promptgroup("50 - Output")
        special(117)
    }
    field(CPT, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Current Point")
    }
    field(BCPT, DBF_LONG) {
        prompt("Bufferred Current Point")
        interest(1)
        special(SPC_NOMOD)
    }
    field(DPT, DBF_LONG) {
        prompt("Desired Point")
        interest(1)
        special(119)
    }
    field(PCPT, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Point ofLast Posting")
    }
    field(PASM, DBF_MENU) {
        interest(1)
        asl(ASL0)
        prompt("After Scan Mode")
        menu(sscanPASM)
        promptgroup("50 - Output")
    }
    field(TOLP, DBF_NOACCESS) {
        extra("epicsTimeStamp	tolp")
        special(SPC_NOMOD)
        prompt("Time of Last Posting")
        interest(2)
    }
    field(TLAP, DBF_NOACCESS) {
        extra("epicsTimeStamp	tlap")
        special(SPC_NOMOD)
        prompt("Time of Last Array Posting")
        interest(2)
    }
    field(ATIME, DBF_FLOAT) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(1)
        asl(ASL0)
        prompt("Array post time period")
    }
    field(P1PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Positioner 1 PV Name")
    }
    field(P2PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Positioner 2 PV Name")
        interest(1)
        asl(ASL0)
    }
    field(P3PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Positioner 3 PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(P4PV, DBF_STRING) {
        prompt("Positioner 4 PV Name")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(R1PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("P1 Readback  PV Name")
        asl(ASL0)
        interest(1)
    }
    field(R2PV, DBF_STRING) {
        prompt("P2 Readback  PV Name")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(R3PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("P3 Readback  PV Name")
        asl(ASL0)
        interest(1)
    }
    field(R4PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("P4 Readback  PV Name")
    }
    field(D01PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D02PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D03PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(D04PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D05PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D06PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(D07PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
    }
    field(D08PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D09PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D10PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D11PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(D12PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D13PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D14PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D15PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D16PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D17PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D18PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D19PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D20PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(D21PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D22PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D23PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D24PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D25PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
    }
    field(D26PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
    }
    field(D27PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D28PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D29PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D30PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
    }
    field(D31PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D32PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D33PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D34PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D35PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D36PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D37PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D38PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D39PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D40PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D41PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D42PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D43PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(D44PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D45PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D46PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D47PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(D48PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D49PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D50PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D51PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D52PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D53PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D54PV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D55PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D56PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D57PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D58PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D59PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
    }
    field(D60PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D61PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D62PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D63PV, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
    }
    field(D64PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D65PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D66PV, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Detector PV Name")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(D67PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Detector PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(D68PV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
    }
    field(D69PV, DBF_STRING) {
        prompt("Detector PV Name")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(D70PV, DBF_STRING) {
        prompt("Detector PV Name")
        interest(1)
        asl(ASL0)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(T1PV, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Trigger 1    PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(T2PV, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Trigger 2    PV Name")
    }
    field(T3PV, DBF_STRING) {
        prompt("Trigger 3    PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(T4PV, DBF_STRING) {
        prompt("Trigger 4    PV Name")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(A1PV, DBF_STRING) {
        prompt("Array-read trigger 1 PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(BSPV, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("Before Scan  PV Name")
        interest(1)
        asl(ASL0)
    }
    field(ASPV, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("After Scan   PV Name")
        asl(ASL0)
        interest(1)
    }
    field(BSWAIT, DBF_MENU) {
        prompt("Wait for completion?")
        initial("Wait")
        asl(ASL0)
        interest(1)
        promptgroup("40 - Input")
        menu(sscanLINKWAIT)
    }
    field(ASWAIT, DBF_MENU) {
        promptgroup("40 - Input")
        menu(sscanLINKWAIT)
        prompt("Wait for completion?")
        asl(ASL0)
        initial("Wait")
        interest(1)
    }
    field(P1NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("P1  PV Status")
    }
    field(P2NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("P2  PV Status")
        interest(1)
    }
    field(P3NV, DBF_MENU) {
        interest(1)
        prompt("P3  PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(P4NV, DBF_MENU) {
        prompt("P4  PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(R1NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("R1  PV Status")
    }
    field(R2NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("R2  PV Status")
        interest(1)
    }
    field(R3NV, DBF_MENU) {
        prompt("R3  PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(R4NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("R4  PV Status")
    }
    field(D01NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D02NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D03NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D04NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D05NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D06NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D07NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D08NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D09NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D10NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D11NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D12NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D13NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D14NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D15NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D16NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D17NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D18NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D19NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D20NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D21NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D22NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D23NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D24NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D25NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D26NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D27NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D28NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D29NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D30NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D31NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D32NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D33NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D34NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D35NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D36NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D37NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D38NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D39NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D40NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D41NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D42NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D43NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D44NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D45NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D46NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D47NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D48NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D49NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D50NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D51NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D52NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D53NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D54NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D55NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D56NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D57NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D58NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("PV Status")
        interest(1)
    }
    field(D59NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D60NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D61NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D62NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D63NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D64NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D65NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D66NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(D67NV, DBF_MENU) {
        interest(1)
        prompt("PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(D68NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D69NV, DBF_MENU) {
        prompt("PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(D70NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("PV Status")
    }
    field(T1NV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sscanP1NV)
        prompt("T1  PV Status")
        interest(1)
    }
    field(T2NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("T2  PV Status")
    }
    field(T3NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("T3  PV Status")
    }
    field(T4NV, DBF_MENU) {
        prompt("T4  PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(sscanP1NV)
    }
    field(A1NV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("A1  PV Status")
    }
    field(BSNV, DBF_MENU) {
        interest(1)
        prompt("BeforeScan PV Status")
        menu(sscanP1NV)
        special(SPC_NOMOD)
    }
    field(ASNV, DBF_MENU) {
        menu(sscanP1NV)
        special(SPC_NOMOD)
        interest(1)
        prompt("After Scan PV Status")
    }
    field(P1PP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P1 Previous Position")
    }
    field(P1CV, DBF_DOUBLE) {
        interest(1)
        prompt("P1 Current Value")
        special(SPC_NOMOD)
    }
    field(P1DV, DBF_DOUBLE) {
        prompt("P1 Desired Value")
        interest(1)
        special(SPC_MOD)
    }
    field(P1LV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P1 Last Value Posted")
    }
    field(P1SP, DBF_DOUBLE) {
        prompt("P1 Start Position")
        interest(1)
        asl(ASL0)
        special(111)
        promptgroup("40 - Input")
    }
    field(P1SI, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(112)
        prompt("P1 Step Increment")
        asl(ASL0)
        interest(1)
    }
    field(P1EP, DBF_DOUBLE) {
        prompt("P1 End Position")
        interest(1)
        asl(ASL0)
        promptgroup("40 - Input")
        special(113)
    }
    field(P1CP, DBF_DOUBLE) {
        prompt("P1 Center Position")
        interest(1)
        asl(ASL0)
        promptgroup("40 - Input")
        special(114)
    }
    field(P1WD, DBF_DOUBLE) {
        special(115)
        promptgroup("40 - Input")
        prompt("P1 Scan Width")
        asl(ASL0)
        interest(1)
    }
    field(R1CV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P1 Readback Value")
        interest(1)
    }
    field(R1LV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P1 Rdbk Last Val Pst")
        interest(1)
    }
    field(R1DL, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("P1 Readback Delta")
        promptgroup("40 - Input")
    }
    field(P1HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("P1 High Oper Range")
        promptgroup("60 - Convert")
    }
    field(P1LR, DBF_DOUBLE) {
        prompt("P1 Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(P1PA, DBF_NOACCESS) {
        extra("double *         p1pa")
        special(SPC_DBADDR)
        size(4)
        prompt("P1 Step Array")
        asl(ASL0)
    }
    field(P1RA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("P1 Readback Array")
        size(4)
        extra("double *         p1ra")
        special(SPC_DBADDR)
    }
    field(P1CA, DBF_NOACCESS) {
        size(4)
        extra("double *         p1ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("P1 Current Readback Array")
    }
    field(P1FS, DBF_MENU) {
        prompt("P1 Freeze Start Pos")
        asl(ASL0)
        interest(1)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P1FI, DBF_MENU) {
        prompt("P1 Freeze Step Inc")
        interest(1)
        asl(ASL0)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P1FE, DBF_MENU) {
        interest(1)
        asl(ASL0)
        prompt("P1 Freeze End Pos")
        menu(sscanFPTS)
        special(118)
        promptgroup("50 - Output")
    }
    field(P1FC, DBF_MENU) {
        prompt("P1 Freeze Center Pos")
        interest(1)
        asl(ASL0)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P1FW, DBF_MENU) {
        asl(ASL0)
        interest(1)
        prompt("P1 Freeze Width")
        menu(sscanFPTS)
        promptgroup("50 - Output")
        special(118)
    }
    field(P1SM, DBF_MENU) {
        special(120)
        promptgroup("50 - Output")
        menu(sscanP1SM)
        prompt("P1 Step Mode")
        asl(ASL0)
        interest(1)
    }
    field(P1AR, DBF_MENU) {
        menu(sscanP1AR)
        promptgroup("50 - Output")
        asl(ASL0)
        interest(1)
        prompt("P1 Absolute/Relative")
    }
    field(P1EU, DBF_STRING) {
        prompt("P1 Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(P1PR, DBF_SHORT) {
        prompt("P1 Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(P2PP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P2 Previous Position")
        interest(1)
    }
    field(P2CV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P2 Current Value")
        interest(1)
    }
    field(P2DV, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("P2 Desired Value")
        interest(1)
    }
    field(P2LV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P2 Last Value Posted")
    }
    field(P2SP, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(111)
        asl(ASL0)
        interest(1)
        prompt("P2 Start Position")
    }
    field(P2SI, DBF_DOUBLE) {
        prompt("P2 Step Increment")
        interest(1)
        asl(ASL0)
        special(112)
        promptgroup("40 - Input")
    }
    field(P2EP, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(113)
        asl(ASL0)
        interest(1)
        prompt("P2 End Position")
    }
    field(P2CP, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(114)
        interest(1)
        asl(ASL0)
        prompt("P2 Center Position")
    }
    field(P2WD, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("P2 Scan Width")
        promptgroup("40 - Input")
        special(115)
    }
    field(R2CV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P2 Readback Value")
        interest(1)
    }
    field(R2LV, DBF_DOUBLE) {
        interest(1)
        prompt("P2 Rdbk Last Val Pst")
        special(SPC_NOMOD)
    }
    field(R2DL, DBF_DOUBLE) {
        prompt("P2 Readback Delta")
        interest(1)
        asl(ASL0)
        promptgroup("40 - Input")
    }
    field(P2HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("P2 High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(P2LR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("P2 Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(P2PA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("P2 Step Array")
        size(4)
        special(SPC_DBADDR)
        extra("double *         p2pa")
    }
    field(P2RA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("P2 Readback Array")
        size(4)
        special(SPC_DBADDR)
        extra("double *         p2ra")
    }
    field(P2CA, DBF_NOACCESS) {
        extra("double *         p2ca")
        special(SPC_DBADDR)
        size(4)
        prompt("P2 Current Readback Array")
        asl(ASL0)
    }
    field(P2FS, DBF_MENU) {
        menu(sscanFPTS)
        special(118)
        promptgroup("50 - Output")
        interest(1)
        asl(ASL0)
        prompt("P2 Freeze Start Pos")
    }
    field(P2FI, DBF_MENU) {
        interest(1)
        asl(ASL0)
        prompt("P2 Freeze Step Inc")
        menu(sscanFPTS)
        promptgroup("50 - Output")
        special(118)
    }
    field(P2FE, DBF_MENU) {
        interest(1)
        asl(ASL0)
        prompt("P2 Freeze End Pos")
        menu(sscanFPTS)
        promptgroup("50 - Output")
        special(118)
    }
    field(P2FC, DBF_MENU) {
        prompt("P2 Freeze Center Pos")
        asl(ASL0)
        interest(1)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P2FW, DBF_MENU) {
        prompt("P2 Freeze Width")
        interest(1)
        asl(ASL0)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P2SM, DBF_MENU) {
        menu(sscanP1SM)
        promptgroup("50 - Output")
        special(120)
        interest(1)
        asl(ASL0)
        prompt("P2 Step Mode")
    }
    field(P2AR, DBF_MENU) {
        prompt("P2 Absolute/Relative")
        interest(1)
        asl(ASL0)
        promptgroup("50 - Output")
        menu(sscanP1AR)
    }
    field(P2EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("P2 Engineering Units")
    }
    field(P2PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("P2 Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(P3PP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P3 Previous Position")
    }
    field(P3CV, DBF_DOUBLE) {
        interest(1)
        prompt("P3 Current Value")
        special(SPC_NOMOD)
    }
    field(P3DV, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("P3 Desired Value")
        interest(1)
    }
    field(P3LV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P3 Last Value Posted")
    }
    field(P3SP, DBF_DOUBLE) {
        special(111)
        promptgroup("40 - Input")
        interest(1)
        asl(ASL0)
        prompt("P3 Start Position")
    }
    field(P3SI, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(112)
        prompt("P3 Step Increment")
        asl(ASL0)
        interest(1)
    }
    field(P3EP, DBF_DOUBLE) {
        prompt("P3 End Position")
        interest(1)
        asl(ASL0)
        promptgroup("40 - Input")
        special(113)
    }
    field(P3CP, DBF_DOUBLE) {
        special(114)
        promptgroup("40 - Input")
        prompt("P3 Center Position")
        asl(ASL0)
        interest(1)
    }
    field(P3WD, DBF_DOUBLE) {
        special(115)
        promptgroup("40 - Input")
        asl(ASL0)
        interest(1)
        prompt("P3 Scan Width")
    }
    field(R3CV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P3 Readback Value")
    }
    field(R3LV, DBF_DOUBLE) {
        prompt("P3 Rdbk Last Val Pst")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R3DL, DBF_DOUBLE) {
        promptgroup("40 - Input")
        prompt("P3 Readback Delta")
        asl(ASL0)
        interest(1)
    }
    field(P3HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("P3 High Oper Range")
        promptgroup("60 - Convert")
    }
    field(P3LR, DBF_DOUBLE) {
        prompt("P3 Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(P3PA, DBF_NOACCESS) {
        prompt("P3 Step Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("double *         p3pa")
        size(4)
    }
    field(P3RA, DBF_NOACCESS) {
        size(4)
        extra("double *         p3ra")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("P3 Readback Array")
    }
    field(P3CA, DBF_NOACCESS) {
        size(4)
        extra("double *         p3ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("P3 Current Readback Array")
    }
    field(P3FS, DBF_MENU) {
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
        prompt("P3 Freeze Start Pos")
        asl(ASL0)
        interest(1)
    }
    field(P3FI, DBF_MENU) {
        menu(sscanFPTS)
        special(118)
        promptgroup("50 - Output")
        interest(1)
        asl(ASL0)
        prompt("P3 Freeze Step Inc")
    }
    field(P3FE, DBF_MENU) {
        asl(ASL0)
        interest(1)
        prompt("P3 Freeze End Pos")
        menu(sscanFPTS)
        promptgroup("50 - Output")
        special(118)
    }
    field(P3FC, DBF_MENU) {
        menu(sscanFPTS)
        promptgroup("50 - Output")
        special(118)
        asl(ASL0)
        interest(1)
        prompt("P3 Freeze Center Pos")
    }
    field(P3FW, DBF_MENU) {
        prompt("P3 Freeze Width")
        asl(ASL0)
        interest(1)
        special(118)
        promptgroup("50 - Output")
        menu(sscanFPTS)
    }
    field(P3SM, DBF_MENU) {
        prompt("P3 Step Mode")
        interest(1)
        asl(ASL0)
        special(120)
        promptgroup("50 - Output")
        menu(sscanP1SM)
    }
    field(P3AR, DBF_MENU) {
        promptgroup("50 - Output")
        menu(sscanP1AR)
        prompt("P3 Absolute/Relative")
        asl(ASL0)
        interest(1)
    }
    field(P3EU, DBF_STRING) {
        prompt("P3 Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(P3PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("P3 Display Precision")
        promptgroup("30 - Action")
    }
    field(P4PP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P4 Previous Position")
        interest(1)
    }
    field(P4CV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("P4 Current Value")
    }
    field(P4DV, DBF_DOUBLE) {
        prompt("P4 Desired Value")
        interest(1)
        special(SPC_MOD)
    }
    field(P4LV, DBF_DOUBLE) {
        prompt("P4 Last Value Posted")
        interest(1)
        special(SPC_NOMOD)
    }
    field(P4SP, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(111)
        interest(1)
        asl(ASL0)
        prompt("P4 Start Position")
    }
    field(P4SI, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(112)
        interest(1)
        asl(ASL0)
        prompt("P4 Step Increment")
    }
    field(P4EP, DBF_DOUBLE) {
        special(113)
        promptgroup("40 - Input")
        interest(1)
        asl(ASL0)
        prompt("P4 End Position")
    }
    field(P4CP, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("P4 Center Position")
        promptgroup("40 - Input")
        special(114)
    }
    field(P4WD, DBF_DOUBLE) {
        prompt("P4 Scan Width")
        asl(ASL0)
        interest(1)
        special(115)
        promptgroup("40 - Input")
    }
    field(R4CV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P4 Readback Value")
        interest(1)
    }
    field(R4LV, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("P4 Rdbk Last Val Pst")
        interest(1)
    }
    field(R4DL, DBF_DOUBLE) {
        promptgroup("40 - Input")
        prompt("P4 Readback Delta")
        interest(1)
        asl(ASL0)
    }
    field(P4HR, DBF_DOUBLE) {
        prompt("P4 High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(P4LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("P4 Low  Oper Range")
    }
    field(P4PA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("double *         p4pa")
        size(4)
        prompt("P4 Step Array")
        asl(ASL0)
    }
    field(P4RA, DBF_NOACCESS) {
        size(4)
        extra("double *         p4ra")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("P4 Readback Array")
    }
    field(P4CA, DBF_NOACCESS) {
        prompt("P4 Current Readback Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("double *         p4ca")
        size(4)
    }
    field(P4FS, DBF_MENU) {
        asl(ASL0)
        interest(1)
        prompt("P4 Freeze Start Pos")
        menu(sscanFPTS)
        special(118)
        promptgroup("50 - Output")
    }
    field(P4FI, DBF_MENU) {
        asl(ASL0)
        interest(1)
        prompt("P4 Freeze Step Inc")
        menu(sscanFPTS)
        promptgroup("50 - Output")
        special(118)
    }
    field(P4FE, DBF_MENU) {
        prompt("P4 Freeze End Pos")
        interest(1)
        asl(ASL0)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P4FC, DBF_MENU) {
        prompt("P4 Freeze Center Pos")
        interest(1)
        asl(ASL0)
        promptgroup("50 - Output")
        special(118)
        menu(sscanFPTS)
    }
    field(P4FW, DBF_MENU) {
        prompt("P4 Freeze Width")
        interest(1)
        asl(ASL0)
        special(118)
        promptgroup("50 - Output")
        menu(sscanFPTS)
    }
    field(P4SM, DBF_MENU) {
        asl(ASL0)
        interest(1)
        prompt("P4 Step Mode")
        menu(sscanP1SM)
        promptgroup("50 - Output")
        special(120)
    }
    field(P4AR, DBF_MENU) {
        menu(sscanP1AR)
        promptgroup("50 - Output")
        asl(ASL0)
        interest(1)
        prompt("P4 Absolute/Relative")
    }
    field(P4EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("P4 Engineering Units")
        interest(1)
        asl(ASL0)
    }
    field(P4PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("P4 Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D01HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D01LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D01DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d01da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D01CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d01ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D01CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D01LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D01NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D01EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D01PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D02HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D02LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D02DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d02da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D02CA, DBF_NOACCESS) {
        size(4)
        extra("float *          d02ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D02CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D02LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D02NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D02EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D02PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D03HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D03LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D03DA, DBF_NOACCESS) {
        extra("float *          d03da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D03CA, DBF_NOACCESS) {
        extra("float *          d03ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D03CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D03LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D03NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D03EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D03PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D04HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D04LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D04DA, DBF_NOACCESS) {
        extra("float *          d04da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D04CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d04ca")
    }
    field(D04CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D04LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D04NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D04EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D04PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D05HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D05LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D05DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d05da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D05CA, DBF_NOACCESS) {
        extra("float *          d05ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D05CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        asl(ASL0)
        interest(1)
    }
    field(D05LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D05NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D05EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D05PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D06HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D06LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D06DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d06da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D06CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d06ca")
    }
    field(D06CV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D06LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D06NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D06EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D06PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D07HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D07LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D07DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d07da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D07CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d07ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D07CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D07LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D07NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D07EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D07PR, DBF_SHORT) {
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D08HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D08LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D08DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d08da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D08CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d08ca")
        special(SPC_DBADDR)
    }
    field(D08CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D08LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D08NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D08EU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(D08PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D09HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D09LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D09DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d09da")
    }
    field(D09CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d09ca")
        size(4)
    }
    field(D09CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D09LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D09NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D09EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D09PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D10HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D10LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D10DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d10da")
    }
    field(D10CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d10ca")
        special(SPC_DBADDR)
    }
    field(D10CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D10LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D10NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D10EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D10PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D11HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D11LR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D11DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d11da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D11CA, DBF_NOACCESS) {
        extra("float *          d11ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D11CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D11LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D11NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D11EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D11PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D12HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D12LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D12DA, DBF_NOACCESS) {
        extra("float *          d12da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D12CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d12ca")
    }
    field(D12CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D12LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D12NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D12EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D12PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D13HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D13LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D13DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d13da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D13CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d13ca")
        special(SPC_DBADDR)
    }
    field(D13CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D13LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D13NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D13EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D13PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D14HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D14LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D14DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d14da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D14CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d14ca")
        special(SPC_DBADDR)
    }
    field(D14CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D14LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D14NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D14EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D14PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D15HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D15LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D15DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d15da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D15CA, DBF_NOACCESS) {
        extra("float *          d15ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D15CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D15LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D15NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D15EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D15PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D16HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D16LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D16DA, DBF_NOACCESS) {
        extra("float *          d16da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D16CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d16ca")
        size(4)
    }
    field(D16CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D16LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D16NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D16EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D16PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D17HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D17LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D17DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d17da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D17CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d17ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D17CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D17LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D17NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D17EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D17PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D18HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D18LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D18DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d18da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D18CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d18ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D18CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D18LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D18NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D18EU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(D18PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D19HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D19LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D19DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d19da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D19CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d19ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D19CV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D19LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D19NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D19EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D19PR, DBF_SHORT) {
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D20HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D20LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D20DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d20da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D20CA, DBF_NOACCESS) {
        extra("float *          d20ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D20CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D20LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D20NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D20EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D20PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D21HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D21LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D21DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d21da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D21CA, DBF_NOACCESS) {
        extra("float *          d21ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D21CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D21LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D21NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D21EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D21PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D22HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D22LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D22DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d22da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D22CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d22ca")
        size(4)
    }
    field(D22CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D22LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D22NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D22EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D22PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D23HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D23LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D23DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d23da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D23CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d23ca")
        size(4)
    }
    field(D23CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D23LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D23NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D23EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D23PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D24HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D24LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D24DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d24da")
        size(4)
    }
    field(D24CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d24ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D24CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        asl(ASL0)
        interest(1)
    }
    field(D24LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D24NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D24EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D24PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D25HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D25LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D25DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d25da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D25CA, DBF_NOACCESS) {
        extra("float *          d25ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D25CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D25LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
    }
    field(D25NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D25EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D25PR, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
    }
    field(D26HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D26LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D26DA, DBF_NOACCESS) {
        extra("float *          d26da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D26CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d26ca")
    }
    field(D26CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D26LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D26NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D26EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D26PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D27HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D27LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D27DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d27da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D27CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d27ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D27CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        asl(ASL0)
        interest(1)
    }
    field(D27LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D27NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D27EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D27PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D28HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D28LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D28DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d28da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D28CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d28ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D28CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D28LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D28NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D28EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D28PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D29HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D29LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D29DA, DBF_NOACCESS) {
        extra("float *          d29da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D29CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d29ca")
        special(SPC_DBADDR)
    }
    field(D29CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        asl(ASL0)
        interest(1)
    }
    field(D29LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D29NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D29EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
    }
    field(D29PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D30HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D30LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D30DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d30da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D30CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d30ca")
        size(4)
    }
    field(D30CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D30LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
    }
    field(D30NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D30EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D30PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D31HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D31LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D31DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d31da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D31CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d31ca")
        size(4)
    }
    field(D31CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D31LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D31NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D31EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D31PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D32HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D32LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D32DA, DBF_NOACCESS) {
        extra("float *          d32da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D32CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d32ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D32CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D32LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D32NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D32EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D32PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D33HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D33LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D33DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d33da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D33CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d33ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D33CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D33LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D33NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D33EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D33PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D34HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D34LR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D34DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d34da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D34CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d34ca")
        size(4)
    }
    field(D34CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D34LV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D34NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D34EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
    }
    field(D34PR, DBF_SHORT) {
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D35HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D35LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D35DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d35da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D35CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d35ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D35CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D35LV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D35NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D35EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D35PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D36HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D36LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D36DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d36da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D36CA, DBF_NOACCESS) {
        extra("float *          d36ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D36CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D36LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D36NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D36EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D36PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D37HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D37LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D37DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d37da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D37CA, DBF_NOACCESS) {
        size(4)
        extra("float *          d37ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D37CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D37LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D37NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D37EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D37PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D38HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D38LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D38DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d38da")
        size(4)
    }
    field(D38CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d38ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D38CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D38LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D38NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D38EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D38PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D39HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D39LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D39DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d39da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D39CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d39ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D39CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D39LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D39NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D39EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D39PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D40HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D40LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D40DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        extra("float *          d40da")
        special(SPC_DBADDR)
    }
    field(D40CA, DBF_NOACCESS) {
        size(4)
        extra("float *          d40ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D40CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D40LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D40NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D40EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D40PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D41HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D41LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D41DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d41da")
    }
    field(D41CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d41ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D41CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D41LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D41NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D41EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D41PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D42HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D42LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D42DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d42da")
    }
    field(D42CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d42ca")
    }
    field(D42CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D42LV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D42NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D42EU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(D42PR, DBF_SHORT) {
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D43HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D43LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D43DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d43da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D43CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d43ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D43CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D43LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D43NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D43EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D43PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D44HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D44LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D44DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        extra("float *          d44da")
        special(SPC_DBADDR)
    }
    field(D44CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d44ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D44CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D44LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D44NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D44EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D44PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D45HR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D45LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D45DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d45da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D45CA, DBF_NOACCESS) {
        extra("float *          d45ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D45CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D45LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D45NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D45EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D45PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D46HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D46LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D46DA, DBF_NOACCESS) {
        extra("float *          d46da")
        special(SPC_DBADDR)
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D46CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d46ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D46CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D46LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D46NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D46EU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(D46PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D47HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D47LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D47DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d47da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D47CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d47ca")
        size(4)
    }
    field(D47CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D47LV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D47NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D47EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
    }
    field(D47PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D48HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D48LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D48DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d48da")
    }
    field(D48CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d48ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D48CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D48LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D48NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D48EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D48PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D49HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D49LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D49DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d49da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D49CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d49ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D49CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D49LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D49NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D49EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
    }
    field(D49PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D50HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D50LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D50DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        extra("float *          d50da")
        special(SPC_DBADDR)
    }
    field(D50CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d50ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D50CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D50LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D50NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D50EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D50PR, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
    }
    field(D51HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D51LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D51DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d51da")
        size(4)
    }
    field(D51CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d51ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D51CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D51LV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
        special(SPC_NOMOD)
    }
    field(D51NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D51EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D51PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D52HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D52LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D52DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d52da")
        size(4)
    }
    field(D52CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d52ca")
        size(4)
    }
    field(D52CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        interest(1)
        asl(ASL0)
    }
    field(D52LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D52NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D52EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D52PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D53HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D53LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D53DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d53da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D53CA, DBF_NOACCESS) {
        size(4)
        extra("float *          d53ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D53CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D53LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D53NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D53EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D53PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D54HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D54LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D54DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        extra("float *          d54da")
        special(SPC_DBADDR)
    }
    field(D54CA, DBF_NOACCESS) {
        extra("float *          d54ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D54CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D54LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D54NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D54EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D54PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D55HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("High Oper Range")
    }
    field(D55LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D55DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d55da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D55CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d55ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D55CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D55LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D55NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D55EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
    }
    field(D55PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D56HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D56LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D56DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d56da")
        size(4)
    }
    field(D56CA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d56ca")
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D56CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D56LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D56NE, DBF_ULONG) {
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D56EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D56PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D57HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D57LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D57DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d57da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D57CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d57ca")
        size(4)
    }
    field(D57CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D57LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D57NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D57EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D57PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D58HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D58LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D58DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d58da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D58CA, DBF_NOACCESS) {
        size(4)
        extra("float *          d58ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D58CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D58LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D58NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D58EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D58PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D59HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D59LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
    }
    field(D59DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d59da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D59CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d59ca")
        size(4)
    }
    field(D59CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D59LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
    }
    field(D59NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
    }
    field(D59EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D59PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D60HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D60LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D60DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d60da")
        size(4)
    }
    field(D60CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d60ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D60CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D60LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D60NE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
    }
    field(D60EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D60PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D61HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D61LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D61DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d61da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D61CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d61ca")
        special(SPC_DBADDR)
    }
    field(D61CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Current Value")
    }
    field(D61LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
    }
    field(D61NE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("# of Elements/Pt")
    }
    field(D61EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D61PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D62HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D62LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D62DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d62da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D62CA, DBF_NOACCESS) {
        extra("float *          d62ca")
        special(SPC_DBADDR)
        size(4)
        prompt("Current Data Array")
        asl(ASL0)
    }
    field(D62CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D62LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D62NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D62EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D62PR, DBF_SHORT) {
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D63HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D63LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D63DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d63da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D63CA, DBF_NOACCESS) {
        size(4)
        extra("float *          d63ca")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D63CV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D63LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
    }
    field(D63NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D63EU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(D63PR, DBF_SHORT) {
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(D64HR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
        promptgroup("60 - Convert")
    }
    field(D64LR, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D64DA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d64da")
        asl(ASL0)
        prompt("Data Array")
    }
    field(D64CA, DBF_NOACCESS) {
        size(4)
        special(SPC_DBADDR)
        extra("float *          d64ca")
        asl(ASL0)
        prompt("Current Data Array")
    }
    field(D64CV, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D64LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D64NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D64EU, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
    }
    field(D64PR, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
    }
    field(D65HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D65LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("Low  Oper Range")
        interest(1)
        asl(ASL0)
    }
    field(D65DA, DBF_NOACCESS) {
        size(4)
        extra("float *          d65da")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Data Array")
    }
    field(D65CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d65ca")
    }
    field(D65CV, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Current Value")
        special(SPC_NOMOD)
    }
    field(D65LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D65NE, DBF_ULONG) {
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
        special(SPC_NOMOD)
    }
    field(D65EU, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D65PR, DBF_SHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
    }
    field(D66HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D66LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D66DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d66da")
        size(4)
    }
    field(D66CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d66ca")
        size(4)
    }
    field(D66CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D66LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D66NE, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("# of Elements/Pt")
    }
    field(D66EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D66PR, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        asl(ASL0)
        prompt("Display Precision")
    }
    field(D67HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D67LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D67DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d67da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D67CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        extra("float *          d67ca")
        special(SPC_DBADDR)
        size(4)
    }
    field(D67CV, DBF_FLOAT) {
        prompt("Current Value")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D67LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Last Value Posted")
    }
    field(D67NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D67EU, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("Engineering Units")
        size(16)
        promptgroup("30 - Action")
    }
    field(D67PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
    }
    field(D68HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        prompt("High Oper Range")
        asl(ASL0)
        interest(1)
    }
    field(D68LR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
    }
    field(D68DA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Data Array")
        size(4)
        special(SPC_DBADDR)
        extra("float *          d68da")
    }
    field(D68CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d68ca")
        special(SPC_DBADDR)
    }
    field(D68CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        interest(1)
        asl(ASL0)
        prompt("Current Value")
    }
    field(D68LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D68NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D68EU, DBF_STRING) {
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        size(16)
    }
    field(D68PR, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Display Precision")
        interest(1)
        asl(ASL0)
    }
    field(D69HR, DBF_DOUBLE) {
        prompt("High Oper Range")
        interest(1)
        asl(ASL0)
        promptgroup("60 - Convert")
    }
    field(D69LR, DBF_DOUBLE) {
        interest(1)
        asl(ASL0)
        prompt("Low  Oper Range")
        promptgroup("60 - Convert")
    }
    field(D69DA, DBF_NOACCESS) {
        prompt("Data Array")
        asl(ASL0)
        extra("float *          d69da")
        special(SPC_DBADDR)
        size(4)
    }
    field(D69CA, DBF_NOACCESS) {
        prompt("Current Data Array")
        asl(ASL0)
        special(SPC_DBADDR)
        extra("float *          d69ca")
        size(4)
    }
    field(D69CV, DBF_FLOAT) {
        prompt("Current Value")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D69LV, DBF_FLOAT) {
        special(SPC_NOMOD)
        asl(ASL0)
        interest(1)
        prompt("Last Value Posted")
    }
    field(D69NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D69EU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        size(16)
    }
    field(D69PR, DBF_SHORT) {
        prompt("Display Precision")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
    }
    field(D70HR, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        asl(ASL0)
        interest(1)
        prompt("High Oper Range")
    }
    field(D70LR, DBF_DOUBLE) {
        prompt("Low  Oper Range")
        asl(ASL0)
        interest(1)
        promptgroup("60 - Convert")
    }
    field(D70DA, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("float *          d70da")
        size(4)
        prompt("Data Array")
        asl(ASL0)
    }
    field(D70CA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Data Array")
        size(4)
        extra("float *          d70ca")
        special(SPC_DBADDR)
    }
    field(D70CV, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Current Value")
        asl(ASL0)
        interest(1)
    }
    field(D70LV, DBF_FLOAT) {
        prompt("Last Value Posted")
        interest(1)
        asl(ASL0)
        special(SPC_NOMOD)
    }
    field(D70NE, DBF_ULONG) {
        prompt("# of Elements/Pt")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
    }
    field(D70EU, DBF_STRING) {
        promptgroup("30 - Action")
        size(16)
        prompt("Engineering Units")
        asl(ASL0)
        interest(1)
    }
    field(D70PR, DBF_SHORT) {
        asl(ASL0)
        interest(1)
        prompt("Display Precision")
        promptgroup("30 - Action")
    }
    field(T1CD, DBF_FLOAT) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        prompt("T1 Cmnd")
        asl(ASL0)
        initial("1.0")
        interest(1)
    }
    field(T2CD, DBF_FLOAT) {
        interest(1)
        initial("1.0")
        asl(ASL0)
        prompt("T2 Cmnd")
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(T3CD, DBF_FLOAT) {
        asl(ASL0)
        initial("1.0")
        interest(1)
        prompt("T3 Cmnd")
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(T4CD, DBF_FLOAT) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(1)
        asl(ASL0)
        initial("1.0")
        prompt("T4 Cmnd")
    }
    field(A1CD, DBF_FLOAT) {
        initial("1.0")
        asl(ASL0)
        interest(1)
        prompt("A1 Cmnd")
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(BSCD, DBF_FLOAT) {
        prompt("Before Scan Cmnd")
        interest(1)
        asl(ASL0)
        initial("1.0")
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(ASCD, DBF_FLOAT) {
        initial("1.0")
        asl(ASL0)
        interest(1)
        prompt("After Scan Cmnd")
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(PAUS, DBF_MENU) {
        prompt("Go/Pause control")
        interest(1)
        initial("GO")
        asl(ASL0)
        special(SPC_MOD)
        menu(sscanPAUS)
    }
    field(LPAU, DBF_MENU) {
        prompt("Last value of Go/Pause")
        asl(ASL0)
        initial("GO")
        special(SPC_NOMOD)
        menu(sscanPAUS)
    }
    field(PDLY, DBF_FLOAT) {
        prompt("Positioner-settling delay")
        asl(ASL0)
        interest(1)
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(DDLY, DBF_FLOAT) {
        interest(1)
        asl(ASL0)
        prompt("Detector-settling delay")
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(RDLY, DBF_FLOAT) {
        promptgroup("40 - Input")
        special(SPC_MOD)
        interest(1)
        asl(ASL0)
        prompt("Pause resume delay")
    }
    field(FAZE, DBF_MENU) {
        interest(1)
        asl(ASL0)
        prompt("Scan phase")
        menu(sscanFAZE)
        special(SPC_NOMOD)
    }
    field(ACQM, DBF_MENU) {
        menu(sscanACQM)
        special(SPC_MOD)
        promptgroup("10 - Common")
        asl(ASL0)
        initial("NORMAL")
        interest(1)
        prompt("Acquisition mode")
    }
    field(ACQT, DBF_MENU) {
        interest(1)
        asl(ASL0)
        initial("SCALAR")
        prompt("Acquisition type")
        menu(sscanACQT)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(DSTATE, DBF_MENU) {
        prompt("Data state")
        asl(ASL0)
        interest(1)
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        menu(sscanDSTATE)
    }
    field(COPYTO, DBF_LONG) {
        interest(1)
        prompt("Copy Last Pt Thru")
        promptgroup("10 - Common")
    }
}
recordtype(permissive) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(LABL, DBF_STRING) {
        promptgroup("80 - Display")
        pp(TRUE)
        size(20)
        prompt("Button Label")
        interest(1)
    }
    field(VAL, DBF_USHORT) {
        asl(ASL0)
        prompt("Status")
        pp(TRUE)
        promptgroup("40 - Input")
    }
    field(OVAL, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Old Status")
        interest(3)
    }
    field(WFLG, DBF_USHORT) {
        prompt("Wait Flag")
        pp(TRUE)
    }
    field(OFLG, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Old Flag")
    }
}
recordtype(fanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        pp(TRUE)
        asl(ASL0)
        prompt("Used to trigger")
    }
    field(SELM, DBF_MENU) {
        menu(fanoutSELM)
        promptgroup("30 - Action")
        interest(1)
        prompt("Select Mechanism")
    }
    field(SELN, DBF_USHORT) {
        interest(1)
        initial("1")
        prompt("Link Selection")
    }
    field(SELL, DBF_INLINK) {
        interest(1)
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
    }
    field(OFFS, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        initial("0")
        prompt("Offset for Specified")
    }
    field(SHFT, DBF_SHORT) {
        promptgroup("30 - Action")
        prompt("Shift for Mask mode")
        interest(1)
        initial("-1")
    }
    field(LNK0, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 0")
    }
    field(LNK1, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 1")
    }
    field(LNK2, DBF_FWDLINK) {
        prompt("Forward Link 2")
        interest(1)
        promptgroup("51 - Output 0-7")
    }
    field(LNK3, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 3")
        promptgroup("51 - Output 0-7")
    }
    field(LNK4, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 4")
        promptgroup("51 - Output 0-7")
    }
    field(LNK5, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 5")
    }
    field(LNK6, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 6")
    }
    field(LNK7, DBF_FWDLINK) {
        promptgroup("51 - Output 0-7")
        interest(1)
        prompt("Forward Link 7")
    }
    field(LNK8, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 8")
        interest(1)
    }
    field(LNK9, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 9")
        promptgroup("52 - Output 8-F")
    }
    field(LNKA, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 10")
        interest(1)
    }
    field(LNKB, DBF_FWDLINK) {
        prompt("Forward Link 11")
        interest(1)
        promptgroup("52 - Output 8-F")
    }
    field(LNKC, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 12")
        promptgroup("52 - Output 8-F")
    }
    field(LNKD, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        interest(1)
        prompt("Forward Link 13")
    }
    field(LNKE, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Link 14")
        promptgroup("52 - Output 8-F")
    }
    field(LNKF, DBF_FWDLINK) {
        promptgroup("52 - Output 8-F")
        prompt("Forward Link 15")
        interest(1)
    }
}
recordtype(lso) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "devSup.h"
    %
    %/* Declare Device Support Entry Table */
    %typedef struct lsodset {
    %    long number;
    %    DEVSUPFUN report;
    %    DEVSUPFUN init;
    %    DEVSUPFUN init_record;
    %    DEVSUPFUN get_ioint_info;
    %    DEVSUPFUN write_string;
    %} lsodset;
    %
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        prompt("Current Value")
        asl(ASL0)
        extra("char *val")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(OVAL, DBF_NOACCESS) {
        extra("char *oval")
        special(SPC_DBADDR)
        interest(3)
        prompt("Previous Value")
    }
    field(SIZV, DBF_USHORT) {
        promptgroup("50 - Output")
        special(SPC_NOMOD)
        prompt("Size of buffers")
        interest(1)
        initial("41")
    }
    field(LEN, DBF_ULONG) {
        prompt("Length of VAL")
        special(SPC_NOMOD)
    }
    field(OLEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of OVAL")
        interest(3)
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Link")
        interest(1)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID Output Action")
    }
    field(IVOV, DBF_STRING) {
        prompt("INVALID Output Value")
        interest(2)
        promptgroup("50 - Output")
        size(40)
    }
    field(OMSL, DBF_MENU) {
        interest(1)
        prompt("Output Mode Select")
        menu(menuOmsl)
        promptgroup("50 - Output")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(MPST, DBF_MENU) {
        interest(1)
        prompt("Post Value Monitors")
        menu(menuPost)
        promptgroup("80 - Display")
    }
    field(APST, DBF_MENU) {
        menu(menuPost)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode link")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
        interest(2)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
        interest(1)
    }
}
device(lso, CONSTANT, devLsoSoft, "Soft Channel")
device(lso, CONSTANT, devLsoSoftCallback, "Async Soft Channel")
device(lso, INST_IO, devLsoStdio, "stdio")
recordtype(mca) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VERS, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Code Version")
        initial("1")
    }
    field(VAL, DBF_NOACCESS) {
        prompt("Value")
        pp(TRUE)
        size(4)
        extra("void *val")
        special(SPC_DBADDR)
    }
    field(BPTR, DBF_NOACCESS) {
        size(4)
        extra("void *bptr")
        special(SPC_NOMOD)
        interest(4)
        prompt("Buffer Pointer")
    }
    field(BG, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *bg")
        size(4)
        pp(TRUE)
        prompt("Background")
    }
    field(PBG, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *pbg")
        size(4)
        prompt("Background buffer")
        interest(4)
    }
    field(PSTATUS, DBF_NOACCESS) {
        prompt("Status buffer")
        interest(4)
        special(SPC_NOMOD)
        extra("void *pstatus")
        size(4)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Low Operating Range")
    }
    field(NMAX, DBF_LONG) {
        promptgroup("10 - Common")
        special(SPC_NOMOD)
        prompt("Max number of channels")
        interest(1)
        initial("1")
    }
    field(NORD, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Number of channels read")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        initial("5")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        menu(menuFtype)
    }
    field(STRT, DBF_MENU) {
        prompt("Start Acquire")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
        menu(mcaSTRT)
    }
    field(ERST, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        menu(mcaSTRT)
        prompt("Erase & Start Acquire")
        interest(1)
    }
    field(STOP, DBF_MENU) {
        pp(TRUE)
        menu(mcaSTRT)
        promptgroup("10 - Common")
        interest(1)
        prompt("Stop Acquire")
    }
    field(ACQG, DBF_MENU) {
        interest(1)
        prompt("Acquiring")
        menu(mcaSTRT)
        special(SPC_NOMOD)
    }
    field(READ, DBF_MENU) {
        interest(1)
        prompt("Read array")
        menu(mcaREAD)
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(RDNG, DBF_MENU) {
        special(SPC_NOMOD)
        menu(mcaREAD)
        prompt("Reading array")
        interest(1)
    }
    field(RDNS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(mcaREAD)
        prompt("Reading status")
        interest(1)
    }
    field(ERAS, DBF_MENU) {
        prompt("Erase array")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaERAS)
        pp(TRUE)
    }
    field(CHAS, DBF_MENU) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        menu(mcaCHAS)
        pp(TRUE)
        prompt("Channel-advance source")
        interest(1)
    }
    field(NUSE, DBF_LONG) {
        interest(1)
        prompt(" # of channels to use")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(SEQ, DBF_LONG) {
        interest(1)
        prompt("Time sequence #")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(DWEL, DBF_DOUBLE) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Dwell time per channel")
        interest(1)
        initial("1.0")
    }
    field(PSCL, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Channel advance prescale")
    }
    field(PRTM, DBF_DOUBLE) {
        prompt("Preset real time")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(PLTM, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Preset live time")
    }
    field(PCT, DBF_DOUBLE) {
        prompt("Preset counts")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(PCTL, DBF_LONG) {
        prompt("Preset count low channe")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(PCTH, DBF_LONG) {
        interest(1)
        prompt("Preset count high chann")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(PSWP, DBF_LONG) {
        interest(1)
        initial("1")
        prompt("Preset number of sweeps")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(MODE, DBF_MENU) {
        prompt("Mode PHA/MCS/LIST")
        special(SPC_MOD)
        promptgroup("10 - Common")
        menu(mcaMODE)
        pp(TRUE)
    }
    field(CALO, DBF_DOUBLE) {
        promptgroup("10 - Common")
        prompt("Calibration offset")
        interest(1)
    }
    field(CALS, DBF_DOUBLE) {
        promptgroup("10 - Common")
        prompt("Calibration slope")
        interest(1)
        initial("1")
    }
    field(CALQ, DBF_DOUBLE) {
        interest(1)
        prompt("Calibration quadratic")
        promptgroup("10 - Common")
    }
    field(EGU, DBF_STRING) {
        interest(1)
        prompt("Calibration Units Name")
        size(16)
        promptgroup("80 - Display")
    }
    field(TTH, DBF_DOUBLE) {
        promptgroup("10 - Common")
        initial("10")
        interest(1)
        prompt("Two-theta")
    }
    field(ERTM, DBF_DOUBLE) {
        interest(1)
        prompt("Elapsed real time")
    }
    field(ELTM, DBF_DOUBLE) {
        interest(1)
        prompt("Elapsed live time")
    }
    field(DTIM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Average % dead time")
    }
    field(IDTIM, DBF_DOUBLE) {
        interest(1)
        prompt("Instantaneous % dead time")
        special(SPC_NOMOD)
    }
    field(STIM, DBF_STRING) {
        size(40)
        promptgroup("80 - Display")
        special(SPC_NOMOD)
        interest(1)
        prompt("Acquisition stop time")
    }
    field(RTIM, DBF_DOUBLE) {
        prompt("Last read time")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ACT, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Actual counts in pregio")
    }
    field(NACK, DBF_SHORT) {
        pp(TRUE)
        special(SPC_NOMOD)
        interest(1)
        prompt("Message not acknowledge")
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        prompt("Input Specification")
        interest(1)
    }
    field(HIHI, DBF_DOUBLE) {
        interest(1)
        prompt("Hihi Deviation Limit")
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Deviation Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        prompt("High Deviation Limit")
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        prompt("Low Deviation Limit")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        prompt("Lolo Severity")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(HSV, DBF_MENU) {
        interest(1)
        prompt("High Severity")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Low Severity")
        interest(1)
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        interest(1)
        prompt("Sim Input Specifctn")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
        promptgroup("40 - Input")
    }
    field(MMAP, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor map")
    }
    field(RMAP, DBF_ULONG) {
        interest(4)
        prompt("ROI monitor map")
        special(SPC_NOMOD)
    }
    field(NEWV, DBF_ULONG) {
        prompt("New Value map")
        interest(4)
        special(SPC_NOMOD)
    }
    field(NEWR, DBF_ULONG) {
        prompt("New ROI Value map")
        interest(4)
        special(SPC_NOMOD)
    }
    field(R0LO, DBF_LONG) {
        prompt("Region 0 low channel")
        interest(1)
        initial("-1")
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(R0HI, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        initial("-1")
        prompt("Region 0 high channel")
    }
    field(R0BG, DBF_SHORT) {
        interest(1)
        prompt("Region 0 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R0IP, DBF_MENU) {
        prompt("Region 0 is preset")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        menu(mcaR0IP)
    }
    field(R1LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 1 low channel")
        initial("-1")
        interest(1)
    }
    field(R1HI, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 1 high channel")
    }
    field(R1BG, DBF_SHORT) {
        interest(1)
        prompt("Region 1 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R1IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        menu(mcaR0IP)
        prompt("Region 1 is preset")
    }
    field(R2LO, DBF_LONG) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        initial("-1")
        prompt("Region 2 low channel")
    }
    field(R2HI, DBF_LONG) {
        prompt("Region 2 high channel")
        initial("-1")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(R2BG, DBF_SHORT) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Region 2 bkgrnd chans")
    }
    field(R2IP, DBF_MENU) {
        prompt("Region 2 is preset")
        special(SPC_MOD)
        promptgroup("10 - Common")
        menu(mcaR0IP)
        pp(TRUE)
    }
    field(R3LO, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 3 low channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R3HI, DBF_LONG) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        initial("-1")
        prompt("Region 3 high channel")
    }
    field(R3BG, DBF_SHORT) {
        interest(1)
        prompt("Region 3 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R3IP, DBF_MENU) {
        menu(mcaR0IP)
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 3 is preset")
    }
    field(R4LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 4 low channel")
        interest(1)
        initial("-1")
    }
    field(R4HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 4 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R4BG, DBF_SHORT) {
        prompt("Region 4 bkgrnd chans")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(R4IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 4 is preset")
    }
    field(R5LO, DBF_LONG) {
        prompt("Region 5 low channel")
        initial("-1")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R5HI, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 5 high channel")
    }
    field(R5BG, DBF_SHORT) {
        interest(1)
        prompt("Region 5 bkgrnd chans")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R5IP, DBF_MENU) {
        prompt("Region 5 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R6LO, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 6 low channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R6HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 6 high channel")
        interest(1)
        initial("-1")
    }
    field(R6BG, DBF_SHORT) {
        interest(1)
        prompt("Region 6 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R6IP, DBF_MENU) {
        prompt("Region 6 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R7LO, DBF_LONG) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 7 low channel")
        interest(1)
        initial("-1")
    }
    field(R7HI, DBF_LONG) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 7 high channel")
        initial("-1")
        interest(1)
    }
    field(R7BG, DBF_SHORT) {
        interest(1)
        prompt("Region 7 bkgrnd chans")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R7IP, DBF_MENU) {
        prompt("Region 7 is preset")
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
    }
    field(R8LO, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 8 low channel")
    }
    field(R8HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 8 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R8BG, DBF_SHORT) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 8 bkgrnd chans")
    }
    field(R8IP, DBF_MENU) {
        prompt("Region 8 is preset")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        menu(mcaR0IP)
    }
    field(R9LO, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 9 low channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R9HI, DBF_LONG) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        initial("-1")
        interest(1)
        prompt("Region 9 high channel")
    }
    field(R9BG, DBF_SHORT) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 9 bkgrnd chans")
        interest(1)
    }
    field(R9IP, DBF_MENU) {
        prompt("Region 9 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R10LO, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        initial("-1")
        prompt("Region 10 low channel")
    }
    field(R10HI, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 10 high channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R10BG, DBF_SHORT) {
        interest(1)
        prompt("Region 10 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R10IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 10 is preset")
    }
    field(R11LO, DBF_LONG) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 11 low channel")
        interest(1)
        initial("-1")
    }
    field(R11HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 11 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R11BG, DBF_SHORT) {
        interest(1)
        prompt("Region 11 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R11IP, DBF_MENU) {
        menu(mcaR0IP)
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 11 is preset")
    }
    field(R12LO, DBF_LONG) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        initial("-1")
        prompt("Region 12 low channel")
    }
    field(R12HI, DBF_LONG) {
        prompt("Region 12 high channel")
        initial("-1")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R12BG, DBF_SHORT) {
        prompt("Region 12 bkgrnd chans")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R12IP, DBF_MENU) {
        pp(TRUE)
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Region 12 is preset")
    }
    field(R13LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 13 low channel")
        interest(1)
        initial("-1")
    }
    field(R13HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 13 high channel")
        initial("-1")
        interest(1)
    }
    field(R13BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 13 bkgrnd chans")
        interest(1)
    }
    field(R13IP, DBF_MENU) {
        prompt("Region 13 is preset")
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        menu(mcaR0IP)
    }
    field(R14LO, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 14 low channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R14HI, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        initial("-1")
        prompt("Region 14 high channel")
    }
    field(R14BG, DBF_SHORT) {
        interest(1)
        prompt("Region 14 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R14IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 14 is preset")
    }
    field(R15LO, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 15 low channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R15HI, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        initial("-1")
        prompt("Region 15 high channel")
    }
    field(R15BG, DBF_SHORT) {
        interest(1)
        prompt("Region 15 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R15IP, DBF_MENU) {
        menu(mcaR0IP)
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Region 15 is preset")
    }
    field(R16LO, DBF_LONG) {
        prompt("Region 16 low channel")
        interest(1)
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R16HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 16 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R16BG, DBF_SHORT) {
        interest(1)
        prompt("Region 16 bkgrnd chans")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R16IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 16 is preset")
    }
    field(R17LO, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 17 low channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R17HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 17 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R17BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 17 bkgrnd chans")
        interest(1)
    }
    field(R17IP, DBF_MENU) {
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 17 is preset")
    }
    field(R18LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 18 low channel")
        interest(1)
        initial("-1")
    }
    field(R18HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 18 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R18BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 18 bkgrnd chans")
        interest(1)
    }
    field(R18IP, DBF_MENU) {
        prompt("Region 18 is preset")
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        menu(mcaR0IP)
    }
    field(R19LO, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 19 low channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R19HI, DBF_LONG) {
        prompt("Region 19 high channel")
        initial("-1")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R19BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 19 bkgrnd chans")
        interest(1)
    }
    field(R19IP, DBF_MENU) {
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Region 19 is preset")
    }
    field(R20LO, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 20 low channel")
    }
    field(R20HI, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 20 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R20BG, DBF_SHORT) {
        interest(1)
        prompt("Region 20 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R20IP, DBF_MENU) {
        prompt("Region 20 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R21LO, DBF_LONG) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        initial("-1")
        prompt("Region 21 low channel")
    }
    field(R21HI, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 21 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R21BG, DBF_SHORT) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 21 bkgrnd chans")
        interest(1)
    }
    field(R21IP, DBF_MENU) {
        prompt("Region 21 is preset")
        special(SPC_MOD)
        promptgroup("10 - Common")
        menu(mcaR0IP)
        pp(TRUE)
    }
    field(R22LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 22 low channel")
        initial("-1")
        interest(1)
    }
    field(R22HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 22 high channel")
        interest(1)
        initial("-1")
    }
    field(R22BG, DBF_SHORT) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Region 22 bkgrnd chans")
    }
    field(R22IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        menu(mcaR0IP)
        prompt("Region 22 is preset")
    }
    field(R23LO, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 23 low channel")
    }
    field(R23HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 23 high channel")
        initial("-1")
        interest(1)
    }
    field(R23BG, DBF_SHORT) {
        interest(1)
        prompt("Region 23 bkgrnd chans")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R23IP, DBF_MENU) {
        prompt("Region 23 is preset")
        promptgroup("10 - Common")
        special(SPC_MOD)
        menu(mcaR0IP)
        pp(TRUE)
    }
    field(R24LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 24 low channel")
        interest(1)
        initial("-1")
    }
    field(R24HI, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 24 high channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R24BG, DBF_SHORT) {
        prompt("Region 24 bkgrnd chans")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(R24IP, DBF_MENU) {
        prompt("Region 24 is preset")
        menu(mcaR0IP)
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R25LO, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 25 low channel")
        initial("-1")
        interest(1)
    }
    field(R25HI, DBF_LONG) {
        prompt("Region 25 high channel")
        interest(1)
        initial("-1")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R25BG, DBF_SHORT) {
        interest(1)
        prompt("Region 25 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R25IP, DBF_MENU) {
        prompt("Region 25 is preset")
        pp(TRUE)
        menu(mcaR0IP)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R26LO, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        initial("-1")
        prompt("Region 26 low channel")
    }
    field(R26HI, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 26 high channel")
    }
    field(R26BG, DBF_SHORT) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 26 bkgrnd chans")
        interest(1)
    }
    field(R26IP, DBF_MENU) {
        prompt("Region 26 is preset")
        menu(mcaR0IP)
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R27LO, DBF_LONG) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 27 low channel")
        initial("-1")
        interest(1)
    }
    field(R27HI, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 27 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R27BG, DBF_SHORT) {
        interest(1)
        prompt("Region 27 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R27IP, DBF_MENU) {
        prompt("Region 27 is preset")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        menu(mcaR0IP)
    }
    field(R28LO, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 28 low channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R28HI, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 28 high channel")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R28BG, DBF_SHORT) {
        prompt("Region 28 bkgrnd chans")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(R28IP, DBF_MENU) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        menu(mcaR0IP)
        prompt("Region 28 is preset")
    }
    field(R29LO, DBF_LONG) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Region 29 low channel")
        interest(1)
        initial("-1")
    }
    field(R29HI, DBF_LONG) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        initial("-1")
        prompt("Region 29 high channel")
    }
    field(R29BG, DBF_SHORT) {
        interest(1)
        prompt("Region 29 bkgrnd chans")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(R29IP, DBF_MENU) {
        pp(TRUE)
        menu(mcaR0IP)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Region 29 is preset")
    }
    field(R30LO, DBF_LONG) {
        initial("-1")
        interest(1)
        prompt("Region 30 low channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R30HI, DBF_LONG) {
        interest(1)
        initial("-1")
        prompt("Region 30 high channel")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R30BG, DBF_SHORT) {
        prompt("Region 30 bkgrnd chans")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(R30IP, DBF_MENU) {
        prompt("Region 30 is preset")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        menu(mcaR0IP)
    }
    field(R31LO, DBF_LONG) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        initial("-1")
        interest(1)
        prompt("Region 31 low channel")
    }
    field(R31HI, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Region 31 high channel")
        initial("-1")
        interest(1)
    }
    field(R31BG, DBF_SHORT) {
        interest(1)
        prompt("Region 31 bkgrnd chans")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(R31IP, DBF_MENU) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        menu(mcaR0IP)
        pp(TRUE)
        prompt("Region 31 is preset")
    }
    field(R0, DBF_DOUBLE) {
        interest(1)
        prompt("Region 0 counts")
        special(SPC_NOMOD)
    }
    field(R0N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 0 net counts")
        interest(1)
    }
    field(R0P, DBF_DOUBLE) {
        prompt("Region 0 preset count")
        interest(1)
        special(SPC_MOD)
    }
    field(R1, DBF_DOUBLE) {
        prompt("Region 1 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R1N, DBF_DOUBLE) {
        prompt("Region 1 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R1P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 1 preset count")
        special(SPC_MOD)
    }
    field(R2, DBF_DOUBLE) {
        interest(1)
        prompt("Region 2 counts")
        special(SPC_NOMOD)
    }
    field(R2N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 2 net counts")
        interest(1)
    }
    field(R2P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 2 preset count")
        interest(1)
    }
    field(R3, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 3 counts")
        interest(1)
    }
    field(R3N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 3 net counts")
        special(SPC_NOMOD)
    }
    field(R3P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 3 preset count")
    }
    field(R4, DBF_DOUBLE) {
        interest(1)
        prompt("Region 4 counts")
        special(SPC_NOMOD)
    }
    field(R4N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 4 net counts")
        interest(1)
    }
    field(R4P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 4 preset count")
        interest(1)
    }
    field(R5, DBF_DOUBLE) {
        interest(1)
        prompt("Region 5 counts")
        special(SPC_NOMOD)
    }
    field(R5N, DBF_DOUBLE) {
        prompt("Region 5 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R5P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 5 preset count")
    }
    field(R6, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 6 counts")
    }
    field(R6N, DBF_DOUBLE) {
        prompt("Region 6 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R6P, DBF_DOUBLE) {
        prompt("Region 6 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R7, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 7 counts")
    }
    field(R7N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 7 net counts")
    }
    field(R7P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 7 preset")
    }
    field(R8, DBF_DOUBLE) {
        interest(1)
        prompt("Region 8 counts")
        special(SPC_NOMOD)
    }
    field(R8N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 8 net counts")
        special(SPC_NOMOD)
    }
    field(R8P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 8 preset")
        interest(1)
    }
    field(R9, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 9 counts")
        interest(1)
    }
    field(R9N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 9 net counts")
        interest(1)
    }
    field(R9P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 9 preset")
        special(SPC_MOD)
    }
    field(R10, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 10 counts")
        interest(1)
    }
    field(R10N, DBF_DOUBLE) {
        prompt("Region 10 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R10P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 10 preset")
    }
    field(R11, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 11 counts")
    }
    field(R11N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 11 net counts")
        interest(1)
    }
    field(R11P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 11 preset")
    }
    field(R12, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 12 counts")
        interest(1)
    }
    field(R12N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 12 net counts")
        special(SPC_NOMOD)
    }
    field(R12P, DBF_DOUBLE) {
        prompt("Region 12 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R13, DBF_DOUBLE) {
        interest(1)
        prompt("Region 13 counts")
        special(SPC_NOMOD)
    }
    field(R13N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 13 net counts")
    }
    field(R13P, DBF_DOUBLE) {
        prompt("Region 13 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R14, DBF_DOUBLE) {
        interest(1)
        prompt("Region 14 counts")
        special(SPC_NOMOD)
    }
    field(R14N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 14 net counts")
        interest(1)
    }
    field(R14P, DBF_DOUBLE) {
        prompt("Region 14 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R15, DBF_DOUBLE) {
        prompt("Region 15 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R15N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 15 net counts")
        special(SPC_NOMOD)
    }
    field(R15P, DBF_DOUBLE) {
        prompt("Region 15 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R16, DBF_DOUBLE) {
        interest(1)
        prompt("Region 16 counts")
        special(SPC_NOMOD)
    }
    field(R16N, DBF_DOUBLE) {
        prompt("Region 16 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R16P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 16 preset")
        interest(1)
    }
    field(R17, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 17 counts")
    }
    field(R17N, DBF_DOUBLE) {
        prompt("Region 17 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R17P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 17 preset")
        special(SPC_MOD)
    }
    field(R18, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 18 counts")
    }
    field(R18N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 18 net counts")
        special(SPC_NOMOD)
    }
    field(R18P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 18 preset")
        interest(1)
    }
    field(R19, DBF_DOUBLE) {
        prompt("Region 19 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R19N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 19 net counts")
        special(SPC_NOMOD)
    }
    field(R19P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 19 preset")
    }
    field(R20, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 20 counts")
    }
    field(R20N, DBF_DOUBLE) {
        prompt("Region 20 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R20P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 20 preset")
        special(SPC_MOD)
    }
    field(R21, DBF_DOUBLE) {
        prompt("Region 21 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R21N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 21 net counts")
        interest(1)
    }
    field(R21P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 21 preset")
        special(SPC_MOD)
    }
    field(R22, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 22 counts")
    }
    field(R22N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 22 net counts")
    }
    field(R22P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 22 preset")
    }
    field(R23, DBF_DOUBLE) {
        prompt("Region 23 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R23N, DBF_DOUBLE) {
        prompt("Region 23 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R23P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 23 preset")
    }
    field(R24, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 24 counts")
    }
    field(R24N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 24 net counts")
    }
    field(R24P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 24 preset")
        special(SPC_MOD)
    }
    field(R25, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 25 counts")
        interest(1)
    }
    field(R25N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 25 net counts")
        special(SPC_NOMOD)
    }
    field(R25P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 25 preset")
        interest(1)
    }
    field(R26, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 26 counts")
    }
    field(R26N, DBF_DOUBLE) {
        prompt("Region 26 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R26P, DBF_DOUBLE) {
        prompt("Region 26 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R27, DBF_DOUBLE) {
        prompt("Region 27 counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R27N, DBF_DOUBLE) {
        prompt("Region 27 net counts")
        interest(1)
        special(SPC_NOMOD)
    }
    field(R27P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 27 preset")
        interest(1)
    }
    field(R28, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 28 counts")
        interest(1)
    }
    field(R28N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 28 net counts")
        special(SPC_NOMOD)
    }
    field(R28P, DBF_DOUBLE) {
        special(SPC_MOD)
        interest(1)
        prompt("Region 28 preset")
    }
    field(R29, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 29 counts")
        interest(1)
    }
    field(R29N, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 29 net counts")
    }
    field(R29P, DBF_DOUBLE) {
        prompt("Region 29 preset")
        interest(1)
        special(SPC_MOD)
    }
    field(R30, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Region 30 counts")
    }
    field(R30N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 30 net counts")
        special(SPC_NOMOD)
    }
    field(R30P, DBF_DOUBLE) {
        interest(1)
        prompt("Region 30 preset")
        special(SPC_MOD)
    }
    field(R31, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Region 31 counts")
        interest(1)
    }
    field(R31N, DBF_DOUBLE) {
        interest(1)
        prompt("Region 31 net counts")
        special(SPC_NOMOD)
    }
    field(R31P, DBF_DOUBLE) {
        special(SPC_MOD)
        prompt("Region 31 preset")
        interest(1)
    }
    field(R0NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 0 name")
    }
    field(R1NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 1 name")
    }
    field(R2NM, DBF_STRING) {
        prompt("Region 2 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R3NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 3 name")
    }
    field(R4NM, DBF_STRING) {
        prompt("Region 4 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R5NM, DBF_STRING) {
        interest(1)
        prompt("Region 5 name")
        size(16)
        promptgroup("10 - Common")
    }
    field(R6NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 6 name")
    }
    field(R7NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 7 name")
    }
    field(R8NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 8 name")
    }
    field(R9NM, DBF_STRING) {
        interest(1)
        prompt("Region 9 name")
        size(16)
        promptgroup("10 - Common")
    }
    field(R10NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        prompt("Region 10 name")
        interest(1)
    }
    field(R11NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        prompt("Region 11 name")
        interest(1)
    }
    field(R12NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 12 name")
    }
    field(R13NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 13 name")
    }
    field(R14NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        prompt("Region 14 name")
        interest(1)
    }
    field(R15NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        prompt("Region 15 name")
        interest(1)
    }
    field(R16NM, DBF_STRING) {
        prompt("Region 16 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R17NM, DBF_STRING) {
        prompt("Region 17 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R18NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        prompt("Region 18 name")
        interest(1)
    }
    field(R19NM, DBF_STRING) {
        interest(1)
        prompt("Region 19 name")
        size(16)
        promptgroup("10 - Common")
    }
    field(R20NM, DBF_STRING) {
        prompt("Region 20 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R21NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 21 name")
    }
    field(R22NM, DBF_STRING) {
        prompt("Region 22 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R23NM, DBF_STRING) {
        interest(1)
        prompt("Region 23 name")
        size(16)
        promptgroup("10 - Common")
    }
    field(R24NM, DBF_STRING) {
        interest(1)
        prompt("Region 24 name")
        size(16)
        promptgroup("10 - Common")
    }
    field(R25NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 25 name")
    }
    field(R26NM, DBF_STRING) {
        prompt("Region 26 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R27NM, DBF_STRING) {
        prompt("Region 27 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R28NM, DBF_STRING) {
        promptgroup("10 - Common")
        size(16)
        prompt("Region 28 name")
        interest(1)
    }
    field(R29NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 29 name")
    }
    field(R30NM, DBF_STRING) {
        prompt("Region 30 name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(R31NM, DBF_STRING) {
        size(16)
        promptgroup("10 - Common")
        interest(1)
        prompt("Region 31 name")
    }
}
device(mca, CONSTANT, devMCA_soft, "Soft Channel")
device(mca, INST_IO, devMcaAsyn, "asynMCA")
recordtype(longout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        promptgroup("50 - Output")
        pp(TRUE)
        prompt("Desired Output")
        asl(ASL0)
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Mode Select")
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        prop(YES)
        interest(1)
        prompt("Engineering Units")
    }
    field(DRVH, DBF_LONG) {
        prompt("Drive High Limit")
        prop(YES)
        interest(1)
        promptgroup("30 - Action")
        pp(TRUE)
    }
    field(DRVL, DBF_LONG) {
        pp(TRUE)
        promptgroup("30 - Action")
        interest(1)
        prop(YES)
        prompt("Drive Low Limit")
    }
    field(HOPR, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(HIHI, DBF_LONG) {
        interest(1)
        prop(YES)
        prompt("Hihi Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LOLO, DBF_LONG) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_LONG) {
        interest(1)
        prop(YES)
        prompt("High Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_LONG) {
        prompt("Low Alarm Limit")
        interest(1)
        prop(YES)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        interest(1)
        prompt("Lolo Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("High Severity")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Low Severity")
        interest(1)
    }
    field(HYST, DBF_LONG) {
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
        interest(1)
    }
    field(ADEL, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("Archive Deadband")
        interest(1)
    }
    field(MDEL, DBF_LONG) {
        interest(1)
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
    }
    field(LALM, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        prompt("Last Val Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        prompt("Sim Output Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Sim mode Alarm Svrty")
    }
    field(IVOA, DBF_MENU) {
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID output action")
        interest(2)
    }
    field(IVOV, DBF_LONG) {
        interest(2)
        prompt("INVALID output value")
        promptgroup("50 - Output")
    }
}
device(longout, CONSTANT, devLoSoft, "Soft Channel")
device(longout, CONSTANT, devLoSoftCallback, "Async Soft Channel")
device(longout, INST_IO, asynLoInt32, "asynInt32")
device(longout, INST_IO, asynLoUInt32Digital, "asynUInt32Digital")
recordtype(aai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *		val")
        pp(TRUE)
        prompt("Value")
        asl(ASL0)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(NELM, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(1)
        initial("1")
        prompt("Number of Elements")
    }
    field(FTVL, DBF_MENU) {
        interest(1)
        prompt("Field Type of Value")
        menu(menuFtype)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(NORD, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number elements read")
    }
    field(BPTR, DBF_NOACCESS) {
        extra("void *		bptr")
        special(SPC_NOMOD)
        prompt("Buffer Pointer")
        interest(4)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(MPST, DBF_MENU) {
        menu(aaiPOST)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        interest(1)
        prompt("Post Archive Monitors")
        menu(aaiPOST)
        promptgroup("80 - Display")
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(aai, CONSTANT, devAaiSoft, "Soft Channel")
recordtype(lsi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "devSup.h"
    %
    %/* Declare Device Support Entry Table */
    %typedef struct lsidset {
    %    long number;
    %    DEVSUPFUN report;
    %    DEVSUPFUN init;
    %    DEVSUPFUN init_record;
    %    DEVSUPFUN get_ioint_info;
    %    DEVSUPFUN read_string;
    %} lsidset;
    %
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Current Value")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("char *val")
    }
    field(OVAL, DBF_NOACCESS) {
        interest(3)
        prompt("Old Value")
        extra("char *oval")
        special(SPC_DBADDR)
    }
    field(SIZV, DBF_USHORT) {
        prompt("Size of buffers")
        initial("41")
        interest(1)
        promptgroup("40 - Input")
        special(SPC_NOMOD)
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OLEN, DBF_ULONG) {
        prompt("Length of OVAL")
        special(SPC_NOMOD)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Specification")
    }
    field(MPST, DBF_MENU) {
        menu(menuPost)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        menu(menuPost)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
    }
    field(SIML, DBF_INLINK) {
        interest(2)
        prompt("Simulation Mode Link")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(2)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Simulation Mode Severity")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(2)
    }
}
device(lsi, CONSTANT, devLsiSoft, "Soft Channel")
device(lsi, INST_IO, devLsiEnviron, "getenv")
recordtype(subArray) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        extra("void *		val")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        size(16)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Engineering Units")
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
    }
    field(MALM, DBF_ULONG) {
        prompt("Maximum Elements")
        initial("1")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(NELM, DBF_ULONG) {
        initial("1")
        prompt("Number of Elements")
        pp(TRUE)
        promptgroup("30 - Action")
    }
    field(INDX, DBF_ULONG) {
        promptgroup("30 - Action")
        pp(TRUE)
        prompt("Substring Index")
    }
    field(BUSY, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Busy Indicator")
    }
    field(NORD, DBF_LONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *		bptr")
        prompt("Buffer Pointer")
        interest(4)
    }
}
device(subArray, CONSTANT, devSASoft, "Soft Channel")
recordtype(mbbi) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        prompt("Current Value")
        asl(ASL0)
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(NOBT, DBF_USHORT) {
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        interest(1)
        prompt("Number of Bits")
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(ZRVL, DBF_ULONG) {
        promptgroup("41 - Input 0-7")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        prompt("Zero Value")
        interest(1)
    }
    field(ONVL, DBF_ULONG) {
        interest(1)
        prompt("One Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
    }
    field(TWVL, DBF_ULONG) {
        prompt("Two Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
        pp(TRUE)
        base(HEX)
    }
    field(THVL, DBF_ULONG) {
        interest(1)
        prompt("Three Value")
        base(HEX)
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
    }
    field(FRVL, DBF_ULONG) {
        promptgroup("41 - Input 0-7")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        prompt("Four Value")
        interest(1)
    }
    field(FVVL, DBF_ULONG) {
        interest(1)
        prompt("Five Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
    }
    field(SXVL, DBF_ULONG) {
        interest(1)
        prompt("Six Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
    }
    field(SVVL, DBF_ULONG) {
        prompt("Seven Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("41 - Input 0-7")
        base(HEX)
        pp(TRUE)
    }
    field(EIVL, DBF_ULONG) {
        interest(1)
        prompt("Eight Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("42 - Input 8-15")
    }
    field(NIVL, DBF_ULONG) {
        interest(1)
        prompt("Nine Value")
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("42 - Input 8-15")
    }
    field(TEVL, DBF_ULONG) {
        prompt("Ten Value")
        interest(1)
        promptgroup("42 - Input 8-15")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
    }
    field(ELVL, DBF_ULONG) {
        prompt("Eleven Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("42 - Input 8-15")
        pp(TRUE)
        base(HEX)
    }
    field(TVVL, DBF_ULONG) {
        promptgroup("42 - Input 8-15")
        special(SPC_MOD)
        base(HEX)
        pp(TRUE)
        prompt("Twelve Value")
        interest(1)
    }
    field(TTVL, DBF_ULONG) {
        special(SPC_MOD)
        promptgroup("42 - Input 8-15")
        base(HEX)
        pp(TRUE)
        prompt("Thirteen Value")
        interest(1)
    }
    field(FTVL, DBF_ULONG) {
        interest(1)
        prompt("Fourteen Value")
        pp(TRUE)
        base(HEX)
        promptgroup("42 - Input 8-15")
        special(SPC_MOD)
    }
    field(FFVL, DBF_ULONG) {
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("42 - Input 8-15")
        interest(1)
        prompt("Fifteen Value")
    }
    field(ZRST, DBF_STRING) {
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        interest(1)
        prompt("Zero String")
    }
    field(ONST, DBF_STRING) {
        interest(1)
        prompt("One String")
        pp(TRUE)
        size(26)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(TWST, DBF_STRING) {
        interest(1)
        prompt("Two String")
        size(26)
        pp(TRUE)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(THST, DBF_STRING) {
        pp(TRUE)
        size(26)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        interest(1)
        prompt("Three String")
    }
    field(FRST, DBF_STRING) {
        interest(1)
        prompt("Four String")
        size(26)
        pp(TRUE)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(FVST, DBF_STRING) {
        pp(TRUE)
        size(26)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        interest(1)
        prompt("Five String")
    }
    field(SXST, DBF_STRING) {
        prompt("Six String")
        interest(1)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        size(26)
    }
    field(SVST, DBF_STRING) {
        prompt("Seven String")
        interest(1)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        size(26)
        pp(TRUE)
    }
    field(EIST, DBF_STRING) {
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        interest(1)
        prompt("Eight String")
    }
    field(NIST, DBF_STRING) {
        size(26)
        pp(TRUE)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        interest(1)
        prompt("Nine String")
    }
    field(TEST, DBF_STRING) {
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        interest(1)
        prompt("Ten String")
    }
    field(ELST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        size(26)
        pp(TRUE)
        prompt("Eleven String")
        interest(1)
    }
    field(TVST, DBF_STRING) {
        interest(1)
        prompt("Twelve String")
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
    }
    field(TTST, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        size(26)
        pp(TRUE)
        prompt("Thirteen String")
        interest(1)
    }
    field(FTST, DBF_STRING) {
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        pp(TRUE)
        size(26)
        prompt("Fourteen String")
        interest(1)
    }
    field(FFST, DBF_STRING) {
        size(26)
        pp(TRUE)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        interest(1)
        prompt("Fifteen String")
    }
    field(ZRSV, DBF_MENU) {
        prompt("State Zero Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(ONSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State One Severity")
        interest(1)
    }
    field(TWSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State Two Severity")
    }
    field(THSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Three Severity")
        interest(1)
    }
    field(FRSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State Four Severity")
    }
    field(FVSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Five Severity")
        interest(1)
    }
    field(SXSV, DBF_MENU) {
        prompt("State Six Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(SVSV, DBF_MENU) {
        prompt("State Seven Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(EISV, DBF_MENU) {
        prompt("State Eight Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(NISV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Nine Severity")
    }
    field(TESV, DBF_MENU) {
        prompt("State Ten Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(ELSV, DBF_MENU) {
        promptgroup("72 - Alarm 8-15")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Eleven Severity")
        interest(1)
    }
    field(TVSV, DBF_MENU) {
        interest(1)
        prompt("State Twelve Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
    }
    field(TTSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Thirteen Sevr")
    }
    field(FTSV, DBF_MENU) {
        interest(1)
        prompt("State Fourteen Sevr")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
    }
    field(FFSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Fifteen Severity")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFVL, DBF_DOUBLE) {
        interest(3)
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
    }
    field(UNSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Unknown State Severity")
        interest(1)
    }
    field(COSV, DBF_MENU) {
        prompt("Change of State Svr")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Hardware Mask")
    }
    field(MLST, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
        interest(3)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SDEF, DBF_SHORT) {
        interest(3)
        prompt("States Defined")
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        promptgroup("40 - Input")
        prompt("Shift")
        interest(1)
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
}
device(mbbi, CONSTANT, devMbbiSoft, "Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftRaw, "Raw Soft Channel")
device(mbbi, CONSTANT, devMbbiSoftCallback, "Async Soft Channel")
device(mbbi, INST_IO, asynMbbiInt32, "asynInt32")
device(mbbi, INST_IO, asynMbbiUInt32Digital, "asynUInt32Digital")
recordtype(bo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_ENUM) {
        prompt("Current Value")
        asl(ASL0)
        promptgroup("50 - Output")
        pp(TRUE)
    }
    field(OMSL, DBF_MENU) {
        interest(1)
        prompt("Output Mode Select")
        menu(menuOmsl)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        prompt("Desired Output Loc")
        interest(1)
        promptgroup("40 - Input")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("30 - Action")
        prompt("Seconds to Hold High")
        interest(1)
    }
    field(ZNAM, DBF_STRING) {
        size(26)
        pp(TRUE)
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Zero Name")
    }
    field(ONAM, DBF_STRING) {
        prompt("One Name")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
        pp(TRUE)
        size(26)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("prev Raw Value")
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        prompt("Hardware Mask")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *  rpvt")
        interest(4)
        prompt("Record Private")
    }
    field(WDPT, DBF_NOACCESS) {
        interest(4)
        prompt("Watch Dog Timer ID")
        special(SPC_NOMOD)
        extra("void *	wdpt")
    }
    field(ZSV, DBF_MENU) {
        interest(1)
        prompt("Zero Error Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(OSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("One Error Severity")
    }
    field(COSV, DBF_MENU) {
        interest(1)
        prompt("Change of State Sevr")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Readback Value")
    }
    field(MLST, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
        interest(3)
    }
    field(LALM, DBF_USHORT) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID outpt action")
    }
    field(IVOV, DBF_USHORT) {
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output value")
    }
}
device(bo, CONSTANT, devBoSoft, "Soft Channel")
device(bo, CONSTANT, devBoSoftRaw, "Raw Soft Channel")
device(bo, CONSTANT, devBoSoftCallback, "Async Soft Channel")
device(bo, INST_IO, devBoGeneralTime, "General Time")
device(bo, INST_IO, devBoDbState, "Db State")
device(bo, INST_IO, asynBoInt32, "asynInt32")
device(bo, INST_IO, asynBoUInt32Digital, "asynUInt32Digital")
recordtype(mbbiDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_USHORT) {
        prompt("Current Value")
        asl(ASL0)
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(NOBT, DBF_SHORT) {
        prompt("Number of Bits")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("40 - Input")
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        prompt("Prev Raw Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        prompt("Hardware Mask")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        interest(3)
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        interest(1)
        prompt("Shift")
        promptgroup("40 - Input")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(1)
    }
    field(SVAL, DBF_ULONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuSimm)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(B0, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 0")
    }
    field(B1, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 1")
        interest(1)
    }
    field(B2, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 2")
        interest(1)
    }
    field(B3, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 3")
    }
    field(B4, DBF_UCHAR) {
        prompt("Bit 4")
        interest(1)
        pp(TRUE)
    }
    field(B5, DBF_UCHAR) {
        interest(1)
        prompt("Bit 5")
        pp(TRUE)
    }
    field(B6, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 6")
    }
    field(B7, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit 7")
        interest(1)
    }
    field(B8, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit 8")
    }
    field(B9, DBF_UCHAR) {
        prompt("Bit 9")
        interest(1)
        pp(TRUE)
    }
    field(BA, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit A")
        interest(1)
    }
    field(BB, DBF_UCHAR) {
        pp(TRUE)
        prompt("Bit B")
        interest(1)
    }
    field(BC, DBF_UCHAR) {
        interest(1)
        prompt("Bit C")
        pp(TRUE)
    }
    field(BD, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit D")
    }
    field(BE, DBF_UCHAR) {
        pp(TRUE)
        interest(1)
        prompt("Bit E")
    }
    field(BF, DBF_UCHAR) {
        prompt("Bit F")
        interest(1)
        pp(TRUE)
    }
}
device(mbbiDirect, CONSTANT, devMbbiDirectSoft, "Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftRaw, "Raw Soft Channel")
device(mbbiDirect, CONSTANT, devMbbiDirectSoftCallback, "Async Soft Channel")
device(mbbiDirect, INST_IO, asynMbbiDirectUInt32Digital, "asynUInt32Digital")
recordtype(event) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "dbScan.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        size(40)
        promptgroup("40 - Input")
        special(SPC_MOD)
        asl(ASL0)
        prompt("Event Name To Post")
    }
    field(EPVT, DBF_NOACCESS) {
        extra("EVENTPVT epvt")
        special(SPC_NOMOD)
        prompt("Event private")
        interest(4)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Input Specifctn")
        interest(1)
    }
    field(SVAL, DBF_STRING) {
        size(40)
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
}
device(event, CONSTANT, devEventSoft, "Soft Channel")
recordtype(aao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_NOACCESS) {
        pp(TRUE)
        special(SPC_DBADDR)
        extra("void *		val")
        asl(ASL0)
        prompt("Value")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Display Precision")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        interest(1)
        prop(YES)
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(NELM, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Number of Elements")
        promptgroup("30 - Action")
        special(SPC_NOMOD)
    }
    field(FTVL, DBF_MENU) {
        promptgroup("30 - Action")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Field Type of Value")
        interest(1)
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        interest(4)
        prompt("Buffer Pointer")
        special(SPC_NOMOD)
        extra("void *		bptr")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(SIOL, DBF_OUTLINK) {
        interest(1)
        prompt("Sim Output Specifctn")
        promptgroup("90 - Simulate")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(aaoPOST)
    }
    field(APST, DBF_MENU) {
        promptgroup("80 - Display")
        menu(aaoPOST)
        prompt("Post Archive Monitors")
        interest(1)
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(aao, CONSTANT, devAaoSoft, "Soft Channel")
recordtype(seq) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Used to trigger")
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        interest(1)
        prompt("Select Mechanism")
        menu(seqSELM)
        promptgroup("30 - Action")
    }
    field(SELN, DBF_USHORT) {
        prompt("Link Selection")
        interest(1)
        initial("1")
    }
    field(SELL, DBF_INLINK) {
        interest(1)
        prompt("Link Selection Loc")
        promptgroup("30 - Action")
    }
    field(OFFS, DBF_SHORT) {
        interest(1)
        initial("0")
        prompt("Offset for Specified")
        promptgroup("30 - Action")
    }
    field(SHFT, DBF_SHORT) {
        promptgroup("30 - Action")
        interest(1)
        initial("-1")
        prompt("Shift for Mask mode")
    }
    field(OLDN, DBF_USHORT) {
        interest(4)
        prompt("Old Selection")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(DLY0, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Delay 0")
    }
    field(DOL0, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Input link 0")
    }
    field(DO0, DBF_DOUBLE) {
        interest(1)
        prompt("Value 0")
    }
    field(LNK0, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 0")
        promptgroup("41 - Link 0-7")
    }
    field(DLY1, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        prompt("Delay 1")
        interest(1)
    }
    field(DOL1, DBF_INLINK) {
        interest(1)
        prompt("Input link1")
        promptgroup("41 - Link 0-7")
    }
    field(DO1, DBF_DOUBLE) {
        interest(1)
        prompt("Value 1")
    }
    field(LNK1, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Output Link 1")
        interest(1)
    }
    field(DLY2, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Delay 2")
    }
    field(DOL2, DBF_INLINK) {
        prompt("Input link 2")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DO2, DBF_DOUBLE) {
        interest(1)
        prompt("Value 2")
    }
    field(LNK2, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Output Link 2")
    }
    field(DLY3, DBF_DOUBLE) {
        prompt("Delay 3")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DOL3, DBF_INLINK) {
        prompt("Input link 3")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DO3, DBF_DOUBLE) {
        prompt("Value 3")
        interest(1)
    }
    field(LNK3, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Output Link 3")
        interest(1)
    }
    field(DLY4, DBF_DOUBLE) {
        interest(1)
        prompt("Delay 4")
        promptgroup("41 - Link 0-7")
    }
    field(DOL4, DBF_INLINK) {
        interest(1)
        prompt("Input link 4")
        promptgroup("41 - Link 0-7")
    }
    field(DO4, DBF_DOUBLE) {
        prompt("Value 4")
        interest(1)
    }
    field(LNK4, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 4")
        promptgroup("41 - Link 0-7")
    }
    field(DLY5, DBF_DOUBLE) {
        prompt("Delay 5")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DOL5, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Input link 5")
        interest(1)
    }
    field(DO5, DBF_DOUBLE) {
        interest(1)
        prompt("Value 5")
    }
    field(LNK5, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Output Link 5")
        interest(1)
    }
    field(DLY6, DBF_DOUBLE) {
        prompt("Delay 6")
        interest(1)
        promptgroup("41 - Link 0-7")
    }
    field(DOL6, DBF_INLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Input link 6")
    }
    field(DO6, DBF_DOUBLE) {
        interest(1)
        prompt("Value 6")
    }
    field(LNK6, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        interest(1)
        prompt("Output Link 6")
    }
    field(DLY7, DBF_DOUBLE) {
        promptgroup("41 - Link 0-7")
        prompt("Delay 7")
        interest(1)
    }
    field(DOL7, DBF_INLINK) {
        interest(1)
        prompt("Input link 7")
        promptgroup("41 - Link 0-7")
    }
    field(DO7, DBF_DOUBLE) {
        prompt("Value 7")
        interest(1)
    }
    field(LNK7, DBF_OUTLINK) {
        promptgroup("41 - Link 0-7")
        prompt("Output Link 7")
        interest(1)
    }
    field(DLY8, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        prompt("Delay 8")
        interest(1)
    }
    field(DOL8, DBF_INLINK) {
        interest(1)
        prompt("Input link 8")
        promptgroup("42 - Link 8-F")
    }
    field(DO8, DBF_DOUBLE) {
        interest(1)
        prompt("Value 8")
    }
    field(LNK8, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 8")
        promptgroup("42 - Link 8-F")
    }
    field(DLY9, DBF_DOUBLE) {
        prompt("Delay 9")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOL9, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        prompt("Input link 9")
        interest(1)
    }
    field(DO9, DBF_DOUBLE) {
        interest(1)
        prompt("Value 9")
    }
    field(LNK9, DBF_OUTLINK) {
        prompt("Output Link 9")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DLYA, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        prompt("Delay 10")
        interest(1)
    }
    field(DOLA, DBF_INLINK) {
        prompt("Input link 10")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOA, DBF_DOUBLE) {
        interest(1)
        prompt("Value 10")
    }
    field(LNKA, DBF_OUTLINK) {
        prompt("Output Link 10")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DLYB, DBF_DOUBLE) {
        interest(1)
        prompt("Delay 11")
        promptgroup("42 - Link 8-F")
    }
    field(DOLB, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        prompt("Input link 11")
        interest(1)
    }
    field(DOB, DBF_DOUBLE) {
        interest(1)
        prompt("Value 11")
    }
    field(LNKB, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 11")
        promptgroup("42 - Link 8-F")
    }
    field(DLYC, DBF_DOUBLE) {
        interest(1)
        prompt("Delay 12")
        promptgroup("42 - Link 8-F")
    }
    field(DOLC, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        prompt("Input link 12")
        interest(1)
    }
    field(DOC, DBF_DOUBLE) {
        prompt("Value 12")
        interest(1)
    }
    field(LNKC, DBF_OUTLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Output Link 12")
    }
    field(DLYD, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Delay 13")
    }
    field(DOLD, DBF_INLINK) {
        promptgroup("42 - Link 8-F")
        interest(1)
        prompt("Input link 13")
    }
    field(DOD, DBF_DOUBLE) {
        prompt("Value 13")
        interest(1)
    }
    field(LNKD, DBF_OUTLINK) {
        prompt("Output Link 13")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DLYE, DBF_DOUBLE) {
        prompt("Delay 14")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DOLE, DBF_INLINK) {
        interest(1)
        prompt("Input link 14")
        promptgroup("42 - Link 8-F")
    }
    field(DOE, DBF_DOUBLE) {
        interest(1)
        prompt("Value 14")
    }
    field(LNKE, DBF_OUTLINK) {
        prompt("Output Link 14")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
    field(DLYF, DBF_DOUBLE) {
        promptgroup("42 - Link 8-F")
        prompt("Delay 15")
        interest(1)
    }
    field(DOLF, DBF_INLINK) {
        interest(1)
        prompt("Input link 15")
        promptgroup("42 - Link 8-F")
    }
    field(DOF, DBF_DOUBLE) {
        prompt("Value 15")
        interest(1)
    }
    field(LNKF, DBF_OUTLINK) {
        prompt("Output Link 15")
        interest(1)
        promptgroup("42 - Link 8-F")
    }
}
recordtype(compress) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        extra("void *		val")
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Value")
        asl(ASL0)
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Specification")
    }
    field(RES, DBF_SHORT) {
        prompt("Reset")
        interest(3)
        asl(ASL0)
        special(SPC_RESET)
    }
    field(ALG, DBF_MENU) {
        special(SPC_RESET)
        promptgroup("30 - Action")
        menu(compressALG)
        prompt("Compression Algorithm")
        interest(1)
    }
    field(NSAM, DBF_ULONG) {
        interest(1)
        initial("1")
        prompt("Number of Values")
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(N, DBF_ULONG) {
        promptgroup("30 - Action")
        special(SPC_RESET)
        prompt("N to 1 Compression")
        interest(1)
        initial("1")
    }
    field(IHIL, DBF_DOUBLE) {
        prompt("Init High Interest Lim")
        interest(1)
        promptgroup("30 - Action")
    }
    field(ILIL, DBF_DOUBLE) {
        prompt("Init Low Interest Lim")
        interest(1)
        promptgroup("30 - Action")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
        interest(1)
        prop(YES)
    }
    field(OFF, DBF_ULONG) {
        prompt("Offset")
        special(SPC_NOMOD)
    }
    field(NUSE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Number Used")
    }
    field(OUSE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Old Number Used")
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("double		*bptr")
        interest(4)
        prompt("Buffer Pointer")
    }
    field(SPTR, DBF_NOACCESS) {
        extra("double		*sptr")
        special(SPC_NOMOD)
        prompt("Summing Buffer Ptr")
        interest(4)
    }
    field(WPTR, DBF_NOACCESS) {
        interest(4)
        prompt("Working Buffer Ptr")
        extra("double		*wptr")
        special(SPC_NOMOD)
    }
    field(INPN, DBF_LONG) {
        interest(4)
        prompt("Number of elements in Working Buffer")
        special(SPC_NOMOD)
    }
    field(CVB, DBF_DOUBLE) {
        prompt("Compress Value Buffer")
        interest(3)
        special(SPC_NOMOD)
    }
    field(INX, DBF_ULONG) {
        prompt("Compressed Array Inx")
        interest(3)
        special(SPC_NOMOD)
    }
}
recordtype(transform) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VERS, DBF_FLOAT) {
        prompt("Code Version")
        initial("1")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        prompt("Record Private")
        interest(4)
        special(SPC_NOMOD)
        extra("void *         rpvt")
        size(4)
    }
    field(IVLA, DBF_MENU) {
        menu(transformIVLA)
        promptgroup("10 - Common")
        interest(1)
        initial("0")
        prompt("Invalid link action")
    }
    field(COPT, DBF_MENU) {
        prompt("Calc option")
        interest(1)
        initial("Conditional")
        promptgroup("10 - Common")
        menu(transformCOPT)
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
    }
    field(CLCA, DBF_STRING) {
        prompt("Calculation A")
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(CLCB, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        size(120)
        prompt("Calculation B")
    }
    field(CLCC, DBF_STRING) {
        size(120)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Calculation C")
    }
    field(CLCD, DBF_STRING) {
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Calculation D")
    }
    field(CLCE, DBF_STRING) {
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Calculation E")
    }
    field(CLCF, DBF_STRING) {
        prompt("Calculation F")
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(CLCG, DBF_STRING) {
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Calculation G")
    }
    field(CLCH, DBF_STRING) {
        prompt("Calculation H")
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(CLCI, DBF_STRING) {
        prompt("Calculation I")
        size(120)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(CLCJ, DBF_STRING) {
        prompt("Calculation J")
        size(120)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(CLCK, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        size(120)
        prompt("Calculation K")
    }
    field(CLCL, DBF_STRING) {
        prompt("Calculation L")
        special(SPC_MOD)
        promptgroup("10 - Common")
        size(120)
    }
    field(CLCM, DBF_STRING) {
        size(120)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Calculation M")
    }
    field(CLCN, DBF_STRING) {
        prompt("Calculation N")
        promptgroup("10 - Common")
        special(SPC_MOD)
        size(120)
    }
    field(CLCO, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        size(120)
        prompt("Calculation O")
    }
    field(CLCP, DBF_STRING) {
        prompt("Calculation P")
        special(SPC_MOD)
        promptgroup("10 - Common")
        size(120)
    }
    field(CAV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CBV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CCV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CDV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CEV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CFV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CGV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CHV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CIV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CJV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CKV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CLV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CMV, DBF_LONG) {
        interest(1)
        prompt("CALC Invalid")
    }
    field(CNV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(COV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(CPV, DBF_LONG) {
        prompt("CALC Invalid")
        interest(1)
    }
    field(INPA, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(INPC, DBF_INLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Input C")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Input E")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        interest(1)
        prompt("Input G")
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(INPI, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        prompt("Input J")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(INPK, DBF_INLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        prompt("Input L")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(INPM, DBF_INLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Input M")
    }
    field(INPN, DBF_INLINK) {
        interest(1)
        prompt("Input N")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(INPO, DBF_INLINK) {
        interest(1)
        prompt("Input O")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(INPP, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Input P")
        interest(1)
    }
    field(OUTA, DBF_OUTLINK) {
        interest(1)
        prompt("Output A")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(OUTB, DBF_OUTLINK) {
        interest(1)
        prompt("Output B")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(OUTC, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Output C")
        interest(1)
    }
    field(OUTD, DBF_OUTLINK) {
        interest(1)
        prompt("Output D")
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(OUTE, DBF_OUTLINK) {
        prompt("Output E")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(OUTF, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Output F")
        interest(1)
    }
    field(OUTG, DBF_OUTLINK) {
        interest(1)
        prompt("Output G")
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(OUTH, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Output H")
        interest(1)
    }
    field(OUTI, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Output I")
    }
    field(OUTJ, DBF_OUTLINK) {
        prompt("Output J")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(OUTK, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Output K")
        interest(1)
    }
    field(OUTL, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        interest(1)
        prompt("Output L")
    }
    field(OUTM, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("Output M")
    }
    field(OUTN, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Output N")
        interest(1)
    }
    field(OUTO, DBF_OUTLINK) {
        prompt("Output O")
        interest(1)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(OUTP, DBF_OUTLINK) {
        prompt("Output P")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(EGU, DBF_STRING) {
        prompt("Units Name")
        interest(1)
        promptgroup("10 - Common")
        size(16)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Display Precision")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Value of A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of B")
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of C")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of D")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of E")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of F")
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of G")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of H")
        special(SPC_MOD)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of I")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
        prompt("Value of J")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of K")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of L")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(M, DBF_DOUBLE) {
        prompt("Value of M")
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
    }
    field(N, DBF_DOUBLE) {
        prompt("Value of N")
        promptgroup("10 - Common")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(O, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        special(SPC_MOD)
        prompt("Value of O")
    }
    field(P, DBF_DOUBLE) {
        prompt("Value of P")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("10 - Common")
    }
    field(LA, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of A")
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        prompt("Prev Value of B")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of D")
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of E")
        interest(3)
    }
    field(LF, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of F")
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of G")
    }
    field(LH, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of H")
        special(SPC_NOMOD)
    }
    field(LI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of I")
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LL, DBF_DOUBLE) {
        prompt("Prev Value of L")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of M")
        interest(3)
    }
    field(LN, DBF_DOUBLE) {
        prompt("Prev Value of N")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LO, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of O")
    }
    field(LP, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of P")
    }
    field(RPCA, DBF_NOACCESS) {
        extra("unsigned char rpca[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
        interest(4)
        prompt("Postfix Calc A")
    }
    field(RPCB, DBF_NOACCESS) {
        prompt("Postfix Calc B")
        interest(4)
        special(SPC_NOMOD)
        extra("unsigned char rpcb[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCC, DBF_NOACCESS) {
        interest(4)
        prompt("Postfix Calc C")
        special(SPC_NOMOD)
        extra("unsigned char rpcc[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCD, DBF_NOACCESS) {
        prompt("Postfix Calc D")
        interest(4)
        special(SPC_NOMOD)
        extra("unsigned char rpcd[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCE, DBF_NOACCESS) {
        extra("unsigned char rpce[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
        interest(4)
        prompt("Postfix Calc E")
    }
    field(RPCF, DBF_NOACCESS) {
        interest(4)
        prompt("Postfix Calc F")
        special(SPC_NOMOD)
        extra("unsigned char rpcf[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCG, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char rpcg[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        prompt("Postfix Calc G")
        interest(4)
    }
    field(RPCH, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char rpch[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        prompt("Postfix Calc H")
    }
    field(RPCI, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char rpci[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        prompt("Postfix Calc I")
        interest(4)
    }
    field(RPCJ, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char rpcj[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        prompt("Postfix Calc J")
    }
    field(RPCK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char rpck[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        prompt("Postfix Calc K")
    }
    field(RPCL, DBF_NOACCESS) {
        interest(4)
        prompt("Postfix Calc L")
        extra("unsigned char rpcl[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
    }
    field(RPCM, DBF_NOACCESS) {
        extra("unsigned char rpcm[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
        prompt("Postfix Calc M")
        interest(4)
    }
    field(RPCN, DBF_NOACCESS) {
        prompt("Postfix Calc N")
        interest(4)
        special(SPC_NOMOD)
        extra("unsigned char rpcn[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
    }
    field(RPCO, DBF_NOACCESS) {
        extra("unsigned char rpco[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        special(SPC_NOMOD)
        prompt("Postfix Calc O")
        interest(4)
    }
    field(RPCP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char rpcp[SCALC_INFIX_TO_POSTFIX_SIZE(120)]")
        interest(4)
        prompt("Postfix Calc P")
    }
    field(CMTA, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment A")
    }
    field(CMTB, DBF_STRING) {
        prompt("Comment B")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTC, DBF_STRING) {
        prompt("Comment C")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTD, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment D")
    }
    field(CMTE, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment E")
    }
    field(CMTF, DBF_STRING) {
        prompt("Comment F")
        promptgroup("10 - Common")
        size(39)
    }
    field(CMTG, DBF_STRING) {
        prompt("Comment G")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTH, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment H")
    }
    field(CMTI, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment I")
    }
    field(CMTJ, DBF_STRING) {
        prompt("Comment J")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTK, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment K")
    }
    field(CMTL, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment L")
    }
    field(CMTM, DBF_STRING) {
        prompt("Comment M")
        size(39)
        promptgroup("10 - Common")
    }
    field(CMTN, DBF_STRING) {
        size(39)
        promptgroup("10 - Common")
        prompt("Comment N")
    }
    field(CMTO, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment O")
    }
    field(CMTP, DBF_STRING) {
        promptgroup("10 - Common")
        size(39)
        prompt("Comment P")
    }
    field(MAP, DBF_SHORT) {
        promptgroup("10 - Common")
        interest(3)
        prompt("Input bitmap")
    }
    field(IAV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("Input link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IBV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("Input link valid")
    }
    field(ICV, DBF_MENU) {
        prompt("Input link valid")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(IDV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("Input link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IEV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Input link valid")
    }
    field(IFV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("Input link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IGV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("Input link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IHV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Input link valid")
        initial("1")
        interest(1)
    }
    field(IIV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Input link valid")
        initial("1")
        interest(1)
    }
    field(IJV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("Input link valid")
    }
    field(IKV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("Input link valid")
    }
    field(ILV, DBF_MENU) {
        prompt("Input link valid")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(IMV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Input link valid")
        interest(1)
        initial("1")
    }
    field(INV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("Input link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(IOV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Input link valid")
    }
    field(IPV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("Input link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OAV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("Output link valid")
    }
    field(OBV, DBF_MENU) {
        prompt("Output link valid")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(OCV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Output link valid")
        interest(1)
        initial("1")
    }
    field(ODV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("Output link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OEV, DBF_MENU) {
        prompt("Output link valid")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(OFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Output link valid")
        initial("1")
        interest(1)
    }
    field(OGV, DBF_MENU) {
        prompt("Output link valid")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(OHV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("Output link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OIV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Output link valid")
        initial("1")
        interest(1)
    }
    field(OJV, DBF_MENU) {
        prompt("Output link valid")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(OKV, DBF_MENU) {
        prompt("Output link valid")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(transformIAV)
    }
    field(OLV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("Output link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(OMV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("Output link valid")
        menu(transformIAV)
        special(SPC_NOMOD)
    }
    field(ONV, DBF_MENU) {
        menu(transformIAV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("Output link valid")
    }
    field(OOV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Output link valid")
        interest(1)
        initial("1")
    }
    field(OPV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(transformIAV)
        prompt("Output link valid")
        interest(1)
        initial("1")
    }
}
recordtype(swait) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VERS, DBF_FLOAT) {
        special(SPC_NOMOD)
        prompt("Code Version")
        initial("1")
    }
    field(HOPR, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("High Operating Range")
        promptgroup("70 - Alarm")
    }
    field(LOPR, DBF_FLOAT) {
        asl(ASL0)
        interest(1)
        prompt("Low Operating Range")
        promptgroup("41 - Bits (1)")
    }
    field(INIT, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Initialized?")
        interest(3)
    }
    field(CBST, DBF_NOACCESS) {
        prompt("Pointer to cbStruct")
        interest(4)
        extra("void *         cbst")
        special(SPC_NOMOD)
        size(4)
    }
    field(INAN, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("INPA PV Name")
        interest(1)
        asl(ASL0)
    }
    field(INBN, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("INPB PV Name")
    }
    field(INCN, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("INPC PV Name")
        asl(ASL0)
        interest(1)
    }
    field(INDN, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("INPD PV Name")
        asl(ASL0)
        interest(1)
    }
    field(INEN, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("INPE PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INFN, DBF_STRING) {
        asl(ASL0)
        interest(1)
        prompt("INPF PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INGN, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
        prompt("INPG PV Name")
        asl(ASL0)
        interest(1)
    }
    field(INHN, DBF_STRING) {
        interest(1)
        asl(ASL0)
        prompt("INPH PV Name")
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(ININ, DBF_STRING) {
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        asl(ASL0)
        prompt("INPI PV Name")
    }
    field(INJN, DBF_STRING) {
        prompt("INPJ PV Name")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(INKN, DBF_STRING) {
        prompt("INPK PV Name")
        interest(1)
        asl(ASL0)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(INLN, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("30 - Action")
        asl(ASL0)
        interest(1)
        prompt("INPL PV Name")
    }
    field(DOLN, DBF_STRING) {
        prompt("DOL  PV Name")
        asl(ASL0)
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
    }
    field(OUTN, DBF_STRING) {
        prompt("OUT  PV Name")
        interest(1)
        asl(ASL0)
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(40)
    }
    field(INAV, DBF_MENU) {
        prompt("INPA PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INBV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPB PV Status")
        interest(1)
    }
    field(INCV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPC PV Status")
        interest(1)
    }
    field(INDV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPD PV Status")
        interest(1)
    }
    field(INEV, DBF_MENU) {
        prompt("INPE PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INFV, DBF_MENU) {
        prompt("INPF PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INGV, DBF_MENU) {
        prompt("INPG PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(INHV, DBF_MENU) {
        interest(1)
        prompt("INPH PV Status")
        menu(swaitINAV)
        special(SPC_NOMOD)
    }
    field(INIV, DBF_MENU) {
        interest(1)
        prompt("INPI PV Status")
        menu(swaitINAV)
        special(SPC_NOMOD)
    }
    field(INJV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPJ PV Status")
        interest(1)
    }
    field(INKV, DBF_MENU) {
        menu(swaitINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("INPK PV Status")
    }
    field(INLV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(swaitINAV)
        prompt("INPL PV Status")
        interest(1)
    }
    field(DOLV, DBF_MENU) {
        prompt("DOL  PV Status")
        interest(1)
        special(SPC_NOMOD)
        menu(swaitINAV)
    }
    field(OUTV, DBF_MENU) {
        interest(1)
        prompt("OUT  PV Status")
        menu(swaitINAV)
        special(SPC_NOMOD)
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(LA, DBF_DOUBLE) {
        prompt("Last Val of Input A")
    }
    field(LB, DBF_DOUBLE) {
        prompt("Last Val of Input B")
    }
    field(LC, DBF_DOUBLE) {
        prompt("Last Val of Input C")
    }
    field(LD, DBF_DOUBLE) {
        prompt("Last Val of Input D")
    }
    field(LE, DBF_DOUBLE) {
        prompt("Last Val of Input E")
    }
    field(LF, DBF_DOUBLE) {
        prompt("Last Val of Input F")
    }
    field(LG, DBF_DOUBLE) {
        prompt("Last Val of Input G")
    }
    field(LH, DBF_DOUBLE) {
        prompt("Last Val of Input H")
    }
    field(LI, DBF_DOUBLE) {
        prompt("Last Val of Input I")
    }
    field(LJ, DBF_DOUBLE) {
        prompt("Last Val of Input J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Last Val of Input K")
    }
    field(LL, DBF_DOUBLE) {
        prompt("Last Val of Input L")
    }
    field(INAP, DBF_MENU) {
        interest(1)
        initial("Yes")
        prompt("INPA causes I/O INTR")
        menu(swaitINAP)
        promptgroup("30 - Action")
    }
    field(INBP, DBF_MENU) {
        initial("Yes")
        interest(1)
        prompt("INPB causes I/O INTR")
        menu(swaitINAP)
        promptgroup("30 - Action")
    }
    field(INCP, DBF_MENU) {
        menu(swaitINAP)
        promptgroup("30 - Action")
        initial("Yes")
        interest(1)
        prompt("INPC causes I/O INTR")
    }
    field(INDP, DBF_MENU) {
        prompt("INPD causes I/O INTR")
        initial("Yes")
        interest(1)
        promptgroup("30 - Action")
        menu(swaitINAP)
    }
    field(INEP, DBF_MENU) {
        initial("Yes")
        interest(1)
        prompt("INPE causes I/O INTR")
        menu(swaitINAP)
        promptgroup("30 - Action")
    }
    field(INFP, DBF_MENU) {
        prompt("INPF causes I/O INTR")
        interest(1)
        initial("Yes")
        promptgroup("30 - Action")
        menu(swaitINAP)
    }
    field(INGP, DBF_MENU) {
        promptgroup("30 - Action")
        menu(swaitINAP)
        prompt("INPG causes I/O INTR")
        interest(1)
        initial("Yes")
    }
    field(INHP, DBF_MENU) {
        menu(swaitINAP)
        promptgroup("30 - Action")
        initial("Yes")
        interest(1)
        prompt("INPH causes I/O INTR")
    }
    field(INIP, DBF_MENU) {
        prompt("INPI causes I/O INTR")
        interest(1)
        initial("Yes")
        promptgroup("30 - Action")
        menu(swaitINAP)
    }
    field(INJP, DBF_MENU) {
        promptgroup("30 - Action")
        menu(swaitINAP)
        prompt("INPJ causes I/O INTR")
        initial("Yes")
        interest(1)
    }
    field(INKP, DBF_MENU) {
        initial("Yes")
        interest(1)
        prompt("INPK causes I/O INTR")
        menu(swaitINAP)
        promptgroup("30 - Action")
    }
    field(INLP, DBF_MENU) {
        promptgroup("30 - Action")
        menu(swaitINAP)
        prompt("INPL causes I/O INTR")
        interest(1)
        initial("Yes")
    }
    field(CALC, DBF_STRING) {
        prompt("Calculation")
        asl(ASL0)
        initial("0")
        special(SPC_CALC)
        promptgroup("30 - Action")
        size(36)
    }
    field(RPCL, DBF_NOACCESS) {
        extra("char    rpcl[184]")
        special(SPC_NOMOD)
        size(184)
        prompt("Reverse Polish Calc")
        interest(4)
    }
    field(CLCV, DBF_LONG) {
        interest(1)
        prompt("CALC Valid")
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Value Field")
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Old Value")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("10 - Common")
    }
    field(OOPT, DBF_MENU) {
        promptgroup("30 - Action")
        menu(swaitOOPT)
        prompt("Output Execute Opt")
        interest(1)
    }
    field(ODLY, DBF_FLOAT) {
        prompt("Output Execute Delay")
        interest(1)
        asl(ASL0)
        promptgroup("70 - Alarm")
    }
    field(DOPT, DBF_MENU) {
        prompt("Output Data Option")
        interest(1)
        promptgroup("30 - Action")
        menu(swaitDOPT)
    }
    field(DOLD, DBF_DOUBLE) {
        promptgroup("30 - Action")
        prompt("Desired Output Data")
        asl(ASL0)
        interest(1)
    }
    field(OEVT, DBF_USHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        prompt("Event To Issue")
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("30 - Action")
        prompt("Archive Deadband")
        interest(1)
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("30 - Action")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Archived")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
        interest(3)
    }
    field(SIOL, DBF_INLINK) {
        prompt("Sim Input Specifctn")
        interest(1)
        promptgroup("30 - Action")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("30 - Action")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("40 - Input")
        menu(menuAlarmSevr)
    }
}
device(swait, CONSTANT, devSWaitIoEvent, "Soft Channel")
recordtype(scanparm) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VERS, DBF_FLOAT) {
        special(SPC_NOMOD)
        initial("1")
        prompt("Code Version")
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(PRE, DBF_SHORT) {
        prompt("PRE-write command")
        interest(1)
        promptgroup("80 - Display")
        pp(TRUE)
    }
    field(OPRE, DBF_OUTLINK) {
        prompt("PRE-write OutLink")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_NOMOD)
    }
    field(SM, DBF_MENU) {
        prompt("StepMode")
        interest(1)
        promptgroup("10 - Common")
        menu(sscanP1SM)
    }
    field(OSM, DBF_OUTLINK) {
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        prompt("SM OutLink")
        interest(1)
    }
    field(AR, DBF_MENU) {
        promptgroup("10 - Common")
        menu(sscanP1AR)
        prompt("absRel")
        interest(1)
    }
    field(OAR, DBF_OUTLINK) {
        prompt("AR OutLink")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("10 - Common")
    }
    field(AFT, DBF_MENU) {
        interest(1)
        prompt("After")
        menu(sscanPASM)
        promptgroup("10 - Common")
    }
    field(OAFT, DBF_OUTLINK) {
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        prompt("AFT OutLink")
        interest(1)
    }
    field(PPV, DBF_STRING) {
        prompt("PositionerPVName")
        interest(1)
        promptgroup("10 - Common")
        size(40)
    }
    field(RPV, DBF_STRING) {
        interest(1)
        prompt("ReadbackPVName")
        size(40)
        promptgroup("10 - Common")
    }
    field(DPV, DBF_STRING) {
        interest(1)
        prompt("DetPVName")
        size(40)
        promptgroup("10 - Common")
    }
    field(TPV, DBF_STRING) {
        prompt("TrigPVName")
        interest(1)
        promptgroup("10 - Common")
        size(40)
    }
    field(OPPV, DBF_OUTLINK) {
        interest(1)
        prompt("P1PV OutLink")
        special(SPC_NOMOD)
        promptgroup("10 - Common")
    }
    field(ORPV, DBF_OUTLINK) {
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("R1PV OutLink")
    }
    field(ODPV, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_NOMOD)
        interest(1)
        prompt("D1PV OutLink")
    }
    field(OTPV, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_NOMOD)
        prompt("T1PV OutLink")
        interest(1)
    }
    field(SP, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("80 - Display")
        interest(1)
        prompt("StartPos")
    }
    field(OSP, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_NOMOD)
        prompt("SP OutLink")
        interest(1)
    }
    field(EP, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("80 - Display")
        interest(1)
        prompt("EndPos")
    }
    field(OEP, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_NOMOD)
        prompt("EP OutLink")
        interest(1)
    }
    field(NP, DBF_LONG) {
        interest(1)
        prompt("nPts")
        pp(TRUE)
        promptgroup("80 - Display")
    }
    field(ONP, DBF_OUTLINK) {
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("NP OutLink")
    }
    field(SC, DBF_SHORT) {
        interest(1)
        prompt("StartCmd")
        promptgroup("80 - Display")
    }
    field(OSC, DBF_OUTLINK) {
        prompt("SC OutLink")
        interest(1)
        promptgroup("10 - Common")
        special(SPC_NOMOD)
    }
    field(AQT, DBF_DOUBLE) {
        promptgroup("80 - Display")
        pp(TRUE)
        prompt("Acquire time")
        interest(1)
    }
    field(OAQT, DBF_OUTLINK) {
        interest(1)
        prompt("AQT OutLink")
        promptgroup("10 - Common")
        special(SPC_NOMOD)
    }
    field(MP, DBF_LONG) {
        interest(1)
        prompt("MaxPts")
        special(SPC_NOMOD)
    }
    field(IMP, DBF_INLINK) {
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        interest(1)
        prompt("MP InLink")
    }
    field(ACT, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
        prompt("ScanActive")
    }
    field(IACT, DBF_INLINK) {
        special(SPC_NOMOD)
        promptgroup("10 - Common")
        prompt("InLink")
        interest(1)
    }
    field(LOAD, DBF_SHORT) {
        interest(1)
        prompt("Load")
        pp(TRUE)
        promptgroup("80 - Display")
    }
    field(OLOAD, DBF_OUTLINK) {
        promptgroup("10 - Common")
        special(SPC_NOMOD)
        prompt("LOAD OutLink")
        interest(1)
    }
    field(GO, DBF_SHORT) {
        interest(1)
        prompt("Go")
        pp(TRUE)
        promptgroup("80 - Display")
    }
    field(OGO, DBF_OUTLINK) {
        interest(1)
        prompt("GO OutLink")
        special(SPC_NOMOD)
        promptgroup("10 - Common")
    }
    field(STEP, DBF_DOUBLE) {
        prompt("StepSize")
        interest(1)
        special(SPC_NOMOD)
    }
    field(LSTP, DBF_DOUBLE) {
        interest(1)
        prompt("Last stepSize")
        special(SPC_NOMOD)
    }
}
recordtype(state) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        interest(1)
        initial("1")
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        pp(TRUE)
        size(20)
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Value")
    }
    field(OVAL, DBF_STRING) {
        interest(3)
        prompt("Prev Value")
        size(20)
        special(SPC_NOMOD)
    }
}
recordtype(dfanout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Link")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Desired Output")
    }
    field(SELM, DBF_MENU) {
        prompt("Select Mechanism")
        interest(1)
        promptgroup("30 - Action")
        menu(dfanoutSELM)
    }
    field(SELN, DBF_USHORT) {
        interest(1)
        initial("1")
        prompt("Link Selection")
    }
    field(SELL, DBF_INLINK) {
        promptgroup("30 - Action")
        prompt("Link Selection Loc")
        interest(1)
    }
    field(OUTA, DBF_OUTLINK) {
        prompt("Output Spec A")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUTB, DBF_OUTLINK) {
        prompt("Output Spec B")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUTC, DBF_OUTLINK) {
        prompt("Output Spec C")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUTD, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Spec D")
    }
    field(OUTE, DBF_OUTLINK) {
        prompt("Output Spec E")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OUTF, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Spec F")
        interest(1)
    }
    field(OUTG, DBF_OUTLINK) {
        promptgroup("50 - Output")
        prompt("Output Spec G")
        interest(1)
    }
    field(OUTH, DBF_OUTLINK) {
        prompt("Output Spec H")
        interest(1)
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        prompt("Output Mode Select")
        interest(1)
        promptgroup("50 - Output")
        menu(menuOmsl)
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
        interest(1)
        prop(YES)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prompt("Display Precision")
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("Lolo Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("Low Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        interest(1)
        prop(YES)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("High Severity")
        interest(1)
        prop(YES)
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_DOUBLE) {
        interest(1)
        prompt("Alarm Deadband")
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Archived")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Val Monitored")
        interest(3)
    }
}
recordtype(longin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_LONG) {
        prompt("Current value")
        asl(ASL0)
        promptgroup("40 - Input")
        pp(TRUE)
    }
    field(INP, DBF_INLINK) {
        prompt("Input Specification")
        interest(1)
        promptgroup("40 - Input")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
        size(16)
    }
    field(HOPR, DBF_LONG) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_LONG) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_LONG) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_LONG) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_LONG) {
        prop(YES)
        interest(1)
        prompt("High Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_LONG) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        interest(1)
        prompt("Hihi Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LLSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        interest(1)
        prompt("High Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HYST, DBF_LONG) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(AFTC, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Filter Time Constant")
        interest(1)
    }
    field(AFVL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Alarm Filter Value")
    }
    field(ADEL, DBF_LONG) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_LONG) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LALM, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(ALST, DBF_LONG) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_LONG) {
        interest(3)
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_INLINK) {
        prompt("Sim Input Specifctn")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_LONG) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
        interest(2)
    }
}
device(longin, CONSTANT, devLiSoft, "Soft Channel")
device(longin, CONSTANT, devLiSoftCallback, "Async Soft Channel")
device(longin, INST_IO, devLiGeneralTime, "General Time")
device(longin, INST_IO, asynLiInt32, "asynInt32")
device(longin, INST_IO, asynLiUInt32Digital, "asynUInt32Digital")
recordtype(calc) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Result")
    }
    field(CALC, DBF_STRING) {
        initial("0")
        prompt("Calculation")
        pp(TRUE)
        size(80)
        special(SPC_CALC)
        promptgroup("30 - Action")
    }
    field(INPA, DBF_INLINK) {
        interest(1)
        prompt("Input A")
        promptgroup("41 - Input A-F")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input C")
    }
    field(INPD, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input D")
        interest(1)
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPF, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        prompt("Input H")
        promptgroup("42 - Input G-L")
    }
    field(INPI, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input I")
        interest(1)
    }
    field(INPJ, DBF_INLINK) {
        interest(1)
        prompt("Input J")
        promptgroup("42 - Input G-L")
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        prompt("Input K")
        promptgroup("42 - Input G-L")
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        prompt("Input L")
        promptgroup("42 - Input G-L")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
        size(16)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Rng")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prop(YES)
        interest(1)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        interest(1)
        prop(YES)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Low Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HHSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        prop(YES)
        interest(1)
        prompt("Lolo Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(HSV, DBF_MENU) {
        prompt("High Severity")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        prop(YES)
        interest(1)
        prompt("Low Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(AFTC, DBF_DOUBLE) {
        prompt("Alarm Filter Time Constant")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFVL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Alarm Filter Value")
        interest(3)
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(LA, DBF_DOUBLE) {
        prompt("Prev Value of A")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of B")
        interest(3)
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of E")
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(LG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of G")
        interest(3)
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of H")
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of J")
        interest(3)
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of L")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Archived")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        interest(4)
        prompt("Reverse Polish Calc")
        special(SPC_NOMOD)
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
    }
}
recordtype(histogram) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value")
        extra("void *	val")
        special(SPC_DBADDR)
    }
    field(NELM, DBF_USHORT) {
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        initial("1")
        interest(1)
        prompt("Num of Array Elements")
    }
    field(CSTA, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Collection Status")
        interest(1)
        initial("1")
    }
    field(CMD, DBF_MENU) {
        special(SPC_CALC)
        menu(histogramCMD)
        prompt("Collection Control")
        interest(1)
        asl(ASL0)
    }
    field(ULIM, DBF_DOUBLE) {
        promptgroup("30 - Action")
        special(SPC_RESET)
        interest(1)
        prop(YES)
        prompt("Upper Signal Limit")
    }
    field(LLIM, DBF_DOUBLE) {
        prompt("Lower Signal Limit ")
        interest(1)
        prop(YES)
        promptgroup("30 - Action")
        special(SPC_RESET)
    }
    field(WDTH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Element Width")
    }
    field(SGNL, DBF_DOUBLE) {
        prompt("Signal Value")
        special(SPC_MOD)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(SVL, DBF_INLINK) {
        prompt("Signal Value Location")
        interest(1)
        promptgroup("40 - Input")
    }
    field(BPTR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsUInt32 *bptr")
        prompt("Buffer Pointer")
        interest(4)
    }
    field(WDOG, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *  wdog")
        interest(4)
        prompt("Watchdog callback")
    }
    field(MDEL, DBF_SHORT) {
        interest(1)
        prompt("Monitor Count Deadband")
        promptgroup("80 - Display")
    }
    field(MCNT, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Counts Since Monitor")
        interest(3)
    }
    field(SDEL, DBF_DOUBLE) {
        interest(1)
        prompt("Monitor Seconds Dband")
        promptgroup("80 - Display")
        special(SPC_RESET)
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Input Specifctn")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        prompt("Simulation Mode")
        interest(1)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
    }
    field(HOPR, DBF_ULONG) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_ULONG) {
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
}
device(histogram, CONSTANT, devHistogramSoft, "Soft Channel")
recordtype(stringin) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_STRING) {
        prompt("Current Value")
        asl(ASL0)
        promptgroup("40 - Input")
        pp(TRUE)
        size(40)
    }
    field(OVAL, DBF_STRING) {
        special(SPC_NOMOD)
        size(40)
        prompt("Previous Value")
        interest(3)
    }
    field(INP, DBF_INLINK) {
        interest(1)
        prompt("Input Specification")
        promptgroup("40 - Input")
    }
    field(MPST, DBF_MENU) {
        interest(1)
        prompt("Post Value Monitors")
        menu(stringinPOST)
        promptgroup("80 - Display")
    }
    field(APST, DBF_MENU) {
        menu(stringinPOST)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Archive Monitors")
    }
    field(SIOL, DBF_INLINK) {
        interest(1)
        prompt("Sim Input Specifctn")
        promptgroup("90 - Simulate")
    }
    field(SVAL, DBF_STRING) {
        prompt("Simulation Value")
        pp(TRUE)
        size(40)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Mode Location")
        interest(1)
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
    }
}
device(stringin, CONSTANT, devSiSoft, "Soft Channel")
device(stringin, CONSTANT, devSiSoftCallback, "Async Soft Channel")
device(stringin, INST_IO, devTimestampSI, "Soft Timestamp")
device(stringin, INST_IO, devSiGeneralTime, "General Time")
device(stringin, INST_IO, devSiEnviron, "getenv")
device(stringin, INST_IO, asynSiOctetCmdResponse, "asynOctetCmdResponse")
device(stringin, INST_IO, asynSiOctetWriteRead, "asynOctetWriteRead")
device(stringin, INST_IO, asynSiOctetRead, "asynOctetRead")
device(stringin, INST_IO, devStringinStats, "IOC stats")
device(stringin, INST_IO, devStringinEnvVar, "IOC env var")
device(stringin, INST_IO, devStringinEpics, "IOC epics var")
recordtype(sub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %struct subRecord;
    %typedef long (*SUBFUNCPTR)(struct subRecord *);
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Result")
        asl(ASL0)
    }
    field(INAM, DBF_STRING) {
        size(40)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Init Routine Name")
    }
    field(SNAM, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        size(40)
        prompt("Subroutine Name")
        interest(1)
    }
    field(SADR, DBF_NOACCESS) {
        interest(4)
        prompt("Subroutine Address")
        extra("SUBFUNCPTR sadr")
        special(SPC_NOMOD)
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input B")
        interest(1)
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPD, DBF_INLINK) {
        interest(1)
        prompt("Input D")
        promptgroup("41 - Input A-F")
    }
    field(INPE, DBF_INLINK) {
        interest(1)
        prompt("Input E")
        promptgroup("41 - Input A-F")
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        prompt("Input F")
        promptgroup("41 - Input A-F")
    }
    field(INPG, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input G")
    }
    field(INPH, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input H")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        interest(1)
        prompt("Input I")
        promptgroup("42 - Input G-L")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        prompt("Input J")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        interest(1)
        promptgroup("42 - Input G-L")
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
        prop(YES)
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Lolo Alarm Limit")
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Low Alarm Limit")
        interest(1)
        prop(YES)
    }
    field(PREC, DBF_SHORT) {
        prop(YES)
        interest(1)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(BRSV, DBF_MENU) {
        prompt("Bad Return Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HHSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Hihi Severity")
        prop(YES)
        interest(1)
    }
    field(LLSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Lolo Severity")
        prop(YES)
        interest(1)
    }
    field(HSV, DBF_MENU) {
        prop(YES)
        interest(1)
        prompt("High Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        prop(YES)
        interest(1)
        prompt("Low Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input G")
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of A")
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of B")
        special(SPC_NOMOD)
    }
    field(LC, DBF_DOUBLE) {
        prompt("Prev Value of C")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of E")
        interest(3)
    }
    field(LF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of F")
        interest(3)
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of G")
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of H")
        interest(3)
    }
    field(LI, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of I")
        special(SPC_NOMOD)
    }
    field(LJ, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of J")
        special(SPC_NOMOD)
    }
    field(LK, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of K")
        interest(3)
    }
    field(LL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of L")
    }
    field(LALM, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Archived")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Last Value Monitored")
        interest(3)
    }
}
recordtype(ao) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        prompt("dbPutField process")
        interest(1)
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        pp(TRUE)
        prompt("Desired Output")
        asl(ASL0)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(OROC, DBF_DOUBLE) {
        interest(1)
        prompt("Output Rate of Change")
        promptgroup("50 - Output")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Desired Output Loc")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Mode Select")
    }
    field(OIF, DBF_MENU) {
        promptgroup("50 - Output")
        menu(aoOIF)
        prompt("Out Full/Incremental")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        interest(1)
        prop(YES)
        prompt("Display Precision")
    }
    field(LINR, DBF_MENU) {
        menu(menuConvert)
        pp(TRUE)
        promptgroup("60 - Convert")
        special(SPC_LINCONV)
        interest(1)
        prompt("Linearization")
    }
    field(EGUF, DBF_DOUBLE) {
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
        pp(TRUE)
        prompt("Eng Units Full")
        interest(1)
    }
    field(EGUL, DBF_DOUBLE) {
        pp(TRUE)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
        interest(1)
        prompt("Eng Units Low")
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
        size(16)
    }
    field(ROFF, DBF_ULONG) {
        interest(2)
        prompt("Raw Offset")
        pp(TRUE)
    }
    field(EOFF, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        pp(TRUE)
        prompt("EGU to Raw Offset")
        interest(2)
    }
    field(ESLO, DBF_DOUBLE) {
        prompt("EGU to Raw Slope")
        interest(2)
        initial("1")
        promptgroup("60 - Convert")
        pp(TRUE)
    }
    field(DRVH, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("Drive High Limit")
        pp(TRUE)
        promptgroup("30 - Action")
    }
    field(DRVL, DBF_DOUBLE) {
        promptgroup("30 - Action")
        pp(TRUE)
        prompt("Drive Low Limit")
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Range")
        interest(1)
        prop(YES)
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        interest(1)
        prop(YES)
    }
    field(AOFF, DBF_DOUBLE) {
        prompt("Adjustment Offset")
        interest(1)
        promptgroup("60 - Convert")
        pp(TRUE)
    }
    field(ASLO, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("60 - Convert")
        interest(1)
        prompt("Adjustment Slope")
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        interest(1)
        prop(YES)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Lolo Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LOW, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Low Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HHSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Hihi Severity")
    }
    field(LLSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Low Severity")
        prop(YES)
        interest(1)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
    }
    field(RVAL, DBF_LONG) {
        pp(TRUE)
        prompt("Current Raw Value")
    }
    field(ORAW, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous Raw Value")
    }
    field(RBV, DBF_LONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_LONG) {
        prompt("Prev Readback Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PVAL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous value")
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(PBRK, DBF_NOACCESS) {
        interest(4)
        prompt("Ptrto brkTable")
        extra("void *   pbrk")
        special(SPC_NOMOD)
    }
    field(INIT, DBF_SHORT) {
        prompt("Initialized?")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LBRK, DBF_SHORT) {
        interest(3)
        prompt("LastBreak Point")
        special(SPC_NOMOD)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        prompt("Simulation Mode")
        interest(1)
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        interest(2)
        prompt("Sim mode Alarm Svrty")
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output action")
    }
    field(IVOV, DBF_DOUBLE) {
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output value")
    }
    field(OMOD, DBF_UCHAR) {
        prompt("Was OVAL modified?")
        special(SPC_NOMOD)
    }
}
device(ao, CONSTANT, devAoSoft, "Soft Channel")
device(ao, CONSTANT, devAoSoftRaw, "Raw Soft Channel")
device(ao, CONSTANT, devAoSoftCallback, "Async Soft Channel")
device(ao, INST_IO, asynAoInt32, "asynInt32")
device(ao, INST_IO, asynAoFloat64, "asynFloat64")
device(ao, INST_IO, devAoStats, "IOC stats")
recordtype(asyn) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        special(SPC_AS)
        promptgroup("10 - Common")
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        interest(4)
        prompt("Value field (unused)")
    }
    field(PORT, DBF_STRING) {
        initial("")
        interest(1)
        prompt("asyn port")
        size(40)
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(ADDR, DBF_LONG) {
        interest(1)
        initial("0")
        prompt("asyn address")
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(PCNCT, DBF_MENU) {
        menu(asynCONNECT)
        special(SPC_MOD)
        interest(2)
        prompt("Port Connect/Disconnect")
    }
    field(DRVINFO, DBF_STRING) {
        prompt("Driver info string")
        initial("")
        interest(2)
        special(SPC_MOD)
        promptgroup("40 - Input")
        size(40)
    }
    field(REASON, DBF_LONG) {
        special(SPC_MOD)
        prompt("asynUser->reason")
        interest(2)
    }
    field(TMOD, DBF_MENU) {
        promptgroup("40 - Input")
        menu(asynTMOD)
        prompt("Transaction mode")
        interest(1)
    }
    field(TMOT, DBF_DOUBLE) {
        promptgroup("40 - Input")
        interest(1)
        initial("1.0")
        prompt("Timeout (sec)")
    }
    field(IFACE, DBF_MENU) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        menu(asynINTERFACE)
        prompt("Interface")
        interest(2)
    }
    field(OCTETIV, DBF_LONG) {
        prompt("asynOctet is valid")
        interest(2)
    }
    field(OPTIONIV, DBF_LONG) {
        interest(2)
        prompt("asynOption is valid")
    }
    field(GPIBIV, DBF_LONG) {
        interest(2)
        prompt("asynGPIB is valid")
    }
    field(I32IV, DBF_LONG) {
        prompt("asynInt32 is valid")
        interest(2)
    }
    field(UI32IV, DBF_LONG) {
        interest(2)
        prompt("asynUInt32Digital is valid")
    }
    field(F64IV, DBF_LONG) {
        prompt("asynFloat64 is valid")
        interest(2)
    }
    field(AOUT, DBF_STRING) {
        pp(TRUE)
        size(40)
        promptgroup("50 - Output")
        interest(1)
        prompt("Output (command) string")
    }
    field(OEOS, DBF_STRING) {
        prompt("Output delimiter")
        interest(1)
        special(SPC_MOD)
        promptgroup("50 - Output")
        size(40)
    }
    field(BOUT, DBF_CHAR) {
        pp(TRUE)
        special(SPC_DBADDR)
        interest(1)
        prompt("Output binary data")
    }
    field(OPTR, DBF_NOACCESS) {
        interest(4)
        prompt("Output buffer pointer")
        special(SPC_NOMOD)
        extra("void *optr")
    }
    field(OMAX, DBF_LONG) {
        special(SPC_NOMOD)
        promptgroup("50 - Output")
        prompt("Max. size of output array")
        initial("80")
        interest(1)
    }
    field(NOWT, DBF_LONG) {
        prompt("Number of bytes to write")
        interest(1)
        initial("80")
        promptgroup("50 - Output")
    }
    field(NAWT, DBF_LONG) {
        interest(1)
        prompt("Number of bytes actually written")
    }
    field(OFMT, DBF_MENU) {
        prompt("Output format")
        interest(1)
        promptgroup("50 - Output")
        menu(asynFMT)
    }
    field(AINP, DBF_STRING) {
        prompt("Input (response) string")
        interest(1)
        special(SPC_NOMOD)
        size(40)
    }
    field(TINP, DBF_STRING) {
        special(SPC_NOMOD)
        size(40)
        prompt("Translated input string")
        asl(ASL0)
        interest(1)
    }
    field(IEOS, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(1)
        prompt("Input Delimiter")
    }
    field(BINP, DBF_CHAR) {
        prompt("Input binary data")
        asl(ASL0)
        special(SPC_DBADDR)
    }
    field(IPTR, DBF_NOACCESS) {
        extra("void *iptr")
        special(SPC_NOMOD)
        size(4)
        prompt("Input buffer pointer")
        interest(4)
    }
    field(IMAX, DBF_LONG) {
        special(SPC_NOMOD)
        promptgroup("40 - Input")
        prompt("Max. size of input array")
        initial("80")
        interest(1)
    }
    field(NRRD, DBF_LONG) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Number of bytes to read")
    }
    field(NORD, DBF_LONG) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Number of bytes read")
    }
    field(IFMT, DBF_MENU) {
        interest(1)
        prompt("Input format")
        menu(asynFMT)
        promptgroup("40 - Input")
    }
    field(EOMR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(asynEOMREASON)
        prompt("EOM reason")
        interest(1)
    }
    field(I32INP, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("asynInt32 input")
        interest(2)
    }
    field(I32OUT, DBF_LONG) {
        prompt("asynInt32 output")
        interest(2)
        promptgroup("50 - Output")
        pp(TRUE)
    }
    field(UI32INP, DBF_ULONG) {
        prompt("asynUInt32Digital input")
        interest(2)
        special(SPC_NOMOD)
    }
    field(UI32OUT, DBF_ULONG) {
        interest(2)
        prompt("asynUInt32Digital output")
        pp(TRUE)
        promptgroup("50 - Output")
    }
    field(UI32MASK, DBF_ULONG) {
        special(SPC_MOD)
        promptgroup("50 - Output")
        initial("0xffffffff")
        interest(2)
        prompt("asynUInt32Digital mask")
    }
    field(F64INP, DBF_DOUBLE) {
        interest(2)
        prompt("asynFloat64 input")
        special(SPC_NOMOD)
    }
    field(F64OUT, DBF_DOUBLE) {
        interest(2)
        prompt("asynFloat64 output")
        pp(TRUE)
        promptgroup("50 - Output")
    }
    field(BAUD, DBF_MENU) {
        prompt("Baud rate")
        interest(2)
        special(SPC_MOD)
        promptgroup("40 - Input")
        menu(serialBAUD)
    }
    field(LBAUD, DBF_LONG) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(2)
        prompt("Baud rate")
    }
    field(PRTY, DBF_MENU) {
        interest(2)
        prompt("Parity")
        menu(serialPRTY)
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(DBIT, DBF_MENU) {
        interest(2)
        prompt("Data bits")
        menu(serialDBIT)
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(SBIT, DBF_MENU) {
        interest(2)
        prompt("Stop bits")
        menu(serialSBIT)
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(MCTL, DBF_MENU) {
        menu(serialMCTL)
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(2)
        prompt("Modem control")
    }
    field(FCTL, DBF_MENU) {
        prompt("Flow control")
        interest(2)
        special(SPC_MOD)
        promptgroup("40 - Input")
        menu(serialFCTL)
    }
    field(IXON, DBF_MENU) {
        prompt("Output XON/XOFF")
        interest(2)
        promptgroup("40 - Input")
        special(SPC_MOD)
        menu(serialIX)
    }
    field(IXOFF, DBF_MENU) {
        special(SPC_MOD)
        promptgroup("40 - Input")
        menu(serialIX)
        prompt("Input XON/XOFF")
        interest(2)
    }
    field(IXANY, DBF_MENU) {
        interest(2)
        prompt("XON=any character")
        menu(serialIX)
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(HOSTINFO, DBF_STRING) {
        prompt("host info")
        initial("")
        interest(1)
        special(SPC_MOD)
        promptgroup("40 - Input")
        size(40)
    }
    field(DRTO, DBF_MENU) {
        interest(2)
        prompt("Disconnect on timeout")
        menu(ipDRTO)
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(UCMD, DBF_MENU) {
        promptgroup("50 - Output")
        pp(TRUE)
        menu(gpibUCMD)
        prompt("Universal command")
        interest(2)
    }
    field(ACMD, DBF_MENU) {
        promptgroup("50 - Output")
        menu(gpibACMD)
        pp(TRUE)
        prompt("Addressed command")
        interest(2)
    }
    field(SPR, DBF_UCHAR) {
        prompt("Serial poll response")
        interest(2)
        special(SPC_NOMOD)
    }
    field(TMSK, DBF_LONG) {
        interest(1)
        prompt("Trace mask")
        special(SPC_MOD)
        promptgroup("80 - Display")
    }
    field(TB0, DBF_MENU) {
        menu(asynTRACE)
        promptgroup("80 - Display")
        special(SPC_MOD)
        interest(1)
        prompt("Trace error")
    }
    field(TB1, DBF_MENU) {
        prompt("Trace IO device")
        interest(1)
        special(SPC_MOD)
        promptgroup("80 - Display")
        menu(asynTRACE)
    }
    field(TB2, DBF_MENU) {
        prompt("Trace IO filter")
        interest(1)
        promptgroup("80 - Display")
        special(SPC_MOD)
        menu(asynTRACE)
    }
    field(TB3, DBF_MENU) {
        interest(1)
        prompt("Trace IO driver")
        menu(asynTRACE)
        special(SPC_MOD)
        promptgroup("80 - Display")
    }
    field(TB4, DBF_MENU) {
        interest(1)
        prompt("Trace flow")
        menu(asynTRACE)
        special(SPC_MOD)
        promptgroup("80 - Display")
    }
    field(TB5, DBF_MENU) {
        interest(1)
        prompt("Trace warning")
        menu(asynTRACE)
        promptgroup("80 - Display")
        special(SPC_MOD)
    }
    field(TIOM, DBF_LONG) {
        prompt("Trace I/O mask")
        interest(1)
        promptgroup("80 - Display")
        special(SPC_MOD)
    }
    field(TIB0, DBF_MENU) {
        special(SPC_MOD)
        promptgroup("80 - Display")
        menu(asynTRACE)
        prompt("Trace IO ASCII")
        interest(1)
    }
    field(TIB1, DBF_MENU) {
        menu(asynTRACE)
        promptgroup("80 - Display")
        special(SPC_MOD)
        interest(1)
        prompt("Trace IO escape")
    }
    field(TIB2, DBF_MENU) {
        promptgroup("80 - Display")
        special(SPC_MOD)
        menu(asynTRACE)
        prompt("Trace IO hex")
        interest(1)
    }
    field(TINM, DBF_LONG) {
        interest(1)
        prompt("Trace Info mask")
        special(SPC_MOD)
        promptgroup("80 - Display")
    }
    field(TINB0, DBF_MENU) {
        interest(1)
        prompt("Trace Info Time")
        menu(asynTRACE)
        special(SPC_MOD)
        promptgroup("80 - Display")
    }
    field(TINB1, DBF_MENU) {
        prompt("Trace Info Port")
        interest(1)
        promptgroup("80 - Display")
        special(SPC_MOD)
        menu(asynTRACE)
    }
    field(TINB2, DBF_MENU) {
        interest(1)
        prompt("Trace Info Source")
        menu(asynTRACE)
        special(SPC_MOD)
        promptgroup("80 - Display")
    }
    field(TINB3, DBF_MENU) {
        prompt("Trace Info Thread")
        interest(1)
        special(SPC_MOD)
        promptgroup("80 - Display")
        menu(asynTRACE)
    }
    field(TSIZ, DBF_LONG) {
        prompt("Trace IO truncate size")
        interest(1)
        promptgroup("80 - Display")
        special(SPC_MOD)
    }
    field(TFIL, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("80 - Display")
        interest(1)
        prompt("Trace IO file")
    }
    field(AUCT, DBF_MENU) {
        menu(asynAUTOCONNECT)
        special(SPC_MOD)
        promptgroup("40 - Input")
        interest(1)
        prompt("Autoconnect")
    }
    field(CNCT, DBF_MENU) {
        interest(1)
        prompt("Connect/Disconnect")
        menu(asynCONNECT)
        promptgroup("40 - Input")
        special(SPC_MOD)
    }
    field(ENBL, DBF_MENU) {
        interest(1)
        prompt("Enable/Disable")
        menu(asynENABLE)
        special(SPC_MOD)
        promptgroup("40 - Input")
    }
    field(ERRS, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("char *errs")
        interest(4)
        prompt("Error string")
    }
    field(AQR, DBF_UCHAR) {
        special(SPC_MOD)
        prompt("Abort queueRequest")
        interest(4)
    }
}
device(asyn, INST_IO, asynRecordDevice, "asynRecordDevice")
recordtype(sseq) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        prompt("Alarm Status")
        initial("UDF")
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Ack Severity")
        interest(2)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        interest(2)
        prompt("Lock Count")
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        initial("1")
        interest(1)
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Used to trigger")
        pp(TRUE)
    }
    field(SELM, DBF_MENU) {
        menu(sseqSELM)
        promptgroup("40 - Input")
        interest(1)
        prompt("Select Mechanism")
    }
    field(SELN, DBF_USHORT) {
        initial("1")
        interest(1)
        prompt("Link Selection")
    }
    field(SELL, DBF_INLINK) {
        interest(1)
        prompt("Link Selection Loc")
        promptgroup("40 - Input")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prompt("Display Precision")
        interest(1)
    }
    field(DLY1, DBF_DOUBLE) {
        interest(1)
        prompt("Delay 1")
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(DOL1, DBF_INLINK) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Input link1")
        interest(1)
    }
    field(DO1, DBF_DOUBLE) {
        interest(1)
        prompt("Constant input 1")
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
    }
    field(LNK1, DBF_OUTLINK) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Output Link 1")
        interest(1)
    }
    field(STR1, DBF_STRING) {
        size(40)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        interest(4)
        prompt("String value 1")
    }
    field(DT1, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT1, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("LNK link type")
    }
    field(WAIT1, DBF_MENU) {
        prompt("Wait for completion?")
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        menu(sseqWAIT)
    }
    field(WERR1, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG1, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX1, DBF_SHORT) {
        special(SPC_NOMOD)
        initial("0")
        interest(2)
    }
    field(DOL1V, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("DOL LINK Status")
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(LNK1V, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("LNK LINK Status")
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(DLY2, DBF_DOUBLE) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Delay 2")
        interest(1)
    }
    field(DOL2, DBF_INLINK) {
        prompt("Input link 2")
        interest(1)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
    }
    field(DO2, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        prompt("Constant input 2")
        interest(1)
    }
    field(LNK2, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 2")
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(STR2, DBF_STRING) {
        prompt("String value 2")
        interest(4)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        size(40)
    }
    field(DT2, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT2, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("LNK link type")
        interest(4)
    }
    field(WAIT2, DBF_MENU) {
        menu(sseqWAIT)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        interest(1)
        prompt("Wait for completion?")
    }
    field(WERR2, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(WTG2, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX2, DBF_SHORT) {
        initial("1")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DOL2V, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        prompt("DOL LINK Status")
        initial("1")
        interest(1)
    }
    field(LNK2V, DBF_MENU) {
        prompt("LNK LINK Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(DLY3, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Delay 3")
    }
    field(DOL3, DBF_INLINK) {
        interest(1)
        prompt("Input link 3")
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(DO3, DBF_DOUBLE) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Constant input 3")
        interest(1)
    }
    field(LNK3, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 3")
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(STR3, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        size(40)
        prompt("String value 3")
        interest(4)
    }
    field(DT3, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT3, DBF_SHORT) {
        prompt("LNK link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(WAIT3, DBF_MENU) {
        interest(1)
        prompt("Wait for completion?")
        menu(sseqWAIT)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
    }
    field(WERR3, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG3, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX3, DBF_SHORT) {
        initial("2")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DOL3V, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("DOL LINK Status")
        menu(sseqLNKV)
        special(SPC_NOMOD)
    }
    field(LNK3V, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        prompt("LNK LINK Status")
        initial("1")
        interest(1)
    }
    field(DLY4, DBF_DOUBLE) {
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
        interest(1)
        prompt("Delay 4")
    }
    field(DOL4, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        interest(1)
        prompt("Input link 4")
    }
    field(DO4, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        prompt("Constant input 4")
        interest(1)
    }
    field(LNK4, DBF_OUTLINK) {
        prompt("Output Link 4")
        interest(1)
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
    }
    field(STR4, DBF_STRING) {
        interest(4)
        prompt("String value 4")
        size(40)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
    }
    field(DT4, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("DOL link type")
        interest(4)
    }
    field(LT4, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("LNK link type")
    }
    field(WAIT4, DBF_MENU) {
        prompt("Wait for completion?")
        interest(1)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        menu(sseqWAIT)
    }
    field(WERR4, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG4, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX4, DBF_SHORT) {
        special(SPC_NOMOD)
        initial("3")
        interest(2)
    }
    field(DOL4V, DBF_MENU) {
        prompt("DOL LINK Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(LNK4V, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        prompt("LNK LINK Status")
        initial("1")
        interest(1)
    }
    field(DLY5, DBF_DOUBLE) {
        prompt("Delay 5")
        interest(1)
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
    }
    field(DOL5, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        prompt("Input link 5")
        interest(1)
    }
    field(DO5, DBF_DOUBLE) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        interest(1)
        prompt("Constant input 5")
    }
    field(LNK5, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        interest(1)
        prompt("Output Link 5")
    }
    field(STR5, DBF_STRING) {
        prompt("String value 5")
        interest(4)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        size(40)
    }
    field(DT5, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LT5, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("LNK link type")
    }
    field(WAIT5, DBF_MENU) {
        menu(sseqWAIT)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Wait for completion?")
    }
    field(WERR5, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(WTG5, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX5, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(2)
        initial("4")
    }
    field(DOL5V, DBF_MENU) {
        prompt("DOL LINK Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(LNK5V, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        prompt("LNK LINK Status")
        initial("1")
        interest(1)
    }
    field(DLY6, DBF_DOUBLE) {
        interest(1)
        prompt("Delay 6")
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
    }
    field(DOL6, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("52 - Output (2)")
        prompt("Input link 6")
        interest(1)
    }
    field(DO6, DBF_DOUBLE) {
        interest(1)
        prompt("Constant input 6")
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
    }
    field(LNK6, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 6")
        promptgroup("52 - Output (2)")
        special(SPC_MOD)
    }
    field(STR6, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(4)
        prompt("String value 6")
    }
    field(DT6, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("DOL link type")
        interest(4)
    }
    field(LT6, DBF_SHORT) {
        interest(4)
        prompt("LNK link type")
        special(SPC_NOMOD)
    }
    field(WAIT6, DBF_MENU) {
        prompt("Wait for completion?")
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        menu(sseqWAIT)
    }
    field(WERR6, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(WTG6, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX6, DBF_SHORT) {
        interest(2)
        initial("5")
        special(SPC_NOMOD)
    }
    field(DOL6V, DBF_MENU) {
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("DOL LINK Status")
    }
    field(LNK6V, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(DLY7, DBF_DOUBLE) {
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        prompt("Delay 7")
        interest(1)
    }
    field(DOL7, DBF_INLINK) {
        prompt("Input link 7")
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
    }
    field(DO7, DBF_DOUBLE) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(1)
        prompt("Constant input 7")
    }
    field(LNK7, DBF_OUTLINK) {
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        prompt("Output Link 7")
        interest(1)
    }
    field(STR7, DBF_STRING) {
        size(40)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        interest(4)
        prompt("String value 7")
    }
    field(DT7, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("DOL link type")
        interest(4)
    }
    field(LT7, DBF_SHORT) {
        interest(4)
        prompt("LNK link type")
        special(SPC_NOMOD)
    }
    field(WAIT7, DBF_MENU) {
        menu(sseqWAIT)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        interest(1)
        prompt("Wait for completion?")
    }
    field(WERR7, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG7, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX7, DBF_SHORT) {
        initial("6")
        interest(2)
        special(SPC_NOMOD)
    }
    field(DOL7V, DBF_MENU) {
        prompt("DOL LINK Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(LNK7V, DBF_MENU) {
        menu(sseqLNKV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("LNK LINK Status")
    }
    field(DLY8, DBF_DOUBLE) {
        interest(1)
        prompt("Delay 8")
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
    }
    field(DOL8, DBF_INLINK) {
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        interest(1)
        prompt("Input link 8")
    }
    field(DO8, DBF_DOUBLE) {
        interest(1)
        prompt("Constant input 8")
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(LNK8, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 8")
        special(SPC_MOD)
        promptgroup("53 - Output (3)")
    }
    field(STR8, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        size(40)
        prompt("String value 8")
        interest(4)
    }
    field(DT8, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("DOL link type")
    }
    field(LT8, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("LNK link type")
    }
    field(WAIT8, DBF_MENU) {
        prompt("Wait for completion?")
        interest(1)
        special(SPC_MOD)
        promptgroup("51 - Output (1)")
        menu(sseqWAIT)
    }
    field(WERR8, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(WTG8, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(IX8, DBF_SHORT) {
        interest(2)
        initial("7")
        special(SPC_NOMOD)
    }
    field(DOL8V, DBF_MENU) {
        prompt("DOL LINK Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(LNK8V, DBF_MENU) {
        menu(sseqLNKV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("LNK LINK Status")
    }
    field(DLY9, DBF_DOUBLE) {
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
        prompt("Delay 9")
        interest(1)
    }
    field(DOL9, DBF_INLINK) {
        interest(1)
        prompt("Input link 9")
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
    }
    field(DO9, DBF_DOUBLE) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        prompt("Constant input 9")
        interest(1)
    }
    field(LNK9, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link 9")
        special(SPC_MOD)
        promptgroup("53 - Output (3)")
    }
    field(STR9, DBF_STRING) {
        size(40)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        interest(4)
        prompt("String value 9")
    }
    field(DT9, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("DOL link type")
        interest(4)
    }
    field(LT9, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(4)
        prompt("LNK link type")
    }
    field(WAIT9, DBF_MENU) {
        prompt("Wait for completion?")
        interest(1)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        menu(sseqWAIT)
    }
    field(WERR9, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(WTG9, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
    }
    field(IX9, DBF_SHORT) {
        special(SPC_NOMOD)
        initial("8")
        interest(2)
    }
    field(DOL9V, DBF_MENU) {
        special(SPC_NOMOD)
        menu(sseqLNKV)
        prompt("DOL LINK Status")
        initial("1")
        interest(1)
    }
    field(LNK9V, DBF_MENU) {
        menu(sseqLNKV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("LNK LINK Status")
    }
    field(DLYA, DBF_DOUBLE) {
        prompt("Delay 10")
        interest(1)
        promptgroup("53 - Output (3)")
        special(SPC_MOD)
    }
    field(DOLA, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("53 - Output (3)")
        interest(1)
        prompt("Input link 10")
    }
    field(DOA, DBF_DOUBLE) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        interest(1)
        prompt("Constant input 10")
    }
    field(LNKA, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("53 - Output (3)")
        interest(1)
        prompt("Output Link 10")
    }
    field(STRA, DBF_STRING) {
        interest(4)
        prompt("String value A")
        size(40)
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
    }
    field(DTA, DBF_SHORT) {
        prompt("DOL link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(LTA, DBF_SHORT) {
        prompt("LNK link type")
        interest(4)
        special(SPC_NOMOD)
    }
    field(WAITA, DBF_MENU) {
        promptgroup("51 - Output (1)")
        special(SPC_MOD)
        menu(sseqWAIT)
        prompt("Wait for completion?")
        interest(1)
    }
    field(WERRA, DBF_SHORT) {
        interest(1)
        special(SPC_NOMOD)
    }
    field(WTGA, DBF_SHORT) {
        interest(1)
    }
    field(IXA, DBF_SHORT) {
        interest(2)
        initial("9")
    }
    field(DOLAV, DBF_MENU) {
        prompt("DOL LINK Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(LNKAV, DBF_MENU) {
        prompt("LNK LINK Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(sseqLNKV)
    }
    field(ABORT, DBF_SHORT) {
        special(SPC_MOD)
        prompt("Abort sequence")
        interest(1)
    }
    field(ABORTING, DBF_SHORT) {
        prompt("Aborting")
        interest(1)
        special(SPC_MOD)
    }
    field(BUSY, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Sequence active")
    }
}
recordtype(aSub) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %struct aSubRecord;
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        prompt("Device Type")
        interest(1)
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_LONG) {
        asl(ASL0)
        prompt("Subr. return value")
    }
    field(OVAL, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Old return value")
    }
    field(INAM, DBF_STRING) {
        interest(1)
        prompt("Initialize Subr. Name")
        size(41)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(LFLG, DBF_MENU) {
        interest(1)
        prompt("Subr. Input Enable")
        menu(aSubLFLG)
        promptgroup("30 - Action")
    }
    field(SUBL, DBF_INLINK) {
        interest(1)
        prompt("Subroutine Name Link")
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(SNAM, DBF_STRING) {
        size(41)
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        prompt("Process Subr. Name")
    }
    field(ONAM, DBF_STRING) {
        size(41)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        interest(3)
        prompt("Old Subr. Name")
    }
    field(SADR, DBF_NOACCESS) {
        interest(2)
        prompt("Subroutine Address")
        special(SPC_NOMOD)
        extra("long (*sadr)(struct aSubRecord *)")
    }
    field(CADR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void (*cadr)(struct aSubRecord *)")
        prompt("Subroutine Cleanup Address")
        interest(2)
    }
    field(BRSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Bad Return Severity")
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        prop(YES)
        interest(1)
        promptgroup("80 - Display")
    }
    field(EFLG, DBF_MENU) {
        promptgroup("50 - Output")
        menu(aSubEFLG)
        prompt("Output Event Flag")
        interest(1)
        initial("1")
    }
    field(INPA, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Input Link A")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        interest(1)
        prompt("Input Link B")
    }
    field(INPC, DBF_INLINK) {
        interest(1)
        prompt("Input Link C")
        promptgroup("41 - Input A-G")
    }
    field(INPD, DBF_INLINK) {
        prompt("Input Link D")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-G")
        prompt("Input Link E")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        interest(1)
        prompt("Input Link F")
        promptgroup("41 - Input A-G")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input Link G")
        interest(1)
        promptgroup("41 - Input A-G")
    }
    field(INPH, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        prompt("Input Link H")
        interest(1)
    }
    field(INPI, DBF_INLINK) {
        prompt("Input Link I")
        interest(1)
        promptgroup("42 - Input H-N")
    }
    field(INPJ, DBF_INLINK) {
        interest(1)
        prompt("Input Link J")
        promptgroup("42 - Input H-N")
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link K")
    }
    field(INPL, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        prompt("Input Link L")
        interest(1)
    }
    field(INPM, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link M")
    }
    field(INPN, DBF_INLINK) {
        promptgroup("42 - Input H-N")
        interest(1)
        prompt("Input Link N")
    }
    field(INPO, DBF_INLINK) {
        promptgroup("43 - Input O-U")
        prompt("Input Link O")
        interest(1)
    }
    field(INPP, DBF_INLINK) {
        interest(1)
        prompt("Input Link P")
        promptgroup("43 - Input O-U")
    }
    field(INPQ, DBF_INLINK) {
        prompt("Input Link Q")
        interest(1)
        promptgroup("43 - Input O-U")
    }
    field(INPR, DBF_INLINK) {
        interest(1)
        prompt("Input Link R")
        promptgroup("43 - Input O-U")
    }
    field(INPS, DBF_INLINK) {
        prompt("Input Link S")
        interest(1)
        promptgroup("43 - Input O-U")
    }
    field(INPT, DBF_INLINK) {
        interest(1)
        prompt("Input Link T")
        promptgroup("43 - Input O-U")
    }
    field(INPU, DBF_INLINK) {
        interest(1)
        prompt("Input Link U")
        promptgroup("43 - Input O-U")
    }
    field(A, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Input value A")
        extra("void *a")
        special(SPC_DBADDR)
    }
    field(B, DBF_NOACCESS) {
        extra("void *b")
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Input value B")
    }
    field(C, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        prompt("Input value C")
        special(SPC_DBADDR)
        extra("void *c")
    }
    field(D, DBF_NOACCESS) {
        extra("void *d")
        special(SPC_DBADDR)
        prompt("Input value D")
        interest(2)
        asl(ASL0)
    }
    field(E, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *e")
        asl(ASL0)
        interest(2)
        prompt("Input value E")
    }
    field(F, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *f")
        prompt("Input value F")
        asl(ASL0)
        interest(2)
    }
    field(G, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Input value G")
        extra("void *g")
        special(SPC_DBADDR)
    }
    field(H, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *h")
        asl(ASL0)
        interest(2)
        prompt("Input value H")
    }
    field(I, DBF_NOACCESS) {
        prompt("Input value I")
        interest(2)
        asl(ASL0)
        extra("void *i")
        special(SPC_DBADDR)
    }
    field(J, DBF_NOACCESS) {
        prompt("Input value J")
        interest(2)
        asl(ASL0)
        extra("void *j")
        special(SPC_DBADDR)
    }
    field(K, DBF_NOACCESS) {
        prompt("Input value K")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *k")
    }
    field(L, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *l")
        prompt("Input value L")
        asl(ASL0)
        interest(2)
    }
    field(M, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        prompt("Input value M")
        special(SPC_DBADDR)
        extra("void *m")
    }
    field(N, DBF_NOACCESS) {
        extra("void *n")
        special(SPC_DBADDR)
        prompt("Input value N")
        interest(2)
        asl(ASL0)
    }
    field(O, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *o")
        prompt("Input value O")
        asl(ASL0)
        interest(2)
    }
    field(P, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *p")
        prompt("Input value P")
        asl(ASL0)
        interest(2)
    }
    field(Q, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Input value Q")
        extra("void *q")
        special(SPC_DBADDR)
    }
    field(R, DBF_NOACCESS) {
        prompt("Input value R")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *r")
    }
    field(S, DBF_NOACCESS) {
        extra("void *s")
        special(SPC_DBADDR)
        prompt("Input value S")
        interest(2)
        asl(ASL0)
    }
    field(T, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        prompt("Input value T")
        special(SPC_DBADDR)
        extra("void *t")
    }
    field(U, DBF_NOACCESS) {
        prompt("Input value U")
        interest(2)
        asl(ASL0)
        extra("void *u")
        special(SPC_DBADDR)
    }
    field(FTA, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        interest(1)
        initial("DOUBLE")
        prompt("Type of A")
    }
    field(FTB, DBF_MENU) {
        initial("DOUBLE")
        interest(1)
        prompt("Type of B")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
    }
    field(FTC, DBF_MENU) {
        initial("DOUBLE")
        interest(1)
        prompt("Type of C")
        menu(menuFtype)
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
    }
    field(FTD, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        menu(menuFtype)
        prompt("Type of D")
        interest(1)
        initial("DOUBLE")
    }
    field(FTE, DBF_MENU) {
        prompt("Type of E")
        initial("DOUBLE")
        interest(1)
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTF, DBF_MENU) {
        prompt("Type of F")
        initial("DOUBLE")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        menu(menuFtype)
    }
    field(FTG, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        menu(menuFtype)
        prompt("Type of G")
        interest(1)
        initial("DOUBLE")
    }
    field(FTH, DBF_MENU) {
        initial("DOUBLE")
        interest(1)
        prompt("Type of H")
        menu(menuFtype)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(FTI, DBF_MENU) {
        menu(menuFtype)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of I")
    }
    field(FTJ, DBF_MENU) {
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of J")
        interest(1)
        initial("DOUBLE")
    }
    field(FTK, DBF_MENU) {
        prompt("Type of K")
        interest(1)
        initial("DOUBLE")
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
    }
    field(FTL, DBF_MENU) {
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of L")
        initial("DOUBLE")
        interest(1)
    }
    field(FTM, DBF_MENU) {
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of M")
        initial("DOUBLE")
        interest(1)
    }
    field(FTN, DBF_MENU) {
        interest(1)
        initial("DOUBLE")
        prompt("Type of N")
        menu(menuFtype)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(FTO, DBF_MENU) {
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of O")
        initial("DOUBLE")
        interest(1)
    }
    field(FTP, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        menu(menuFtype)
        prompt("Type of P")
        interest(1)
        initial("DOUBLE")
    }
    field(FTQ, DBF_MENU) {
        initial("DOUBLE")
        interest(1)
        prompt("Type of Q")
        menu(menuFtype)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
    }
    field(FTR, DBF_MENU) {
        menu(menuFtype)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        initial("DOUBLE")
        interest(1)
        prompt("Type of R")
    }
    field(FTS, DBF_MENU) {
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of S")
        interest(1)
        initial("DOUBLE")
    }
    field(FTT, DBF_MENU) {
        menu(menuFtype)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of T")
    }
    field(FTU, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        menu(menuFtype)
        prompt("Type of U")
        interest(1)
        initial("DOUBLE")
    }
    field(NOA, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Max. elements in A")
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
    }
    field(NOB, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        initial("1")
        interest(1)
        prompt("Max. elements in B")
    }
    field(NOC, DBF_ULONG) {
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
        prompt("Max. elements in C")
        interest(1)
        initial("1")
    }
    field(NOD, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        prompt("Max. elements in D")
        initial("1")
        interest(1)
    }
    field(NOE, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("41 - Input A-G")
        prompt("Max. elements in E")
        interest(1)
        initial("1")
    }
    field(NOF, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Max. elements in F")
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
    }
    field(NOG, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Max. elements in G")
        promptgroup("41 - Input A-G")
        special(SPC_NOMOD)
    }
    field(NOH, DBF_ULONG) {
        prompt("Max. elements in H")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
    }
    field(NOI, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
        initial("1")
        interest(1)
        prompt("Max. elements in I")
    }
    field(NOJ, DBF_ULONG) {
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        prompt("Max. elements in J")
        initial("1")
        interest(1)
    }
    field(NOK, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Max. elements in K")
        special(SPC_NOMOD)
        promptgroup("42 - Input H-N")
    }
    field(NOL, DBF_ULONG) {
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
        prompt("Max. elements in L")
        interest(1)
        initial("1")
    }
    field(NOM, DBF_ULONG) {
        prompt("Max. elements in M")
        initial("1")
        interest(1)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(NON, DBF_ULONG) {
        prompt("Max. elements in N")
        initial("1")
        interest(1)
        promptgroup("42 - Input H-N")
        special(SPC_NOMOD)
    }
    field(NOO, DBF_ULONG) {
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        prompt("Max. elements in O")
        interest(1)
        initial("1")
    }
    field(NOP, DBF_ULONG) {
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
        prompt("Max. elements in P")
        interest(1)
        initial("1")
    }
    field(NOQ, DBF_ULONG) {
        prompt("Max. elements in Q")
        initial("1")
        interest(1)
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
    }
    field(NOR, DBF_ULONG) {
        prompt("Max. elements in R")
        interest(1)
        initial("1")
        promptgroup("43 - Input O-U")
        special(SPC_NOMOD)
    }
    field(NOS, DBF_ULONG) {
        prompt("Max. elements in S")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
    }
    field(NOT, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
        prompt("Max. elements in T")
        initial("1")
        interest(1)
    }
    field(NOU, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Max. elements in U")
        special(SPC_NOMOD)
        promptgroup("43 - Input O-U")
    }
    field(NEA, DBF_ULONG) {
        prompt("Num. elements in A")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEB, DBF_ULONG) {
        initial("1")
        interest(3)
        prompt("Num. elements in B")
        special(SPC_NOMOD)
    }
    field(NEC, DBF_ULONG) {
        initial("1")
        interest(3)
        prompt("Num. elements in C")
        special(SPC_NOMOD)
    }
    field(NED, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in D")
        interest(3)
        initial("1")
    }
    field(NEE, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in E")
    }
    field(NEF, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in F")
        initial("1")
        interest(3)
    }
    field(NEG, DBF_ULONG) {
        prompt("Num. elements in G")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEH, DBF_ULONG) {
        initial("1")
        interest(3)
        prompt("Num. elements in H")
        special(SPC_NOMOD)
    }
    field(NEI, DBF_ULONG) {
        initial("1")
        interest(3)
        prompt("Num. elements in I")
        special(SPC_NOMOD)
    }
    field(NEJ, DBF_ULONG) {
        prompt("Num. elements in J")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEK, DBF_ULONG) {
        prompt("Num. elements in K")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEL, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in L")
        initial("1")
        interest(3)
    }
    field(NEM, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in M")
    }
    field(NEN, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in N")
    }
    field(NEO, DBF_ULONG) {
        prompt("Num. elements in O")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEP, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in P")
    }
    field(NEQ, DBF_ULONG) {
        prompt("Num. elements in Q")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NER, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in R")
        initial("1")
        interest(3)
    }
    field(NES, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in S")
        initial("1")
        interest(3)
    }
    field(NET, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in T")
    }
    field(NEU, DBF_ULONG) {
        initial("1")
        interest(3)
        prompt("Num. elements in U")
        special(SPC_NOMOD)
    }
    field(OUTA, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        interest(1)
        prompt("Output Link A")
    }
    field(OUTB, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link B")
        promptgroup("51 - Output A-G")
    }
    field(OUTC, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        interest(1)
        prompt("Output Link C")
    }
    field(OUTD, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        prompt("Output Link D")
        interest(1)
    }
    field(OUTE, DBF_OUTLINK) {
        promptgroup("51 - Output A-G")
        interest(1)
        prompt("Output Link E")
    }
    field(OUTF, DBF_OUTLINK) {
        prompt("Output Link F")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTG, DBF_OUTLINK) {
        prompt("Output Link G")
        interest(1)
        promptgroup("51 - Output A-G")
    }
    field(OUTH, DBF_OUTLINK) {
        prompt("Output Link H")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTI, DBF_OUTLINK) {
        prompt("Output Link I")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTJ, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link J")
        promptgroup("52 - Output H-N")
    }
    field(OUTK, DBF_OUTLINK) {
        prompt("Output Link K")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTL, DBF_OUTLINK) {
        prompt("Output Link L")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTM, DBF_OUTLINK) {
        promptgroup("52 - Output H-N")
        interest(1)
        prompt("Output Link M")
    }
    field(OUTN, DBF_OUTLINK) {
        prompt("Output Link N")
        interest(1)
        promptgroup("52 - Output H-N")
    }
    field(OUTO, DBF_OUTLINK) {
        promptgroup("53 - Output O-U")
        prompt("Output Link O")
        interest(1)
    }
    field(OUTP, DBF_OUTLINK) {
        promptgroup("53 - Output O-U")
        interest(1)
        prompt("Output Link P")
    }
    field(OUTQ, DBF_OUTLINK) {
        promptgroup("53 - Output O-U")
        prompt("Output Link Q")
        interest(1)
    }
    field(OUTR, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link R")
        promptgroup("53 - Output O-U")
    }
    field(OUTS, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link S")
        promptgroup("53 - Output O-U")
    }
    field(OUTT, DBF_OUTLINK) {
        promptgroup("53 - Output O-U")
        interest(1)
        prompt("Output Link T")
    }
    field(OUTU, DBF_OUTLINK) {
        interest(1)
        prompt("Output Link U")
        promptgroup("53 - Output O-U")
    }
    field(VALA, DBF_NOACCESS) {
        extra("void *vala")
        special(SPC_DBADDR)
        prompt("Output value A")
        interest(2)
        asl(ASL0)
    }
    field(VALB, DBF_NOACCESS) {
        prompt("Output value B")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *valb")
    }
    field(VALC, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *valc")
        prompt("Output value C")
        asl(ASL0)
        interest(2)
    }
    field(VALD, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Output value D")
        extra("void *vald")
        special(SPC_DBADDR)
    }
    field(VALE, DBF_NOACCESS) {
        extra("void *vale")
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Output value E")
    }
    field(VALF, DBF_NOACCESS) {
        prompt("Output value F")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *valf")
    }
    field(VALG, DBF_NOACCESS) {
        extra("void *valg")
        special(SPC_DBADDR)
        prompt("Output value G")
        interest(2)
        asl(ASL0)
    }
    field(VALH, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *valh")
        prompt("Output value H")
        asl(ASL0)
        interest(2)
    }
    field(VALI, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Output value I")
        extra("void *vali")
        special(SPC_DBADDR)
    }
    field(VALJ, DBF_NOACCESS) {
        asl(ASL0)
        interest(2)
        prompt("Output value J")
        special(SPC_DBADDR)
        extra("void *valj")
    }
    field(VALK, DBF_NOACCESS) {
        prompt("Output value K")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *valk")
    }
    field(VALL, DBF_NOACCESS) {
        extra("void *vall")
        special(SPC_DBADDR)
        prompt("Output value L")
        interest(2)
        asl(ASL0)
    }
    field(VALM, DBF_NOACCESS) {
        prompt("Output value M")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *valm")
    }
    field(VALN, DBF_NOACCESS) {
        extra("void *valn")
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Output value N")
    }
    field(VALO, DBF_NOACCESS) {
        interest(2)
        asl(ASL0)
        prompt("Output value O")
        extra("void *valo")
        special(SPC_DBADDR)
    }
    field(VALP, DBF_NOACCESS) {
        prompt("Output value P")
        interest(2)
        asl(ASL0)
        extra("void *valp")
        special(SPC_DBADDR)
    }
    field(VALQ, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *valq")
        asl(ASL0)
        interest(2)
        prompt("Output value Q")
    }
    field(VALR, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("void *valr")
        asl(ASL0)
        interest(2)
        prompt("Output value R")
    }
    field(VALS, DBF_NOACCESS) {
        prompt("Output value S")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *vals")
    }
    field(VALT, DBF_NOACCESS) {
        extra("void *valt")
        special(SPC_DBADDR)
        interest(2)
        asl(ASL0)
        prompt("Output value T")
    }
    field(VALU, DBF_NOACCESS) {
        prompt("Output value U")
        asl(ASL0)
        interest(2)
        special(SPC_DBADDR)
        extra("void *valu")
    }
    field(OVLA, DBF_NOACCESS) {
        asl(ASL0)
        interest(4)
        prompt("Old Output A")
        special(SPC_NOMOD)
        extra("void *ovla")
    }
    field(OVLB, DBF_NOACCESS) {
        extra("void *ovlb")
        special(SPC_NOMOD)
        prompt("Old Output B")
        interest(4)
        asl(ASL0)
    }
    field(OVLC, DBF_NOACCESS) {
        extra("void *ovlc")
        special(SPC_NOMOD)
        interest(4)
        asl(ASL0)
        prompt("Old Output C")
    }
    field(OVLD, DBF_NOACCESS) {
        prompt("Old Output D")
        interest(4)
        asl(ASL0)
        extra("void *ovld")
        special(SPC_NOMOD)
    }
    field(OVLE, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovle")
        asl(ASL0)
        interest(4)
        prompt("Old Output E")
    }
    field(OVLF, DBF_NOACCESS) {
        prompt("Old Output F")
        asl(ASL0)
        interest(4)
        special(SPC_NOMOD)
        extra("void *ovlf")
    }
    field(OVLG, DBF_NOACCESS) {
        prompt("Old Output G")
        asl(ASL0)
        interest(4)
        special(SPC_NOMOD)
        extra("void *ovlg")
    }
    field(OVLH, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        prompt("Old Output H")
        extra("void *ovlh")
        special(SPC_NOMOD)
    }
    field(OVLI, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        prompt("Old Output I")
        extra("void *ovli")
        special(SPC_NOMOD)
    }
    field(OVLJ, DBF_NOACCESS) {
        prompt("Old Output J")
        interest(4)
        asl(ASL0)
        extra("void *ovlj")
        special(SPC_NOMOD)
    }
    field(OVLK, DBF_NOACCESS) {
        prompt("Old Output K")
        asl(ASL0)
        interest(4)
        special(SPC_NOMOD)
        extra("void *ovlk")
    }
    field(OVLL, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovll")
        prompt("Old Output L")
        asl(ASL0)
        interest(4)
    }
    field(OVLM, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlm")
        prompt("Old Output M")
        asl(ASL0)
        interest(4)
    }
    field(OVLN, DBF_NOACCESS) {
        prompt("Old Output N")
        asl(ASL0)
        interest(4)
        special(SPC_NOMOD)
        extra("void *ovln")
    }
    field(OVLO, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        prompt("Old Output O")
        extra("void *ovlo")
        special(SPC_NOMOD)
    }
    field(OVLP, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        prompt("Old Output P")
        extra("void *ovlp")
        special(SPC_NOMOD)
    }
    field(OVLQ, DBF_NOACCESS) {
        extra("void *ovlq")
        special(SPC_NOMOD)
        prompt("Old Output Q")
        interest(4)
        asl(ASL0)
    }
    field(OVLR, DBF_NOACCESS) {
        interest(4)
        asl(ASL0)
        prompt("Old Output R")
        extra("void *ovlr")
        special(SPC_NOMOD)
    }
    field(OVLS, DBF_NOACCESS) {
        extra("void *ovls")
        special(SPC_NOMOD)
        interest(4)
        asl(ASL0)
        prompt("Old Output S")
    }
    field(OVLT, DBF_NOACCESS) {
        asl(ASL0)
        interest(4)
        prompt("Old Output T")
        special(SPC_NOMOD)
        extra("void *ovlt")
    }
    field(OVLU, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *ovlu")
        asl(ASL0)
        interest(4)
        prompt("Old Output U")
    }
    field(FTVA, DBF_MENU) {
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALA")
        menu(menuFtype)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
    }
    field(FTVB, DBF_MENU) {
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALB")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
    }
    field(FTVC, DBF_MENU) {
        prompt("Type of VALC")
        interest(1)
        initial("DOUBLE")
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
        menu(menuFtype)
    }
    field(FTVD, DBF_MENU) {
        initial("DOUBLE")
        interest(1)
        prompt("Type of VALD")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
    }
    field(FTVE, DBF_MENU) {
        menu(menuFtype)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALE")
    }
    field(FTVF, DBF_MENU) {
        menu(menuFtype)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALF")
    }
    field(FTVG, DBF_MENU) {
        menu(menuFtype)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALG")
    }
    field(FTVH, DBF_MENU) {
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALH")
        menu(menuFtype)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
    }
    field(FTVI, DBF_MENU) {
        prompt("Type of VALI")
        initial("DOUBLE")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        menu(menuFtype)
    }
    field(FTVJ, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        menu(menuFtype)
        prompt("Type of VALJ")
        initial("DOUBLE")
        interest(1)
    }
    field(FTVK, DBF_MENU) {
        menu(menuFtype)
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALK")
    }
    field(FTVL, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        menu(menuFtype)
        prompt("Type of VALL")
        interest(1)
        initial("DOUBLE")
    }
    field(FTVM, DBF_MENU) {
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of VALM")
        interest(1)
        initial("DOUBLE")
    }
    field(FTVN, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        initial("DOUBLE")
        interest(1)
        prompt("Type of VALN")
    }
    field(FTVO, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALO")
    }
    field(FTVP, DBF_MENU) {
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALP")
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
    }
    field(FTVQ, DBF_MENU) {
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of VALQ")
        interest(1)
        initial("DOUBLE")
    }
    field(FTVR, DBF_MENU) {
        menu(menuFtype)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        initial("DOUBLE")
        interest(1)
        prompt("Type of VALR")
    }
    field(FTVS, DBF_MENU) {
        menu(menuFtype)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALS")
    }
    field(FTVT, DBF_MENU) {
        menu(menuFtype)
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        interest(1)
        initial("DOUBLE")
        prompt("Type of VALT")
    }
    field(FTVU, DBF_MENU) {
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        menu(menuFtype)
        prompt("Type of VALU")
        initial("DOUBLE")
        interest(1)
    }
    field(NOVA, DBF_ULONG) {
        prompt("Max. elements in VALA")
        initial("1")
        interest(1)
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
    }
    field(NOVB, DBF_ULONG) {
        interest(1)
        initial("1")
        prompt("Max. elements in VALB")
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
    }
    field(NOVC, DBF_ULONG) {
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        prompt("Max. elements in VALC")
        interest(1)
        initial("1")
    }
    field(NOVD, DBF_ULONG) {
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
        prompt("Max. elements in VALD")
        interest(1)
        initial("1")
    }
    field(NOVE, DBF_ULONG) {
        prompt("Max. elements in VALE")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        promptgroup("51 - Output A-G")
    }
    field(NOVF, DBF_ULONG) {
        interest(1)
        initial("1")
        prompt("Max. elements in VALF")
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
    }
    field(NOVG, DBF_ULONG) {
        initial("1")
        interest(1)
        prompt("Max. elements in VALG")
        promptgroup("51 - Output A-G")
        special(SPC_NOMOD)
    }
    field(NOVH, DBF_ULONG) {
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        prompt("Max. elements in VAlH")
        initial("1")
        interest(1)
    }
    field(NOVI, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
        prompt("Max. elements in VALI")
        interest(1)
        initial("1")
    }
    field(NOVJ, DBF_ULONG) {
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        prompt("Max. elements in VALJ")
        initial("1")
        interest(1)
    }
    field(NOVK, DBF_ULONG) {
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("Max. elements in VALK")
    }
    field(NOVL, DBF_ULONG) {
        prompt("Max. elements in VALL")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        promptgroup("52 - Output H-N")
    }
    field(NOVM, DBF_ULONG) {
        interest(1)
        initial("1")
        prompt("Max. elements in VALM")
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
    }
    field(NOVN, DBF_ULONG) {
        promptgroup("52 - Output H-N")
        special(SPC_NOMOD)
        prompt("Max. elements in VALN")
        initial("1")
        interest(1)
    }
    field(NOVO, DBF_ULONG) {
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("Max. elements in VALO")
    }
    field(NOVP, DBF_ULONG) {
        prompt("Max. elements in VALP")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
    }
    field(NOVQ, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        initial("1")
        interest(1)
        prompt("Max. elements in VALQ")
    }
    field(NOVR, DBF_ULONG) {
        promptgroup("53 - Output O-U")
        special(SPC_NOMOD)
        prompt("Max. elements in VALR")
        initial("1")
        interest(1)
    }
    field(NOVS, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        prompt("Max. elements in VALS")
        interest(1)
        initial("1")
    }
    field(NOVT, DBF_ULONG) {
        prompt("Max. elements in VALT")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
    }
    field(NOVU, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("53 - Output O-U")
        interest(1)
        initial("1")
        prompt("Max. elements in VALU")
    }
    field(NEVA, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALA")
        special(SPC_NOMOD)
    }
    field(NEVB, DBF_ULONG) {
        initial("1")
        interest(3)
        prompt("Num. elements in VALB")
        special(SPC_NOMOD)
    }
    field(NEVC, DBF_ULONG) {
        prompt("Num. elements in VALC")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEVD, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in VALD")
    }
    field(NEVE, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VALE")
        interest(3)
        initial("1")
    }
    field(NEVF, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in VALF")
    }
    field(NEVG, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VALG")
        initial("1")
        interest(3)
    }
    field(NEVH, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VAlH")
        initial("1")
        interest(3)
    }
    field(NEVI, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in VALI")
    }
    field(NEVJ, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in VALJ")
    }
    field(NEVK, DBF_ULONG) {
        interest(3)
        initial("1")
        prompt("Num. elements in VALK")
        special(SPC_NOMOD)
    }
    field(NEVL, DBF_ULONG) {
        prompt("Num. elements in VALL")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEVM, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in VALM")
    }
    field(NEVN, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(3)
        prompt("Num. elements in VALN")
    }
    field(NEVO, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VALO")
        interest(3)
        initial("1")
    }
    field(NEVP, DBF_ULONG) {
        prompt("Num. elements in VALP")
        initial("1")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NEVQ, DBF_ULONG) {
        prompt("Num. elements in VALQ")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEVR, DBF_ULONG) {
        prompt("Num. elements in VALR")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(NEVS, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in VALS")
        initial("1")
        interest(3)
    }
    field(NEVT, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        initial("1")
        prompt("Num. elements in VALT")
    }
    field(NEVU, DBF_ULONG) {
        prompt("Num. elements in VALU")
        interest(3)
        initial("1")
        special(SPC_NOMOD)
    }
    field(ONVA, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLA")
        initial("1")
        interest(4)
    }
    field(ONVB, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLB")
    }
    field(ONVC, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLC")
    }
    field(ONVD, DBF_ULONG) {
        prompt("Num. elements in OVLD")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVE, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLE")
    }
    field(ONVF, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLF")
        special(SPC_NOMOD)
    }
    field(ONVG, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLG")
        initial("1")
        interest(4)
    }
    field(ONVH, DBF_ULONG) {
        prompt("Num. elements in VAlH")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVI, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLI")
        interest(4)
        initial("1")
    }
    field(ONVJ, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLJ")
        special(SPC_NOMOD)
    }
    field(ONVK, DBF_ULONG) {
        initial("1")
        interest(4)
        prompt("Num. elements in OVLK")
        special(SPC_NOMOD)
    }
    field(ONVL, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLL")
        special(SPC_NOMOD)
    }
    field(ONVM, DBF_ULONG) {
        prompt("Num. elements in OVLM")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVN, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLN")
    }
    field(ONVO, DBF_ULONG) {
        special(SPC_NOMOD)
        initial("1")
        interest(4)
        prompt("Num. elements in OVLO")
    }
    field(ONVP, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLP")
        interest(4)
        initial("1")
    }
    field(ONVQ, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLQ")
        interest(4)
        initial("1")
    }
    field(ONVR, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Num. elements in OVLR")
        initial("1")
        interest(4)
    }
    field(ONVS, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(4)
        initial("1")
        prompt("Num. elements in OVLS")
    }
    field(ONVT, DBF_ULONG) {
        prompt("Num. elements in OVLT")
        initial("1")
        interest(4)
        special(SPC_NOMOD)
    }
    field(ONVU, DBF_ULONG) {
        interest(4)
        initial("1")
        prompt("Num. elements in OVLU")
        special(SPC_NOMOD)
    }
}
recordtype(sel) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        size(41)
        promptgroup("10 - Common")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        prompt("Time Stamp Event")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Severity")
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        interest(4)
        prompt("Access Security Pvt")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        extra("char                bkpt")
        special(SPC_NOMOD)
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        initial("1")
        interest(1)
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("40 - Input")
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("Result")
    }
    field(SELM, DBF_MENU) {
        promptgroup("30 - Action")
        menu(selSELM)
        prompt("Select Mechanism")
    }
    field(SELN, DBF_USHORT) {
        prompt("Index value")
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(NVL, DBF_INLINK) {
        prompt("Index Value Location")
        interest(1)
        promptgroup("30 - Action")
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPB, DBF_INLINK) {
        prompt("Input B")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPC, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        prompt("Input C")
        interest(1)
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        interest(1)
        promptgroup("41 - Input A-F")
    }
    field(INPG, DBF_INLINK) {
        interest(1)
        prompt("Input G")
        promptgroup("42 - Input G-L")
    }
    field(INPH, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input H")
    }
    field(INPI, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        interest(1)
        prompt("Input J")
        promptgroup("42 - Input G-L")
    }
    field(INPK, DBF_INLINK) {
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        prompt("Input L")
        promptgroup("42 - Input G-L")
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Engineering Units")
        interest(1)
        prop(YES)
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        prompt("Hihi Alarm Limit")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(LOLO, DBF_DOUBLE) {
        prompt("Lolo Alarm Limit")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        prompt("Hihi Severity")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(LLSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Lolo Severity")
    }
    field(HSV, DBF_MENU) {
        interest(1)
        prop(YES)
        prompt("High Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        prop(YES)
        interest(1)
        prompt("Low Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Alarm Deadband")
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        prompt("Value of Input D")
        pp(TRUE)
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        prompt("Value of Input I")
        pp(TRUE)
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(LA, DBF_DOUBLE) {
        prompt("Prev Value of A")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LB, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of B")
        special(SPC_NOMOD)
    }
    field(LC, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of C")
        special(SPC_NOMOD)
    }
    field(LD, DBF_DOUBLE) {
        prompt("Prev Value of D")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of E")
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of F")
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of G")
        special(SPC_NOMOD)
    }
    field(LH, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of H")
    }
    field(LI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of I")
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of J")
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of L")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        prompt("Last Val Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(NLST, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Index Monitored")
    }
}
recordtype(waveform) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        interest(1)
        prompt("Scan Phase")
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Scanning Disable")
        interest(1)
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        extra("struct rset         *rset")
        special(SPC_NOMOD)
        prompt("Address of RSET")
        interest(4)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("void *		val")
    }
    field(RARM, DBF_SHORT) {
        interest(1)
        prompt("Rearm the waveform")
        pp(TRUE)
        promptgroup("30 - Action")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prop(YES)
        interest(1)
        prompt("Display Precision")
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(EGU, DBF_STRING) {
        interest(1)
        prop(YES)
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("Low Operating Range")
        prop(YES)
        interest(1)
    }
    field(NELM, DBF_ULONG) {
        prompt("Number of Elements")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(FTVL, DBF_MENU) {
        prompt("Field Type of Value")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("30 - Action")
        menu(menuFtype)
    }
    field(BUSY, DBF_SHORT) {
        special(SPC_NOMOD)
        prompt("Busy Indicator")
    }
    field(NORD, DBF_ULONG) {
        prompt("Number elements read")
        special(SPC_NOMOD)
    }
    field(BPTR, DBF_NOACCESS) {
        interest(4)
        prompt("Buffer Pointer")
        special(SPC_NOMOD)
        extra("void *		bptr")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Input Specifctn")
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
        prompt("Sim mode Alarm Svrty")
        interest(2)
    }
    field(MPST, DBF_MENU) {
        menu(waveformPOST)
        promptgroup("80 - Display")
        interest(1)
        prompt("Post Value Monitors")
    }
    field(APST, DBF_MENU) {
        prompt("Post Archive Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(waveformPOST)
    }
    field(HASH, DBF_ULONG) {
        prompt("Hash of OnChange data.")
        interest(3)
    }
}
device(waveform, CONSTANT, devWfSoft, "Soft Channel")
device(waveform, INST_IO, asynWfOctetCmdResponse, "asynOctetCmdResponse")
device(waveform, INST_IO, asynWfOctetWriteRead, "asynOctetWriteRead")
device(waveform, INST_IO, asynWfOctetRead, "asynOctetRead")
device(waveform, INST_IO, asynWfOctetWrite, "asynOctetWrite")
device(waveform, INST_IO, asynWfOctetWriteBinary, "asynOctetWriteBinary")
device(waveform, INST_IO, asynInt8ArrayWfIn, "asynInt8ArrayIn")
device(waveform, INST_IO, asynInt8ArrayWfOut, "asynInt8ArrayOut")
device(waveform, INST_IO, asynInt16ArrayWfIn, "asynInt16ArrayIn")
device(waveform, INST_IO, asynInt16ArrayWfOut, "asynInt16ArrayOut")
device(waveform, INST_IO, asynInt32ArrayWfIn, "asynInt32ArrayIn")
device(waveform, INST_IO, asynInt32ArrayWfOut, "asynInt32ArrayOut")
device(waveform, INST_IO, asynInt32TimeSeries, "asynInt32TimeSeries")
device(waveform, INST_IO, asynFloat32ArrayWfIn, "asynFloat32ArrayIn")
device(waveform, INST_IO, asynFloat32ArrayWfOut, "asynFloat32ArrayOut")
device(waveform, INST_IO, asynFloat64ArrayWfIn, "asynFloat64ArrayIn")
device(waveform, INST_IO, asynFloat64ArrayWfOut, "asynFloat64ArrayOut")
device(waveform, INST_IO, asynFloat64TimeSeries, "asynFloat64TimeSeries")
device(waveform, INST_IO, devWaveformStats, "IOC stats")
recordtype(calcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "dbScan.h"
    %#include "postfix.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scan Mechanism")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
    }
    field(TSE, DBF_SHORT) {
        interest(1)
        prompt("Time Stamp Event")
        promptgroup("20 - Scan")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        interest(1)
        prompt("Device Type")
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        interest(3)
        prompt("Force Processing")
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        menu(menuYesNo)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        interest(2)
        initial("YES")
        prompt("Alarm Ack Transient")
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
        prompt("pprocessNotifyRecord")
        interest(4)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(RPVT, DBF_NOACCESS) {
        extra("struct rpvtStruct *rpvt")
        special(SPC_NOMOD)
        prompt("Record Private")
        interest(4)
    }
    field(VAL, DBF_DOUBLE) {
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Result")
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(CALC, DBF_STRING) {
        promptgroup("30 - Action")
        special(SPC_CALC)
        size(80)
        pp(TRUE)
        prompt("Calculation")
        initial("0")
    }
    field(CLCV, DBF_LONG) {
        interest(1)
        prompt("CALC Valid")
    }
    field(INPA, DBF_INLINK) {
        interest(1)
        prompt("Input A")
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
    }
    field(INPB, DBF_INLINK) {
        interest(1)
        prompt("Input B")
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
    }
    field(INPC, DBF_INLINK) {
        interest(1)
        prompt("Input C")
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
    }
    field(INPD, DBF_INLINK) {
        prompt("Input D")
        interest(1)
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
    }
    field(INPE, DBF_INLINK) {
        promptgroup("41 - Input A-F")
        special(SPC_MOD)
        prompt("Input E")
        interest(1)
    }
    field(INPF, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("41 - Input A-F")
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
        prompt("Input G")
        interest(1)
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        prompt("Input H")
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        interest(1)
        promptgroup("42 - Input G-L")
        special(SPC_MOD)
    }
    field(INPJ, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input J")
    }
    field(INPK, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
        interest(1)
        prompt("Input K")
    }
    field(INPL, DBF_INLINK) {
        interest(1)
        prompt("Input L")
        special(SPC_MOD)
        promptgroup("42 - Input G-L")
    }
    field(OUT, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("50 - Output")
        prompt("Output Specification")
        interest(1)
    }
    field(INAV, DBF_MENU) {
        prompt("INPA PV Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(INBV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPB PV Status")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INCV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        prompt("INPC PV Status")
        initial("1")
        interest(1)
    }
    field(INDV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INPD PV Status")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INEV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INPE PV Status")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(calcoutINAV)
        prompt("INPF PV Status")
        initial("1")
        interest(1)
    }
    field(INGV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPG PV Status")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INHV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPH PV Status")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INIV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INPI PV Status")
    }
    field(INJV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INPJ PV Status")
        menu(calcoutINAV)
        special(SPC_NOMOD)
    }
    field(INKV, DBF_MENU) {
        prompt("INPK PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(INLV, DBF_MENU) {
        prompt("INPL PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(calcoutINAV)
    }
    field(OUTV, DBF_MENU) {
        menu(calcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        prompt("OUT PV Status")
    }
    field(OOPT, DBF_MENU) {
        promptgroup("50 - Output")
        menu(calcoutOOPT)
        prompt("Output Execute Opt")
        interest(1)
    }
    field(ODLY, DBF_DOUBLE) {
        prompt("Output Execute Delay")
        asl(ASL0)
        interest(1)
        promptgroup("50 - Output")
    }
    field(DLYA, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Output Delay Active")
        asl(ASL0)
    }
    field(DOPT, DBF_MENU) {
        interest(1)
        prompt("Output Data Opt")
        menu(calcoutDOPT)
        promptgroup("30 - Action")
    }
    field(OCAL, DBF_STRING) {
        pp(TRUE)
        size(80)
        special(SPC_CALC)
        promptgroup("30 - Action")
        initial("0")
        prompt("Output Calculation")
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_STRING) {
        asl(ASL0)
        prompt("Event To Issue")
        size(40)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(EPVT, DBF_NOACCESS) {
        extra("EVENTPVT epvt")
        special(SPC_NOMOD)
        prompt("Event private")
        interest(4)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output action")
    }
    field(IVOV, DBF_DOUBLE) {
        promptgroup("50 - Output")
        prompt("INVALID output value")
        interest(2)
    }
    field(EGU, DBF_STRING) {
        prop(YES)
        interest(1)
        prompt("Engineering Units")
        size(16)
        promptgroup("80 - Display")
    }
    field(PREC, DBF_SHORT) {
        promptgroup("80 - Display")
        prompt("Display Precision")
        prop(YES)
        interest(1)
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Rng")
        prop(YES)
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("Lolo Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        prompt("Hihi Severity")
        interest(1)
        prop(YES)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(LLSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Lolo Severity")
        interest(1)
        prop(YES)
    }
    field(HSV, DBF_MENU) {
        prompt("High Severity")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prop(YES)
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Archive Deadband")
    }
    field(MDEL, DBF_DOUBLE) {
        prompt("Monitor Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        prompt("Value of Input E")
        pp(TRUE)
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input H")
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        prompt("Value of Input K")
        pp(TRUE)
    }
    field(L, DBF_DOUBLE) {
        prompt("Value of Input L")
        pp(TRUE)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
        asl(ASL0)
    }
    field(LA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of A")
    }
    field(LB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of B")
        interest(3)
    }
    field(LC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(LD, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of D")
        special(SPC_NOMOD)
    }
    field(LE, DBF_DOUBLE) {
        prompt("Prev Value of E")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LF, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of F")
        special(SPC_NOMOD)
    }
    field(LG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of G")
        interest(3)
    }
    field(LH, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of H")
        special(SPC_NOMOD)
    }
    field(LI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of I")
        interest(3)
    }
    field(LJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of J")
        interest(3)
    }
    field(LK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LL, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of L")
        special(SPC_NOMOD)
    }
    field(POVL, DBF_DOUBLE) {
        prompt("Prev Value of OVAL")
        asl(ASL0)
    }
    field(LALM, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char	rpcl[INFIX_TO_POSTFIX_SIZE(80)]")
        prompt("Reverse Polish Calc")
        interest(4)
    }
    field(ORPC, DBF_NOACCESS) {
        extra("char	orpc[INFIX_TO_POSTFIX_SIZE(80)]")
        special(SPC_NOMOD)
        interest(4)
        prompt("Reverse Polish OCalc")
    }
}
device(calcout, CONSTANT, devCalcoutSoft, "Soft Channel")
device(calcout, CONSTANT, devCalcoutSoftCallback, "Async Soft Channel")
recordtype(acalcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        prompt("Alarm Severity")
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        initial("YES")
        interest(2)
        prompt("Alarm Ack Transient")
        menu(menuYesNo)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(2)
        prompt("Lock Count")
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        interest(1)
        initial("1")
        prompt("Undefined")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        prompt("Time")
        interest(2)
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VERS, DBF_DOUBLE) {
        initial("1")
        prompt("Code Version")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *rpvt")
        size(4)
        prompt("Record Private")
        interest(4)
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
        asl(ASL0)
    }
    field(AVAL, DBF_NOACCESS) {
        pp(TRUE)
        extra("double *aval")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Array Value")
    }
    field(NELM, DBF_ULONG) {
        prompt("Number of Elements")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(NUSE, DBF_ULONG) {
        pp(TRUE)
        promptgroup("30 - Action")
        special(SPC_MOD)
        initial("0")
        interest(1)
        prompt("# elem's in use")
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(PAVL, DBF_NOACCESS) {
        extra("double *pavl")
        pp(TRUE)
        prompt("Prev. Array Value")
        asl(ASL0)
    }
    field(CALC, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        pp(TRUE)
        size(80)
        prompt("Calculation")
    }
    field(CLCV, DBF_LONG) {
        prompt("CALC Valid")
        interest(1)
    }
    field(INPA, DBF_INLINK) {
        prompt("Input A")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INPD, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input E")
    }
    field(INPF, DBF_INLINK) {
        prompt("Input F")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPG, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Input G")
        interest(1)
    }
    field(INPH, DBF_INLINK) {
        prompt("Input H")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPI, DBF_INLINK) {
        prompt("Input I")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INPJ, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Input J")
        interest(1)
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        prompt("Input K")
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPL, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Input L")
        interest(1)
    }
    field(INAA, DBF_INLINK) {
        prompt("Array input AA")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INBB, DBF_INLINK) {
        interest(1)
        prompt("Array input BB")
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INCC, DBF_INLINK) {
        interest(1)
        prompt("Array input CC")
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INDD, DBF_INLINK) {
        prompt("Array input DD")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INEE, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Array input EE")
        interest(1)
    }
    field(INFF, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Array input FF")
    }
    field(INGG, DBF_INLINK) {
        interest(1)
        prompt("Array input GG")
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INHH, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        prompt("Array input HH")
        interest(1)
    }
    field(INII, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        prompt("Array input II")
    }
    field(INJJ, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Array input JJ")
        interest(1)
    }
    field(INKK, DBF_INLINK) {
        interest(1)
        prompt("Array input KK")
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INLL, DBF_INLINK) {
        interest(1)
        prompt("Array input LL")
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        special(SPC_MOD)
        prompt("Output Link")
        interest(1)
    }
    field(INAV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INPA PV Status")
    }
    field(INBV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INPB PV Status")
        initial("1")
        interest(1)
    }
    field(INCV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPC PV Status")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INDV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INPD PV Status")
        interest(1)
        initial("1")
    }
    field(INEV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INPE PV Status")
    }
    field(INFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INPF PV Status")
        interest(1)
        initial("1")
    }
    field(INGV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INPG PV Status")
        interest(1)
        initial("1")
    }
    field(INHV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("INPH PV Status")
    }
    field(INIV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INPI PV Status")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INJV, DBF_MENU) {
        prompt("INPJ PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
    }
    field(INKV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPK PV Status")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INLV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INPL PV Status")
        interest(1)
        initial("1")
    }
    field(IAAV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INAA PV Status")
        interest(1)
        initial("1")
    }
    field(IBBV, DBF_MENU) {
        prompt("INBB PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
    }
    field(ICCV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INCC PV Status")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IDDV, DBF_MENU) {
        prompt("INDD PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(acalcoutINAV)
    }
    field(IEEV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        initial("1")
        interest(1)
        prompt("INEE PV Status")
    }
    field(IFFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INFF PV Status")
        interest(1)
        initial("1")
    }
    field(IGGV, DBF_MENU) {
        prompt("INGG PV Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(acalcoutINAV)
    }
    field(IHHV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("INHH PV Status")
        interest(1)
        initial("1")
    }
    field(IIIV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INII PV Status")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IJJV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INJJ PV Status")
    }
    field(IKKV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INKK PV Status")
        menu(acalcoutINAV)
        special(SPC_NOMOD)
    }
    field(ILLV, DBF_MENU) {
        menu(acalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INLL PV Status")
    }
    field(OUTV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(acalcoutINAV)
        prompt("OUT PV Status")
        interest(1)
    }
    field(OOPT, DBF_MENU) {
        interest(1)
        prompt("Output Execute Opt")
        menu(acalcoutOOPT)
        promptgroup("30 - Action")
    }
    field(ODLY, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        interest(1)
        asl(ASL0)
        prompt("Output Execute Delay")
    }
    field(WAIT, DBF_MENU) {
        menu(acalcoutWAIT)
        prompt("Wait for completion?")
        interest(1)
    }
    field(DLYA, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Output Delay Active")
        asl(ASL0)
    }
    field(DOPT, DBF_MENU) {
        interest(1)
        prompt("Output Data Opt")
        menu(acalcoutDOPT)
        promptgroup("30 - Action")
    }
    field(OCAL, DBF_STRING) {
        prompt("Output Calculation")
        special(SPC_MOD)
        promptgroup("30 - Action")
        size(80)
        pp(TRUE)
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_USHORT) {
        promptgroup("30 - Action")
        prompt("Event To Issue")
        asl(ASL0)
    }
    field(IVOA, DBF_MENU) {
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID output action")
        interest(2)
    }
    field(IVOV, DBF_DOUBLE) {
        interest(2)
        prompt("INVALID output value")
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Units Name")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        prompt("Display Precision")
        interest(1)
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prompt("High Operating Rng")
        interest(1)
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Hihi Alarm Limit")
    }
    field(LOLO, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Lolo Alarm Limit")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("High Alarm Limit")
        interest(1)
    }
    field(LOW, DBF_DOUBLE) {
        interest(1)
        prompt("Low Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HHSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Hihi Severity")
        interest(1)
    }
    field(LLSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Lolo Severity")
        interest(1)
    }
    field(HSV, DBF_MENU) {
        interest(1)
        prompt("High Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(LSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Low Severity")
        interest(1)
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        prompt("Archive Deadband")
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        prompt("Value of Input A")
        pp(TRUE)
    }
    field(B, DBF_DOUBLE) {
        prompt("Value of Input B")
        pp(TRUE)
    }
    field(C, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input C")
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        prompt("Value of Input F")
        pp(TRUE)
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input J")
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(AA, DBF_NOACCESS) {
        pp(TRUE)
        extra("double *aa")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value of array input")
    }
    field(BB, DBF_NOACCESS) {
        prompt("Value of array input")
        asl(ASL0)
        extra("double *bb")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(CC, DBF_NOACCESS) {
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *cc")
        asl(ASL0)
        prompt("Value of array input")
    }
    field(DD, DBF_NOACCESS) {
        extra("double *dd")
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Value of array input")
        asl(ASL0)
    }
    field(EE, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value of array input")
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *ee")
    }
    field(FF, DBF_NOACCESS) {
        pp(TRUE)
        extra("double *ff")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value of array input")
    }
    field(GG, DBF_NOACCESS) {
        pp(TRUE)
        extra("double *gg")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value of array input")
    }
    field(HH, DBF_NOACCESS) {
        prompt("Value of array input")
        asl(ASL0)
        extra("double *hh")
        special(SPC_DBADDR)
        pp(TRUE)
    }
    field(II, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Value of array input")
        pp(TRUE)
        extra("double *ii")
        special(SPC_DBADDR)
    }
    field(JJ, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("double *jj")
        pp(TRUE)
        prompt("Value of array input")
        asl(ASL0)
    }
    field(KK, DBF_NOACCESS) {
        pp(TRUE)
        special(SPC_DBADDR)
        extra("double *kk")
        asl(ASL0)
        prompt("Value of array input")
    }
    field(LL, DBF_NOACCESS) {
        pp(TRUE)
        extra("double *ll")
        special(SPC_DBADDR)
        asl(ASL0)
        prompt("Value of array input")
    }
    field(PAA, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Prev Val of array input")
        extra("double *paa")
    }
    field(NEWM, DBF_ULONG) {
        special(SPC_NOMOD)
        asl(ASL0)
        prompt("new array value mask")
    }
    field(OVAL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Output Value")
    }
    field(OAV, DBF_NOACCESS) {
        asl(ASL0)
        prompt("Output array value")
        pp(TRUE)
        extra("double *oav")
        special(SPC_DBADDR)
    }
    field(POAV, DBF_NOACCESS) {
        extra("double *poav")
        pp(TRUE)
        prompt("Output array value")
        asl(ASL0)
    }
    field(PA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of A")
        interest(3)
    }
    field(PB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of B")
    }
    field(PC, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of C")
        special(SPC_NOMOD)
    }
    field(PD, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of D")
        special(SPC_NOMOD)
    }
    field(PE, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of E")
        special(SPC_NOMOD)
    }
    field(PF, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of F")
    }
    field(PG, DBF_DOUBLE) {
        prompt("Prev Value of G")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PI, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of I")
        interest(3)
    }
    field(PJ, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of J")
        interest(3)
    }
    field(PK, DBF_DOUBLE) {
        prompt("Prev Value of K")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of L")
        interest(3)
    }
    field(POVL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Prev Value of OVAL")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        prompt("Last Value Archived")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
    }
    field(RPCL, DBF_NOACCESS) {
        extra("unsigned char rpcl[282]")
        special(SPC_NOMOD)
        prompt("Reverse Polish Calc")
        interest(4)
    }
    field(ORPC, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("unsigned char orpc[282]")
        interest(4)
        prompt("Reverse Polish OCalc")
    }
    field(CACT, DBF_UCHAR) {
        prompt("Calc active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(CSTAT, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Calc status")
        interest(1)
    }
    field(AMASK, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Array mod")
        interest(1)
    }
    field(SIZE, DBF_MENU) {
        menu(acalcoutSIZE)
        interest(1)
        prompt("Array size reported to clients")
    }
    field(AMEM, DBF_LONG) {
        special(SPC_NOMOD)
        prompt("Allocated array memory")
        interest(1)
    }
    field(PMEM, DBF_LONG) {
        interest(1)
        prompt("Prev array memory")
        special(SPC_NOMOD)
    }
}
device(acalcout, CONSTANT, devaCalcoutSoft, "Soft Channel")
recordtype(busy) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        interest(3)
        prompt("Force Processing")
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Disable Alarm Sevrty")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotify")
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        extra("void                *dpvt")
        special(SPC_NOMOD)
        interest(4)
        prompt("Device Private")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        prompt("Break Point")
        interest(1)
        special(SPC_NOMOD)
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        initial("INVALID")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        interest(1)
        prompt("Forward Process Link")
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_ENUM) {
        promptgroup("50 - Output")
        pp(TRUE)
        prompt("Current Value")
        asl(ASL0)
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Mode Select")
    }
    field(DOL, DBF_INLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Desired Output Loc")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(HIGH, DBF_DOUBLE) {
        interest(1)
        prompt("Seconds to Hold High")
        promptgroup("50 - Output")
    }
    field(ZNAM, DBF_STRING) {
        prompt("Zero Name")
        interest(1)
        initial("Done")
        promptgroup("80 - Display")
        pp(TRUE)
        size(26)
    }
    field(ONAM, DBF_STRING) {
        initial("Busy")
        interest(1)
        prompt("One Name")
        size(26)
        pp(TRUE)
        promptgroup("80 - Display")
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("prev Raw Value")
    }
    field(OVAL, DBF_ULONG) {
        interest(3)
        prompt("prev Value")
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        promptgroup("50 - Output")
        prompt("Hardware Mask")
        interest(1)
    }
    field(RPVT, DBF_NOACCESS) {
        prompt("Record Private")
        interest(4)
        special(SPC_NOMOD)
        extra("void *  rpvt")
    }
    field(WDPT, DBF_NOACCESS) {
        prompt("Watch Dog Timer ID")
        interest(4)
        special(SPC_NOMOD)
        extra("void *	wdpt")
    }
    field(ZSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Zero Error Severity")
        interest(1)
    }
    field(OSV, DBF_MENU) {
        interest(1)
        prompt("One Error Severity")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(COSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Change of State Sevr")
    }
    field(RBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Readback Value")
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        interest(3)
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Alarmed")
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("40 - Input")
        prompt("Sim Output Specifctn")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("40 - Input")
        interest(2)
        prompt("Sim mode Alarm Svrty")
    }
    field(IVOA, DBF_MENU) {
        promptgroup("50 - Output")
        menu(menuIvoa)
        prompt("INVALID outpt action")
        interest(2)
    }
    field(IVOV, DBF_USHORT) {
        interest(2)
        prompt("INVALID output value")
        promptgroup("50 - Output")
    }
}
device(busy, CONSTANT, devBusySoft, "Soft Channel")
device(busy, CONSTANT, devBusySoftRaw, "Raw Soft Channel")
device(busy, INST_IO, asynBusyInt32, "asynInt32")
recordtype(stringout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        size(61)
        special(SPC_NOMOD)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        size(29)
        promptgroup("10 - Common")
        special(SPC_AS)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Link")
        interest(1)
    }
    field(DTYP, DBF_DEVICE) {
        promptgroup("10 - Common")
        interest(1)
        prompt("Device Type")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Disable Value")
        initial("1")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        pp(TRUE)
        prompt("Force Processing")
        interest(3)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        prompt("Alarm Ack Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        interest(1)
        prompt("Disable Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        prompt("Record active")
        interest(1)
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        prompt("Reprocess ")
        interest(1)
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        prompt("Access Security Pvt")
        interest(4)
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        prompt("DSET address")
        interest(4)
        extra("struct dset         *dset")
        special(SPC_NOMOD)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        prompt("Address of dbRecordType")
        interest(4)
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        prompt("Lock Set")
        interest(4)
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("10 - Common")
        initial("1")
        interest(1)
        prompt("Undefined")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_STRING) {
        promptgroup("50 - Output")
        pp(TRUE)
        size(40)
        prompt("Current Value")
        asl(ASL0)
    }
    field(OVAL, DBF_STRING) {
        prompt("Previous Value")
        interest(3)
        special(SPC_NOMOD)
        size(40)
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        promptgroup("50 - Output")
        menu(menuOmsl)
        prompt("Output Mode Select")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(MPST, DBF_MENU) {
        prompt("Post Value Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(stringoutPOST)
    }
    field(APST, DBF_MENU) {
        prompt("Post Archive Monitors")
        interest(1)
        promptgroup("80 - Display")
        menu(stringoutPOST)
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        prompt("Sim Output Specifctn")
        interest(1)
    }
    field(SIML, DBF_INLINK) {
        interest(1)
        prompt("Sim Mode Location")
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Sim mode Alarm Svrty")
    }
    field(IVOA, DBF_MENU) {
        prompt("INVALID output action")
        interest(2)
        promptgroup("50 - Output")
        menu(menuIvoa)
    }
    field(IVOV, DBF_STRING) {
        promptgroup("50 - Output")
        size(40)
        prompt("INVALID output value")
        interest(2)
    }
}
device(stringout, CONSTANT, devSoSoft, "Soft Channel")
device(stringout, CONSTANT, devSoSoftCallback, "Async Soft Channel")
device(stringout, INST_IO, devSoStdio, "stdio")
device(stringout, INST_IO, asynSoOctetWrite, "asynOctetWrite")
recordtype(mbbo) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
    }
    field(SCAN, DBF_MENU) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(EVNT, DBF_STRING) {
        size(40)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Event Name")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        interest(2)
        prompt("New Alarm Status")
    }
    field(NSEV, DBF_MENU) {
        interest(2)
        prompt("New Alarm Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        interest(4)
        prompt("pprocessNotifyRecord")
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dset         *dset")
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
        prompt("Scheduling Priority")
        interest(1)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_ENUM) {
        promptgroup("50 - Output")
        special(SPC_DBADDR)
        pp(TRUE)
        prompt("Desired Value")
        asl(ASL0)
    }
    field(DOL, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Desired Output Loc")
        interest(1)
    }
    field(OMSL, DBF_MENU) {
        promptgroup("50 - Output")
        menu(menuOmsl)
        prompt("Output Mode Select")
        interest(1)
    }
    field(NOBT, DBF_USHORT) {
        prompt("Number of Bits")
        interest(1)
        special(SPC_NOMOD)
        promptgroup("50 - Output")
    }
    field(OUT, DBF_OUTLINK) {
        promptgroup("50 - Output")
        interest(1)
        prompt("Output Specification")
    }
    field(ZRVL, DBF_ULONG) {
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        prompt("Zero Value")
        interest(1)
    }
    field(ONVL, DBF_ULONG) {
        interest(1)
        prompt("One Value")
        base(HEX)
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(TWVL, DBF_ULONG) {
        interest(1)
        prompt("Two Value")
        pp(TRUE)
        base(HEX)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(THVL, DBF_ULONG) {
        interest(1)
        prompt("Three Value")
        pp(TRUE)
        base(HEX)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(FRVL, DBF_ULONG) {
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        prompt("Four Value")
        interest(1)
    }
    field(FVVL, DBF_ULONG) {
        prompt("Five Value")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
    }
    field(SXVL, DBF_ULONG) {
        prompt("Six Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        pp(TRUE)
        base(HEX)
    }
    field(SVVL, DBF_ULONG) {
        prompt("Seven Value")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
    }
    field(EIVL, DBF_ULONG) {
        interest(1)
        prompt("Eight Value")
        pp(TRUE)
        base(HEX)
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
    }
    field(NIVL, DBF_ULONG) {
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        base(HEX)
        pp(TRUE)
        prompt("Nine Value")
        interest(1)
    }
    field(TEVL, DBF_ULONG) {
        interest(1)
        prompt("Ten Value")
        base(HEX)
        pp(TRUE)
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
    }
    field(ELVL, DBF_ULONG) {
        pp(TRUE)
        base(HEX)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        interest(1)
        prompt("Eleven Value")
    }
    field(TVVL, DBF_ULONG) {
        prompt("Twelve Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        base(HEX)
        pp(TRUE)
    }
    field(TTVL, DBF_ULONG) {
        prompt("Thirteen Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        pp(TRUE)
        base(HEX)
    }
    field(FTVL, DBF_ULONG) {
        prompt("Fourteen Value")
        interest(1)
        special(SPC_MOD)
        promptgroup("52 - Output 8-15")
        base(HEX)
        pp(TRUE)
    }
    field(FFVL, DBF_ULONG) {
        promptgroup("52 - Output 8-15")
        special(SPC_MOD)
        pp(TRUE)
        base(HEX)
        prompt("Fifteen Value")
        interest(1)
    }
    field(ZRST, DBF_STRING) {
        interest(1)
        prompt("Zero String")
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
    }
    field(ONST, DBF_STRING) {
        size(26)
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        interest(1)
        prompt("One String")
    }
    field(TWST, DBF_STRING) {
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        pp(TRUE)
        size(26)
        prompt("Two String")
        interest(1)
    }
    field(THST, DBF_STRING) {
        interest(1)
        prompt("Three String")
        pp(TRUE)
        size(26)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
    }
    field(FRST, DBF_STRING) {
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        pp(TRUE)
        size(26)
        prompt("Four String")
        interest(1)
    }
    field(FVST, DBF_STRING) {
        size(26)
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        interest(1)
        prompt("Five String")
    }
    field(SXST, DBF_STRING) {
        prompt("Six String")
        interest(1)
        promptgroup("81 - Display 0-7")
        special(SPC_MOD)
        pp(TRUE)
        size(26)
    }
    field(SVST, DBF_STRING) {
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("81 - Display 0-7")
        interest(1)
        prompt("Seven String")
    }
    field(EIST, DBF_STRING) {
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        interest(1)
        prompt("Eight String")
    }
    field(NIST, DBF_STRING) {
        prompt("Nine String")
        interest(1)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        pp(TRUE)
        size(26)
    }
    field(TEST, DBF_STRING) {
        size(26)
        pp(TRUE)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        interest(1)
        prompt("Ten String")
    }
    field(ELST, DBF_STRING) {
        size(26)
        pp(TRUE)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        interest(1)
        prompt("Eleven String")
    }
    field(TVST, DBF_STRING) {
        prompt("Twelve String")
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        size(26)
        pp(TRUE)
    }
    field(TTST, DBF_STRING) {
        prompt("Thirteen String")
        interest(1)
        promptgroup("82 - Display 8-15")
        special(SPC_MOD)
        size(26)
        pp(TRUE)
    }
    field(FTST, DBF_STRING) {
        size(26)
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        interest(1)
        prompt("Fourteen String")
    }
    field(FFST, DBF_STRING) {
        pp(TRUE)
        size(26)
        special(SPC_MOD)
        promptgroup("82 - Display 8-15")
        interest(1)
        prompt("Fifteen String")
    }
    field(ZRSV, DBF_MENU) {
        prompt("State Zero Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(ONSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State One Severity")
        interest(1)
    }
    field(TWSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("State Two Severity")
        interest(1)
    }
    field(THSV, DBF_MENU) {
        prompt("State Three Severity")
        interest(1)
        promptgroup("71 - Alarm 0-7")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(FRSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Four Severity")
        interest(1)
    }
    field(FVSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("71 - Alarm 0-7")
        interest(1)
        prompt("State Five Severity")
    }
    field(SXSV, DBF_MENU) {
        promptgroup("71 - Alarm 0-7")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("State Six Severity")
        interest(1)
    }
    field(SVSV, DBF_MENU) {
        interest(1)
        prompt("State Seven Severity")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("71 - Alarm 0-7")
    }
    field(EISV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Eight Severity")
    }
    field(NISV, DBF_MENU) {
        prompt("State Nine Severity")
        interest(1)
        promptgroup("72 - Alarm 8-15")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(TESV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Ten Severity")
    }
    field(ELSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Eleven Severity")
    }
    field(TVSV, DBF_MENU) {
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Twelve Severity")
    }
    field(TTSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Thirteen Sevr")
    }
    field(FTSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("72 - Alarm 8-15")
        interest(1)
        prompt("State Fourteen Sevr")
    }
    field(FFSV, DBF_MENU) {
        interest(1)
        prompt("State Fifteen Sevr")
        menu(menuAlarmSevr)
        pp(TRUE)
        promptgroup("72 - Alarm 8-15")
    }
    field(UNSV, DBF_MENU) {
        interest(1)
        prompt("Unknown State Sevr")
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(COSV, DBF_MENU) {
        prompt("Change of State Sevr")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(RVAL, DBF_ULONG) {
        pp(TRUE)
        prompt("Raw Value")
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Raw Value")
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        prompt("Prev Readback Value")
        interest(3)
        special(SPC_NOMOD)
    }
    field(MASK, DBF_ULONG) {
        interest(1)
        prompt("Hardware Mask")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_USHORT) {
        prompt("Last Value Monitored")
        interest(3)
        special(SPC_NOMOD)
    }
    field(LALM, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Last Value Alarmed")
        interest(3)
    }
    field(SDEF, DBF_SHORT) {
        prompt("States Defined")
        interest(3)
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_USHORT) {
        prompt("Shift")
        interest(1)
        promptgroup("50 - Output")
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuYesNo)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        prompt("Sim mode Alarm Svrty")
        interest(2)
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
    }
    field(IVOA, DBF_MENU) {
        menu(menuIvoa)
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID outpt action")
    }
    field(IVOV, DBF_USHORT) {
        promptgroup("50 - Output")
        interest(2)
        prompt("INVALID output value")
    }
}
device(mbbo, CONSTANT, devMbboSoft, "Soft Channel")
device(mbbo, CONSTANT, devMbboSoftRaw, "Raw Soft Channel")
device(mbbo, CONSTANT, devMbboSoftCallback, "Async Soft Channel")
device(mbbo, INST_IO, asynMbboInt32, "asynInt32")
device(mbbo, INST_IO, asynMbboUInt32Digital, "asynUInt32Digital")
recordtype(mbboDirect) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        prompt("Record Name")
        special(SPC_NOMOD)
        size(61)
    }
    field(DESC, DBF_STRING) {
        size(41)
        promptgroup("10 - Common")
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        interest(1)
        prompt("Process at iocInit")
        menu(menuPini)
        promptgroup("20 - Scan")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        prompt("Monitor lock")
        interest(4)
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
    }
    field(MLIS, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor List")
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("New Alarm Status")
        interest(2)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Record active")
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        extra("struct asgMember    *asp")
        special(SPC_NOMOD)
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        prompt("pprocessNotify")
        interest(4)
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Scan Private")
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        interest(4)
        prompt("DSET address")
        special(SPC_NOMOD)
        extra("struct dset         *dset")
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        interest(4)
        prompt("Lock Set")
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        prompt("Break Point")
        interest(1)
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        interest(1)
        initial("1")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        prompt("Forward Process Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(VAL, DBF_USHORT) {
        pp(TRUE)
        promptgroup("50 - Output")
        asl(ASL0)
        prompt("Word")
    }
    field(OMSL, DBF_MENU) {
        menu(menuOmsl)
        pp(TRUE)
        promptgroup("50 - Output")
        special(SPC_RESET)
        interest(1)
        prompt("Output Mode Select")
    }
    field(NOBT, DBF_SHORT) {
        promptgroup("50 - Output")
        special(SPC_NOMOD)
        prompt("Number of Bits")
        interest(1)
    }
    field(DOL, DBF_INLINK) {
        interest(1)
        prompt("Desired Output Loc")
        promptgroup("40 - Input")
    }
    field(OUT, DBF_OUTLINK) {
        prompt("Output Specification")
        interest(1)
        promptgroup("50 - Output")
    }
    field(B0, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        interest(1)
        prompt("Bit 0")
    }
    field(B1, DBF_UCHAR) {
        prompt("Bit 1")
        interest(1)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
        pp(TRUE)
    }
    field(B2, DBF_UCHAR) {
        interest(1)
        prompt("Bit 2")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("51 - Output 0-7")
    }
    field(B3, DBF_UCHAR) {
        prompt("Bit 3")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B4, DBF_UCHAR) {
        interest(1)
        prompt("Bit 4")
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(B5, DBF_UCHAR) {
        interest(1)
        prompt("Bit 5")
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
    }
    field(B6, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        interest(1)
        prompt("Bit 6")
    }
    field(B7, DBF_UCHAR) {
        prompt("Bit 7")
        interest(1)
        promptgroup("51 - Output 0-7")
        special(SPC_MOD)
        pp(TRUE)
    }
    field(B8, DBF_UCHAR) {
        promptgroup("52 - Output 9-F")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 8")
        interest(1)
    }
    field(B9, DBF_UCHAR) {
        prompt("Bit 9")
        interest(1)
        special(SPC_MOD)
        promptgroup("52 - Output 9-F")
        pp(TRUE)
    }
    field(BA, DBF_UCHAR) {
        promptgroup("52 - Output 9-F")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 10")
        interest(1)
    }
    field(BB, DBF_UCHAR) {
        interest(1)
        prompt("Bit 11")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("52 - Output 9-F")
    }
    field(BC, DBF_UCHAR) {
        interest(1)
        prompt("Bit 12")
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("52 - Output 9-F")
    }
    field(BD, DBF_UCHAR) {
        pp(TRUE)
        promptgroup("52 - Output 9-F")
        special(SPC_MOD)
        interest(1)
        prompt("Bit 13")
    }
    field(BE, DBF_UCHAR) {
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("52 - Output 9-F")
        interest(1)
        prompt("Bit 14")
    }
    field(BF, DBF_UCHAR) {
        promptgroup("52 - Output 9-F")
        special(SPC_MOD)
        pp(TRUE)
        prompt("Bit 15")
        interest(1)
    }
    field(RVAL, DBF_ULONG) {
        prompt("Raw Value")
        pp(TRUE)
        special(SPC_NOMOD)
    }
    field(ORAW, DBF_ULONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Raw Value")
    }
    field(RBV, DBF_ULONG) {
        prompt("Readback Value")
        special(SPC_NOMOD)
    }
    field(ORBV, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Prev Readback Value")
        interest(3)
    }
    field(MASK, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Hardware Mask")
        interest(1)
    }
    field(MLST, DBF_ULONG) {
        interest(3)
        prompt("Last Value Monitored")
        special(SPC_NOMOD)
    }
    field(SHFT, DBF_ULONG) {
        interest(1)
        prompt("Shift")
        promptgroup("50 - Output")
    }
    field(SIOL, DBF_OUTLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim Output Specifctn")
    }
    field(SIML, DBF_INLINK) {
        prompt("Sim Mode Location")
        interest(1)
        promptgroup("90 - Simulate")
    }
    field(SIMM, DBF_MENU) {
        interest(1)
        prompt("Simulation Mode")
        menu(menuYesNo)
    }
    field(SIMS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("90 - Simulate")
        interest(2)
        prompt("Sim mode Alarm Svrty")
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        prompt("INVALID outpt action")
        menu(menuIvoa)
        promptgroup("50 - Output")
    }
    field(IVOV, DBF_USHORT) {
        promptgroup("50 - Output")
        prompt("INVALID output value")
        interest(2)
    }
}
device(mbboDirect, CONSTANT, devMbboDirectSoft, "Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftRaw, "Raw Soft Channel")
device(mbboDirect, CONSTANT, devMbboDirectSoftCallback, "Async Soft Channel")
device(mbboDirect, INST_IO, asynMbboDirectUInt32Digital, "asynUInt32Digital")
recordtype(scalcout) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        interest(1)
        prompt("Scan Mechanism")
        menu(menuScan)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(PINI, DBF_MENU) {
        menu(menuPini)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Process at iocInit")
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        prompt("Scan Phase")
        interest(1)
    }
    field(EVNT, DBF_STRING) {
        prompt("Event Name")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        size(40)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        initial("1")
        prompt("Disable Value")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        prompt("Scanning Disable")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        interest(4)
        prompt("Monitor lock")
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
    }
    field(MLIS, DBF_NOACCESS) {
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
        prompt("Monitor List")
        interest(4)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        menu(menuAlarmStat)
        special(SPC_NOMOD)
        initial("UDF")
        prompt("Alarm Status")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("New Alarm Severity")
        interest(2)
    }
    field(ACKS, DBF_MENU) {
        interest(2)
        prompt("Alarm Ack Severity")
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
    }
    field(ACKT, DBF_MENU) {
        prompt("Alarm Ack Transient")
        initial("YES")
        interest(2)
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Record active")
        interest(1)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("dbPutField process")
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Reprocess ")
        interest(1)
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        interest(4)
        prompt("pprocessNotify")
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        special(SPC_NOMOD)
        extra("struct processNotifyRecord *ppnr")
    }
    field(SPVT, DBF_NOACCESS) {
        prompt("Scan Private")
        interest(4)
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
    }
    field(RSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct rset         *rset")
        interest(4)
        prompt("Address of RSET")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        prompt("Device Private")
        interest(4)
        special(SPC_NOMOD)
        extra("void                *dpvt")
    }
    field(RDES, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct dbRecordType *rdes")
        interest(4)
        prompt("Address of dbRecordType")
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        extra("struct lockRecord   *lset")
        special(SPC_NOMOD)
    }
    field(PRIO, DBF_MENU) {
        interest(1)
        prompt("Scheduling Priority")
        menu(menuPriority)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("char                bkpt")
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        initial("INVALID")
        interest(1)
        prompt("Undefined Alarm Sevrty")
    }
    field(TIME, DBF_NOACCESS) {
        interest(2)
        prompt("Time")
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VERS, DBF_DOUBLE) {
        prompt("Code Version")
        initial("1")
        special(SPC_NOMOD)
    }
    field(RPVT, DBF_NOACCESS) {
        size(4)
        special(SPC_NOMOD)
        extra("void *rpvt")
        interest(4)
        prompt("Record Private")
    }
    field(VAL, DBF_DOUBLE) {
        prompt("Result")
        asl(ASL0)
    }
    field(SVAL, DBF_STRING) {
        asl(ASL0)
        prompt("String result")
        size(40)
    }
    field(PVAL, DBF_DOUBLE) {
        prompt("Previous Value")
    }
    field(PSVL, DBF_STRING) {
        prompt("Previous string result")
        special(SPC_NOMOD)
        size(40)
    }
    field(CALC, DBF_STRING) {
        size(80)
        pp(TRUE)
        special(SPC_MOD)
        promptgroup("30 - Action")
        prompt("Calculation")
    }
    field(CLCV, DBF_LONG) {
        interest(1)
        prompt("CALC Valid")
    }
    field(INPA, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input A")
    }
    field(INPB, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        prompt("Input B")
    }
    field(INPC, DBF_INLINK) {
        prompt("Input C")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INPD, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        prompt("Input D")
    }
    field(INPE, DBF_INLINK) {
        prompt("Input E")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INPF, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input F")
    }
    field(INPG, DBF_INLINK) {
        prompt("Input G")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPH, DBF_INLINK) {
        interest(1)
        prompt("Input H")
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPI, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("Input I")
    }
    field(INPJ, DBF_INLINK) {
        interest(1)
        prompt("Input J")
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INPK, DBF_INLINK) {
        interest(1)
        prompt("Input K")
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INPL, DBF_INLINK) {
        prompt("Input L")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INAA, DBF_INLINK) {
        prompt("String input AA")
        interest(1)
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INBB, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("String input BB")
    }
    field(INCC, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        interest(1)
        prompt("String input CC")
    }
    field(INDD, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        interest(1)
        prompt("String input DD")
    }
    field(INEE, DBF_INLINK) {
        interest(1)
        prompt("String input EE")
        promptgroup("30 - Action")
        special(SPC_MOD)
    }
    field(INFF, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        prompt("String input FF")
        interest(1)
    }
    field(INGG, DBF_INLINK) {
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("String input GG")
        interest(1)
    }
    field(INHH, DBF_INLINK) {
        prompt("String input HH")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INII, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        prompt("String input II")
        interest(1)
    }
    field(INJJ, DBF_INLINK) {
        prompt("String input JJ")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INKK, DBF_INLINK) {
        prompt("String input KK")
        interest(1)
        special(SPC_MOD)
        promptgroup("30 - Action")
    }
    field(INLL, DBF_INLINK) {
        special(SPC_MOD)
        promptgroup("30 - Action")
        prompt("String input LL")
        interest(1)
    }
    field(OUT, DBF_OUTLINK) {
        special(SPC_MOD)
        promptgroup("50 - Output")
        prompt("Output Link")
        interest(1)
    }
    field(INAV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPA PV Status")
        interest(1)
        initial("1")
    }
    field(INBV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPB PV Status")
        interest(1)
        initial("1")
    }
    field(INCV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INPC PV Status")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INDV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPD PV Status")
        initial("1")
        interest(1)
    }
    field(INEV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPE PV Status")
        interest(1)
        initial("1")
    }
    field(INFV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPF PV Status")
        interest(1)
        initial("1")
    }
    field(INGV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPG PV Status")
        interest(1)
        initial("1")
    }
    field(INHV, DBF_MENU) {
        prompt("INPH PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(INIV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INPI PV Status")
        initial("1")
        interest(1)
    }
    field(INJV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INPJ PV Status")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(INKV, DBF_MENU) {
        prompt("INPK PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(INLV, DBF_MENU) {
        prompt("INPL PV Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IAAV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INAA PV Status")
        initial("1")
        interest(1)
    }
    field(IBBV, DBF_MENU) {
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INBB PV Status")
    }
    field(ICCV, DBF_MENU) {
        prompt("INCC PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IDDV, DBF_MENU) {
        prompt("INDD PV Status")
        interest(1)
        initial("1")
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IEEV, DBF_MENU) {
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INEE PV Status")
    }
    field(IFFV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INFF PV Status")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IGGV, DBF_MENU) {
        initial("1")
        interest(1)
        prompt("INGG PV Status")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IHHV, DBF_MENU) {
        interest(1)
        initial("1")
        prompt("INHH PV Status")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(IIIV, DBF_MENU) {
        prompt("INII PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(IJJV, DBF_MENU) {
        special(SPC_NOMOD)
        menu(scalcoutINAV)
        prompt("INJJ PV Status")
        initial("1")
        interest(1)
    }
    field(IKKV, DBF_MENU) {
        prompt("INKK PV Status")
        initial("1")
        interest(1)
        special(SPC_NOMOD)
        menu(scalcoutINAV)
    }
    field(ILLV, DBF_MENU) {
        menu(scalcoutINAV)
        special(SPC_NOMOD)
        interest(1)
        initial("1")
        prompt("INLL PV Status")
    }
    field(OUTV, DBF_MENU) {
        interest(1)
        prompt("OUT PV Status")
        menu(scalcoutINAV)
        special(SPC_NOMOD)
    }
    field(OOPT, DBF_MENU) {
        prompt("Output Execute Opt")
        interest(1)
        promptgroup("30 - Action")
        menu(scalcoutOOPT)
    }
    field(ODLY, DBF_DOUBLE) {
        asl(ASL0)
        interest(1)
        prompt("Output Execute Delay")
        promptgroup("70 - Alarm")
    }
    field(WAIT, DBF_MENU) {
        menu(scalcoutWAIT)
        prompt("Wait for completion?")
        interest(1)
    }
    field(DLYA, DBF_USHORT) {
        special(SPC_NOMOD)
        prompt("Output Delay Active")
        asl(ASL0)
    }
    field(DOPT, DBF_MENU) {
        menu(scalcoutDOPT)
        promptgroup("30 - Action")
        interest(1)
        prompt("Output Data Opt")
    }
    field(OCAL, DBF_STRING) {
        pp(TRUE)
        size(80)
        promptgroup("30 - Action")
        special(SPC_MOD)
        prompt("Output Calculation")
    }
    field(OCLV, DBF_LONG) {
        interest(1)
        prompt("OCAL Valid")
    }
    field(OEVT, DBF_USHORT) {
        promptgroup("30 - Action")
        asl(ASL0)
        prompt("Event To Issue")
    }
    field(IVOA, DBF_MENU) {
        interest(2)
        prompt("INVALID output action")
        menu(menuIvoa)
        promptgroup("50 - Output")
    }
    field(IVOV, DBF_DOUBLE) {
        interest(2)
        prompt("INVALID output value")
        promptgroup("50 - Output")
    }
    field(EGU, DBF_STRING) {
        promptgroup("80 - Display")
        size(16)
        prompt("Units Name")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(HOPR, DBF_DOUBLE) {
        prompt("High Operating Rng")
        interest(1)
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        interest(1)
        prompt("Low Operating Range")
        promptgroup("80 - Display")
    }
    field(HIHI, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        interest(1)
    }
    field(LOLO, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Lolo Alarm Limit")
        interest(1)
    }
    field(HIGH, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("High Alarm Limit")
    }
    field(LOW, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Alarm Limit")
    }
    field(HHSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Hihi Severity")
        interest(1)
    }
    field(LLSV, DBF_MENU) {
        prompt("Lolo Severity")
        interest(1)
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
    }
    field(HSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("High Severity")
        interest(1)
    }
    field(LSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        interest(1)
        prompt("Low Severity")
    }
    field(HYST, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Deadband")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        interest(1)
        prompt("Archive Deadband")
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        promptgroup("80 - Display")
        interest(1)
        prompt("Monitor Deadband")
    }
    field(A, DBF_DOUBLE) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of Input A")
    }
    field(B, DBF_DOUBLE) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of Input B")
    }
    field(C, DBF_DOUBLE) {
        prompt("Value of Input C")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(D, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        prompt("Value of Input D")
    }
    field(E, DBF_DOUBLE) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of Input E")
    }
    field(F, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        prompt("Value of Input F")
    }
    field(G, DBF_DOUBLE) {
        prompt("Value of Input G")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(H, DBF_DOUBLE) {
        prompt("Value of Input H")
        pp(TRUE)
        promptgroup("10 - Common")
    }
    field(I, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        prompt("Value of Input I")
    }
    field(J, DBF_DOUBLE) {
        prompt("Value of Input J")
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(K, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("10 - Common")
        prompt("Value of Input K")
    }
    field(L, DBF_DOUBLE) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Value of Input L")
    }
    field(STRS, DBF_NOACCESS) {
        size(4)
        extra("char **strs")
        interest(4)
        prompt("Array of string pointers")
    }
    field(AA, DBF_STRING) {
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
        prompt("Value of string input AA")
        interest(4)
    }
    field(BB, DBF_STRING) {
        pp(TRUE)
        size(40)
        promptgroup("10 - Common")
        interest(4)
        prompt("Value of string input BB")
    }
    field(CC, DBF_STRING) {
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
        prompt("Value of string input CC")
        interest(4)
    }
    field(DD, DBF_STRING) {
        prompt("Value of string input DD")
        interest(4)
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
    }
    field(EE, DBF_STRING) {
        prompt("Value of string input EE")
        interest(4)
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
    }
    field(FF, DBF_STRING) {
        promptgroup("10 - Common")
        size(40)
        pp(TRUE)
        prompt("Value of string input FF")
        interest(4)
    }
    field(GG, DBF_STRING) {
        prompt("Value of string input GG")
        interest(4)
        promptgroup("10 - Common")
        size(40)
        pp(TRUE)
    }
    field(HH, DBF_STRING) {
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
        prompt("Value of string input HH")
        interest(4)
    }
    field(II, DBF_STRING) {
        prompt("Value of string input II")
        interest(4)
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
    }
    field(JJ, DBF_STRING) {
        size(40)
        pp(TRUE)
        promptgroup("10 - Common")
        interest(4)
        prompt("Value of string input JJ")
    }
    field(KK, DBF_STRING) {
        promptgroup("10 - Common")
        pp(TRUE)
        size(40)
        prompt("Value of string input KK")
        interest(4)
    }
    field(LL, DBF_STRING) {
        promptgroup("10 - Common")
        size(40)
        pp(TRUE)
        prompt("Value of string input LL")
        interest(4)
    }
    field(PAA, DBF_NOACCESS) {
        prompt("Prev Value of AA")
        interest(4)
        extra("char *paa")
        special(SPC_DBADDR)
        size(4)
    }
    field(PBB, DBF_NOACCESS) {
        size(4)
        extra("char *pbb")
        special(SPC_DBADDR)
        interest(4)
        prompt("Prev Value of BB")
    }
    field(PCC, DBF_NOACCESS) {
        extra("char *pcc")
        special(SPC_DBADDR)
        size(4)
        prompt("Prev Value of CC")
        interest(4)
    }
    field(PDD, DBF_NOACCESS) {
        extra("char *pdd")
        special(SPC_DBADDR)
        size(4)
        prompt("Prev Value of DD")
        interest(4)
    }
    field(PEE, DBF_NOACCESS) {
        interest(4)
        prompt("Prev Value of EE")
        size(4)
        extra("char *pee")
        special(SPC_DBADDR)
    }
    field(PFF, DBF_NOACCESS) {
        interest(4)
        prompt("Prev Value of FF")
        size(4)
        special(SPC_DBADDR)
        extra("char *pff")
    }
    field(PGG, DBF_NOACCESS) {
        interest(4)
        prompt("Prev Value of GG")
        size(4)
        extra("char *pgg")
        special(SPC_DBADDR)
    }
    field(PHH, DBF_NOACCESS) {
        extra("char *phh")
        special(SPC_DBADDR)
        size(4)
        prompt("Prev Value of HH")
        interest(4)
    }
    field(PII, DBF_NOACCESS) {
        prompt("Prev Value of II")
        interest(4)
        extra("char *pii")
        special(SPC_DBADDR)
        size(4)
    }
    field(PJJ, DBF_NOACCESS) {
        extra("char *pjj")
        special(SPC_DBADDR)
        size(4)
        prompt("Prev Value of JJ")
        interest(4)
    }
    field(PKK, DBF_NOACCESS) {
        prompt("Prev Value of KK")
        interest(4)
        extra("char *pkk")
        special(SPC_DBADDR)
        size(4)
    }
    field(PLL, DBF_NOACCESS) {
        extra("char *pll")
        special(SPC_DBADDR)
        size(4)
        prompt("Prev Value of LL")
        interest(4)
    }
    field(OVAL, DBF_DOUBLE) {
        prompt("Output Value")
        asl(ASL0)
    }
    field(OSV, DBF_STRING) {
        size(40)
        asl(ASL0)
        prompt("Output string value")
    }
    field(POSV, DBF_STRING) {
        prompt("Previous output string value")
        size(40)
        special(SPC_NOMOD)
    }
    field(PA, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of A")
        interest(3)
    }
    field(PB, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of B")
        interest(3)
    }
    field(PC, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of C")
    }
    field(PD, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of D")
        special(SPC_NOMOD)
    }
    field(PE, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of E")
    }
    field(PF, DBF_DOUBLE) {
        interest(3)
        prompt("Prev Value of F")
        special(SPC_NOMOD)
    }
    field(PG, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of G")
    }
    field(PH, DBF_DOUBLE) {
        prompt("Prev Value of H")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PI, DBF_DOUBLE) {
        prompt("Prev Value of I")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PJ, DBF_DOUBLE) {
        prompt("Prev Value of J")
        interest(3)
        special(SPC_NOMOD)
    }
    field(PK, DBF_DOUBLE) {
        special(SPC_NOMOD)
        prompt("Prev Value of K")
        interest(3)
    }
    field(PL, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Prev Value of L")
    }
    field(POVL, DBF_DOUBLE) {
        asl(ASL0)
        prompt("Prev Value of OVAL")
    }
    field(LALM, DBF_DOUBLE) {
        prompt("Last Value Alarmed")
        interest(3)
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Value Archived")
    }
    field(MLST, DBF_DOUBLE) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Last Val Monitored")
    }
    field(RPCL, DBF_NOACCESS) {
        extra("unsigned char rpcl[282]")
        special(SPC_NOMOD)
        prompt("Postfix Calc")
        interest(4)
    }
    field(ORPC, DBF_NOACCESS) {
        extra("unsigned char orpc[282]")
        special(SPC_NOMOD)
        interest(4)
        prompt("Postfix OCalc")
    }
}
device(scalcout, CONSTANT, devsCalcoutSoft, "Soft Channel")
recordtype(ai) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    field(NAME, DBF_STRING) {
        size(61)
        special(SPC_NOMOD)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        prompt("Descriptor")
        promptgroup("10 - Common")
        size(41)
    }
    field(ASG, DBF_STRING) {
        prompt("Access Security Group")
        promptgroup("10 - Common")
        special(SPC_AS)
        size(29)
    }
    field(SCAN, DBF_MENU) {
        prompt("Scan Mechanism")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        menu(menuScan)
    }
    field(PINI, DBF_MENU) {
        prompt("Process at iocInit")
        interest(1)
        promptgroup("20 - Scan")
        menu(menuPini)
    }
    field(PHAS, DBF_SHORT) {
        prompt("Scan Phase")
        interest(1)
        promptgroup("20 - Scan")
        special(SPC_SCAN)
    }
    field(EVNT, DBF_STRING) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        size(40)
        prompt("Event Name")
        interest(1)
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Time Stamp Event")
    }
    field(TSEL, DBF_INLINK) {
        prompt("Time Stamp Link")
        interest(1)
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        promptgroup("20 - Scan")
        initial("1")
        prompt("Disable Value")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scanning Disable")
    }
    field(MLOK, DBF_NOACCESS) {
        extra("epicsMutexId        mlok")
        special(SPC_NOMOD)
        prompt("Monitor lock")
        interest(4)
    }
    field(MLIS, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("ELLLIST             mlis")
        interest(4)
        prompt("Monitor List")
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmStat)
        prompt("Alarm Status")
        initial("UDF")
    }
    field(SEVR, DBF_MENU) {
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        interest(2)
        prompt("New Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        promptgroup("70 - Alarm")
        special(SPC_NOMOD)
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Disable Alarm Sevrty")
        interest(1)
    }
    field(LCNT, DBF_UCHAR) {
        prompt("Lock Count")
        interest(2)
        special(SPC_NOMOD)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        interest(1)
        prompt("dbPutField process")
        special(SPC_NOMOD)
    }
    field(RPRO, DBF_UCHAR) {
        special(SPC_NOMOD)
        interest(1)
        prompt("Reprocess ")
    }
    field(ASP, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
        prompt("Access Security Pvt")
        interest(4)
    }
    field(PPN, DBF_NOACCESS) {
        extra("struct processNotify *ppn")
        special(SPC_NOMOD)
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
        interest(4)
        prompt("pprocessNotifyRecord")
    }
    field(SPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct scan_element *spvt")
        interest(4)
        prompt("Scan Private")
    }
    field(RSET, DBF_NOACCESS) {
        prompt("Address of RSET")
        interest(4)
        special(SPC_NOMOD)
        extra("struct rset         *rset")
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        interest(4)
        prompt("DSET address")
    }
    field(DPVT, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void                *dpvt")
        prompt("Device Private")
        interest(4)
    }
    field(RDES, DBF_NOACCESS) {
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
        prompt("Address of dbRecordType")
        interest(4)
    }
    field(LSET, DBF_NOACCESS) {
        interest(4)
        prompt("Lock Set")
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
    }
    field(PRIO, DBF_MENU) {
        menu(menuPriority)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        interest(1)
        prompt("Scheduling Priority")
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        interest(1)
        prompt("Break Point")
        special(SPC_NOMOD)
        extra("char                bkpt")
    }
    field(UDF, DBF_UCHAR) {
        promptgroup("10 - Common")
        pp(TRUE)
        prompt("Undefined")
        interest(1)
        initial("1")
    }
    field(UDFS, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        prompt("Undefined Alarm Sevrty")
        interest(1)
        initial("INVALID")
    }
    field(TIME, DBF_NOACCESS) {
        extra("epicsTimeStamp      time")
        special(SPC_NOMOD)
        prompt("Time")
        interest(2)
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        prompt("Forward Process Link")
        interest(1)
    }
    field(VAL, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("40 - Input")
        asl(ASL0)
        prompt("Current EGU Value")
    }
    field(INP, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input Specification")
        interest(1)
    }
    field(PREC, DBF_SHORT) {
        interest(1)
        prop(YES)
        prompt("Display Precision")
        promptgroup("80 - Display")
    }
    field(LINR, DBF_MENU) {
        interest(1)
        prompt("Linearization")
        pp(TRUE)
        menu(menuConvert)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
    }
    field(EGUF, DBF_DOUBLE) {
        pp(TRUE)
        special(SPC_LINCONV)
        promptgroup("60 - Convert")
        interest(1)
        prompt("Engineer Units Full")
    }
    field(EGUL, DBF_DOUBLE) {
        prompt("Engineer Units Low")
        interest(1)
        promptgroup("60 - Convert")
        special(SPC_LINCONV)
        pp(TRUE)
    }
    field(EGU, DBF_STRING) {
        prompt("Engineering Units")
        interest(1)
        prop(YES)
        promptgroup("80 - Display")
        size(16)
    }
    field(HOPR, DBF_DOUBLE) {
        interest(1)
        prop(YES)
        prompt("High Operating Range")
        promptgroup("80 - Display")
    }
    field(LOPR, DBF_DOUBLE) {
        promptgroup("80 - Display")
        prop(YES)
        interest(1)
        prompt("Low Operating Range")
    }
    field(AOFF, DBF_DOUBLE) {
        pp(TRUE)
        promptgroup("60 - Convert")
        interest(1)
        prompt("Adjustment Offset")
    }
    field(ASLO, DBF_DOUBLE) {
        interest(1)
        initial("1")
        prompt("Adjustment Slope")
        pp(TRUE)
        promptgroup("60 - Convert")
    }
    field(SMOO, DBF_DOUBLE) {
        promptgroup("60 - Convert")
        interest(1)
        prompt("Smoothing")
    }
    field(HIHI, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Hihi Alarm Limit")
        interest(1)
        prop(YES)
    }
    field(LOLO, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        prompt("Lolo Alarm Limit")
        interest(1)
        prop(YES)
    }
    field(HIGH, DBF_DOUBLE) {
        prompt("High Alarm Limit")
        interest(1)
        prop(YES)
        promptgroup("70 - Alarm")
        pp(TRUE)
    }
    field(LOW, DBF_DOUBLE) {
        prop(YES)
        interest(1)
        prompt("Low Alarm Limit")
        pp(TRUE)
        promptgroup("70 - Alarm")
    }
    field(HHSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        pp(TRUE)
        menu(menuAlarmSevr)
        prompt("Hihi Severity")
        prop(YES)
        interest(1)
    }
    field(LLSV, DBF_MENU) {
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
        prompt("Lolo Severity")
        prop(YES)
        interest(1)
    }
    field(HSV, DBF_MENU) {
        pp(TRUE)
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
        prop(YES)
        interest(1)
        prompt("High Severity")
    }
    field(LSV, DBF_MENU) {
        prompt("Low Severity")
        prop(YES)
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
        pp(TRUE)
    }
    field(HYST, DBF_DOUBLE) {
        prompt("Alarm Deadband")
        interest(1)
        promptgroup("70 - Alarm")
    }
    field(AFTC, DBF_DOUBLE) {
        promptgroup("70 - Alarm")
        prompt("Alarm Filter Time Constant")
        interest(1)
    }
    field(ADEL, DBF_DOUBLE) {
        prompt("Archive Deadband")
        interest(1)
        promptgroup("80 - Display")
    }
    field(MDEL, DBF_DOUBLE) {
        interest(1)
        prompt("Monitor Deadband")
        promptgroup("80 - Display")
    }
    field(LALM, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Alarmed")
        special(SPC_NOMOD)
    }
    field(AFVL, DBF_DOUBLE) {
        interest(3)
        prompt("Alarm Filter Value")
        special(SPC_NOMOD)
    }
    field(ALST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Value Archived")
        special(SPC_NOMOD)
    }
    field(MLST, DBF_DOUBLE) {
        interest(3)
        prompt("Last Val Monitored")
        special(SPC_NOMOD)
    }
    field(ESLO, DBF_DOUBLE) {
        prompt("Raw to EGU Slope")
        interest(2)
        initial("1")
        promptgroup("60 - Convert")
        pp(TRUE)
    }
    field(EOFF, DBF_DOUBLE) {
        interest(2)
        prompt("Raw to EGU Offset")
        pp(TRUE)
        promptgroup("60 - Convert")
    }
    field(ROFF, DBF_ULONG) {
        prompt("Raw Offset")
        interest(2)
        pp(TRUE)
    }
    field(PBRK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("void *   pbrk")
        prompt("Ptrto brkTable")
        interest(4)
    }
    field(INIT, DBF_SHORT) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Initialized?")
    }
    field(LBRK, DBF_SHORT) {
        interest(3)
        prompt("LastBreak Point")
        special(SPC_NOMOD)
    }
    field(RVAL, DBF_LONG) {
        pp(TRUE)
        prompt("Current Raw Value")
    }
    field(ORAW, DBF_LONG) {
        special(SPC_NOMOD)
        interest(3)
        prompt("Previous Raw Value")
    }
    field(SIOL, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim. Input Specification")
    }
    field(SVAL, DBF_DOUBLE) {
        prompt("Simulation Value")
    }
    field(SIML, DBF_INLINK) {
        promptgroup("90 - Simulate")
        interest(1)
        prompt("Sim. Mode Location")
    }
    field(SIMM, DBF_MENU) {
        menu(menuSimm)
        interest(1)
        prompt("Simulation Mode")
    }
    field(SIMS, DBF_MENU) {
        promptgroup("90 - Simulate")
        menu(menuAlarmSevr)
        prompt("Simulation Mode Severity")
        interest(2)
    }
}
device(ai, CONSTANT, devAiSoft, "Soft Channel")
device(ai, CONSTANT, devAiSoftRaw, "Raw Soft Channel")
device(ai, CONSTANT, devAiSoftCallback, "Async Soft Channel")
device(ai, INST_IO, devTimestampAI, "Soft Timestamp")
device(ai, INST_IO, devAiGeneralTime, "General Time")
device(ai, INST_IO, asynAiInt32, "asynInt32")
device(ai, INST_IO, asynAiInt32Average, "asynInt32Average")
device(ai, INST_IO, asynAiFloat64, "asynFloat64")
device(ai, INST_IO, asynAiFloat64Average, "asynFloat64Average")
device(ai, INST_IO, devAiStats, "IOC stats")
device(ai, INST_IO, devAiClusts, "IOC stats clusts")
recordtype(printf) {
    %#include "epicsTypes.h"
    %#include "link.h"
    %#include "epicsMutex.h"
    %#include "ellLib.h"
    %#include "epicsTime.h"
    %#include "devSup.h"
    %
    %/* Declare Device Support Entry Table */
    %typedef struct printfdset {
    %    long number;
    %    DEVSUPFUN report;
    %    DEVSUPFUN init;
    %    DEVSUPFUN init_record;
    %    DEVSUPFUN get_ioint_info;
    %    DEVSUPFUN write_string;
    %} printfdset;
    %
    %/* Number of INPx fields defined */
    %#define PRINTF_NLINKS 10
    field(NAME, DBF_STRING) {
        special(SPC_NOMOD)
        size(61)
        prompt("Record Name")
    }
    field(DESC, DBF_STRING) {
        promptgroup("10 - Common")
        size(41)
        prompt("Descriptor")
    }
    field(ASG, DBF_STRING) {
        special(SPC_AS)
        promptgroup("10 - Common")
        size(29)
        prompt("Access Security Group")
    }
    field(SCAN, DBF_MENU) {
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuScan)
        prompt("Scan Mechanism")
        interest(1)
    }
    field(PINI, DBF_MENU) {
        promptgroup("20 - Scan")
        menu(menuPini)
        prompt("Process at iocInit")
        interest(1)
    }
    field(PHAS, DBF_SHORT) {
        promptgroup("20 - Scan")
        special(SPC_SCAN)
        interest(1)
        prompt("Scan Phase")
    }
    field(EVNT, DBF_STRING) {
        interest(1)
        prompt("Event Name")
        size(40)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
    }
    field(TSE, DBF_SHORT) {
        promptgroup("20 - Scan")
        prompt("Time Stamp Event")
        interest(1)
    }
    field(TSEL, DBF_INLINK) {
        interest(1)
        prompt("Time Stamp Link")
        promptgroup("20 - Scan")
    }
    field(DTYP, DBF_DEVICE) {
        prompt("Device Type")
        interest(1)
        promptgroup("10 - Common")
    }
    field(DISV, DBF_SHORT) {
        prompt("Disable Value")
        initial("1")
        promptgroup("20 - Scan")
    }
    field(DISA, DBF_SHORT) {
        prompt("Disable")
    }
    field(SDIS, DBF_INLINK) {
        interest(1)
        prompt("Scanning Disable")
        promptgroup("20 - Scan")
    }
    field(MLOK, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsMutexId        mlok")
        interest(4)
        prompt("Monitor lock")
    }
    field(MLIS, DBF_NOACCESS) {
        prompt("Monitor List")
        interest(4)
        extra("ELLLIST             mlis")
        special(SPC_NOMOD)
    }
    field(DISP, DBF_UCHAR) {
        prompt("Disable putField")
    }
    field(PROC, DBF_UCHAR) {
        prompt("Force Processing")
        interest(3)
        pp(TRUE)
    }
    field(STAT, DBF_MENU) {
        initial("UDF")
        prompt("Alarm Status")
        menu(menuAlarmStat)
        special(SPC_NOMOD)
    }
    field(SEVR, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        prompt("Alarm Severity")
    }
    field(NSTA, DBF_MENU) {
        prompt("New Alarm Status")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmStat)
    }
    field(NSEV, DBF_MENU) {
        prompt("New Alarm Severity")
        interest(2)
        special(SPC_NOMOD)
        menu(menuAlarmSevr)
    }
    field(ACKS, DBF_MENU) {
        menu(menuAlarmSevr)
        special(SPC_NOMOD)
        interest(2)
        prompt("Alarm Ack Severity")
    }
    field(ACKT, DBF_MENU) {
        special(SPC_NOMOD)
        promptgroup("70 - Alarm")
        menu(menuYesNo)
        prompt("Alarm Ack Transient")
        interest(2)
        initial("YES")
    }
    field(DISS, DBF_MENU) {
        prompt("Disable Alarm Sevrty")
        interest(1)
        promptgroup("70 - Alarm")
        menu(menuAlarmSevr)
    }
    field(LCNT, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("Lock Count")
        interest(2)
    }
    field(PACT, DBF_UCHAR) {
        interest(1)
        prompt("Record active")
        special(SPC_NOMOD)
    }
    field(PUTF, DBF_UCHAR) {
        special(SPC_NOMOD)
        prompt("dbPutField process")
        interest(1)
    }
    field(RPRO, DBF_UCHAR) {
        interest(1)
        prompt("Reprocess ")
        special(SPC_NOMOD)
    }
    field(ASP, DBF_NOACCESS) {
        interest(4)
        prompt("Access Security Pvt")
        special(SPC_NOMOD)
        extra("struct asgMember    *asp")
    }
    field(PPN, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct processNotify *ppn")
        prompt("pprocessNotify")
        interest(4)
    }
    field(PPNR, DBF_NOACCESS) {
        prompt("pprocessNotifyRecord")
        interest(4)
        extra("struct processNotifyRecord *ppnr")
        special(SPC_NOMOD)
    }
    field(SPVT, DBF_NOACCESS) {
        extra("struct scan_element *spvt")
        special(SPC_NOMOD)
        prompt("Scan Private")
        interest(4)
    }
    field(RSET, DBF_NOACCESS) {
        interest(4)
        prompt("Address of RSET")
        extra("struct rset         *rset")
        special(SPC_NOMOD)
    }
    field(DSET, DBF_NOACCESS) {
        extra("struct dset         *dset")
        special(SPC_NOMOD)
        prompt("DSET address")
        interest(4)
    }
    field(DPVT, DBF_NOACCESS) {
        interest(4)
        prompt("Device Private")
        extra("void                *dpvt")
        special(SPC_NOMOD)
    }
    field(RDES, DBF_NOACCESS) {
        interest(4)
        prompt("Address of dbRecordType")
        extra("struct dbRecordType *rdes")
        special(SPC_NOMOD)
    }
    field(LSET, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("struct lockRecord   *lset")
        prompt("Lock Set")
        interest(4)
    }
    field(PRIO, DBF_MENU) {
        prompt("Scheduling Priority")
        interest(1)
        special(SPC_SCAN)
        promptgroup("20 - Scan")
        menu(menuPriority)
    }
    field(TPRO, DBF_UCHAR) {
        prompt("Trace Processing")
    }
    field(BKPT, DBF_NOACCESS) {
        extra("char                bkpt")
        special(SPC_NOMOD)
        interest(1)
        prompt("Break Point")
    }
    field(UDF, DBF_UCHAR) {
        prompt("Undefined")
        initial("1")
        interest(1)
        promptgroup("10 - Common")
        pp(TRUE)
    }
    field(UDFS, DBF_MENU) {
        interest(1)
        initial("INVALID")
        prompt("Undefined Alarm Sevrty")
        menu(menuAlarmSevr)
        promptgroup("70 - Alarm")
    }
    field(TIME, DBF_NOACCESS) {
        special(SPC_NOMOD)
        extra("epicsTimeStamp      time")
        interest(2)
        prompt("Time")
    }
    field(FLNK, DBF_FWDLINK) {
        promptgroup("20 - Scan")
        interest(1)
        prompt("Forward Process Link")
    }
    field(VAL, DBF_NOACCESS) {
        special(SPC_DBADDR)
        extra("char *val")
        pp(TRUE)
        prompt("Result")
        asl(ASL0)
    }
    field(SIZV, DBF_USHORT) {
        initial("41")
        interest(1)
        prompt("Size of VAL buffer")
        special(SPC_NOMOD)
        promptgroup("30 - Action")
    }
    field(LEN, DBF_ULONG) {
        special(SPC_NOMOD)
        prompt("Length of VAL")
    }
    field(OUT, DBF_OUTLINK) {
        interest(1)
        prompt("Output Specification")
        promptgroup("50 - Output")
    }
    field(FMT, DBF_STRING) {
        prompt("Format String")
        pp(TRUE)
        size(81)
        promptgroup("30 - Action")
    }
    field(IVLS, DBF_STRING) {
        size(16)
        promptgroup("30 - Action")
        initial("LNK")
        prompt("Invalid Link String")
    }
    field(INP0, DBF_INLINK) {
        interest(1)
        prompt("Input 0")
        promptgroup("40 - Input")
    }
    field(INP1, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 1")
    }
    field(INP2, DBF_INLINK) {
        interest(1)
        prompt("Input 2")
        promptgroup("40 - Input")
    }
    field(INP3, DBF_INLINK) {
        promptgroup("40 - Input")
        interest(1)
        prompt("Input 3")
    }
    field(INP4, DBF_INLINK) {
        interest(1)
        prompt("Input 4")
        promptgroup("40 - Input")
    }
    field(INP5, DBF_INLINK) {
        interest(1)
        prompt("Input 5")
        promptgroup("40 - Input")
    }
    field(INP6, DBF_INLINK) {
        prompt("Input 6")
        interest(1)
        promptgroup("40 - Input")
    }
    field(INP7, DBF_INLINK) {
        promptgroup("40 - Input")
        prompt("Input 7")
        interest(1)
    }
    field(INP8, DBF_INLINK) {
        interest(1)
        prompt("Input 8")
        promptgroup("40 - Input")
    }
    field(INP9, DBF_INLINK) {
        prompt("Input 9")
        interest(1)
        promptgroup("40 - Input")
    }
}
device(printf, CONSTANT, devPrintfSoft, "Soft Channel")
device(printf, CONSTANT, devPrintfSoftCallback, "Async Soft Channel")
device(printf, INST_IO, devPrintfStdio, "stdio")
driver(drvAsyn)
registrar(subAveRegister)
registrar(NDFileHDF5Register)
registrar(asynInterposeFlushRegister)
registrar(asSub)
registrar(save_restoreRegister)
registrar(dbndInitialize)
registrar(fastSweepRegister)
registrar(syncInitialize)
registrar(asynRegister)
registrar(tsInitialize)
registrar(saveDataRegistrar)
registrar(NDFileNexusRegister)
registrar(interpRegister)
registrar(NDFileNetCDFRegister)
registrar(configMenuRegistrar)
registrar(asynInterposeEosRegister)
registrar(acalcTotalAllocatedMemoryRegister)
registrar(dbrestoreRegister)
registrar(NDDxpRegister)
registrar(NDFileTIFFRegister)
registrar(asInitHooksRegister)
registrar(arrayTestRegister)
registrar(dxpMEDRegistrar)
registrar(aCalcMonitorMemRegister)
registrar(arrInitialize)
function(scanMon)
function(scanMonInit)
function(rebootProc)
variable(CASDEBUG, int)
variable(devsCalcoutSoftDebug, int)
variable(mcaRecordDebug, int)
variable(aCalcAsyncThreshold, int)
variable(transformRecordDebug, int)
variable(devaCalcoutSoftDebug, int)
variable(seqDLYlimit, double)
variable(dbTemplateMaxVars, int)
variable(dbBptNotMonotonic, int)
variable(save_restoreNumSeqFiles, int)
variable(seqDLYprecision, int)
variable(save_restoreDatedBackupFiles, int)
variable(callbackParallelThreadsDefault, int)
variable(save_restoreDebug, int)
variable(sscanRecordLookupTime, int)
variable(save_restoreIncompleteSetsOk, int)
variable(sscanRecordConnectWaitSeconds, int)
variable(recDynLinkQsize, int)
variable(asCaDebug, int)
variable(configMenuDebug, int)
variable(atExitDebug, int)
variable(sscanRecordViewPos, int)
variable(aCalcMonitorMem_debug, int)
variable(dbRecordsAbcSorted, int)
variable(sCalcPerformDebug, int)
variable(histogramSDELprecision, int)
variable(calcoutODLYlimit, double)
variable(aCalcoutRecordDebug, int)
variable(sCalcStackLW, int)
variable(aCalcPostfixDebug, int)
variable(dbQuietMacroWarnings, int)
variable(recDynLinkDebug, int)
variable(dbRecordsOnceOnly, int)
variable(sCalcStackHW, int)
variable(sCalcoutRecordDebug, int)
variable(debug_saveData, int)
variable(boHIGHprecision, int)
variable(aCalcPerformDebug, int)
variable(sscanRecordDontCheckLimits, int)
variable(scanparmRecordDebug, int)
variable(dbThreadRealtimeLock, int)
variable(interpDebug, int)
variable(arrayTestDebug, int)
variable(aCalcLoopMax, int)
variable(save_restoreRemountThreshold, int)
variable(sCalcPostfixDebug, int)
variable(saveData_MessagePolicy, int)
variable(sseqRecDebug, int)
variable(sscanRecordDebug, int)
variable(boHIGHlimit, double)
variable(sCalcLoopMax, int)
variable(save_restoreSeqPeriodInSeconds, int)
variable(calcoutODLYprecision, int)
variable(debug_saveDataMsg, int)
variable(debugSubAve, int)
variable(swaitRecordDebug, int)
