record(stringout,"$(P)$(H)AND-1_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),100,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-1_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),100,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-1_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-1_IN1_BI")
}
record(bo,"$(P)$(H)AND-1_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-1_IN1_Signal")
}
record(bo,"$(P)$(H)AND-1_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-1_IN1_Signal")
}
record(stringout,"$(P)$(H)AND-1_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),101,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-1_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),101,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-1_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-1_IN2_BI")
}
record(bo,"$(P)$(H)AND-1_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-1_IN2_Signal")
}
record(bo,"$(P)$(H)AND-1_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-1_IN2_Signal")
}
record(stringout,"$(P)$(H)AND-2_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),102,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-2_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),102,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-2_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-2_IN1_BI")
}
record(bo,"$(P)$(H)AND-2_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-2_IN1_Signal")
}
record(bo,"$(P)$(H)AND-2_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-2_IN1_Signal")
}
record(stringout,"$(P)$(H)AND-2_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),103,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-2_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),103,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-2_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-2_IN2_BI")
}
record(bo,"$(P)$(H)AND-2_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-2_IN2_Signal")
}
record(bo,"$(P)$(H)AND-2_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-2_IN2_Signal")
}
record(stringout,"$(P)$(H)AND-3_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),104,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-3_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),104,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-3_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-3_IN1_BI")
}
record(bo,"$(P)$(H)AND-3_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-3_IN1_Signal")
}
record(bo,"$(P)$(H)AND-3_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-3_IN1_Signal")
}
record(stringout,"$(P)$(H)AND-3_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),105,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-3_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),105,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-3_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-3_IN2_BI")
}
record(bo,"$(P)$(H)AND-3_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-3_IN2_Signal")
}
record(bo,"$(P)$(H)AND-3_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-3_IN2_Signal")
}
record(stringout,"$(P)$(H)AND-4_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),106,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-4_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),106,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-4_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-4_IN1_BI")
}
record(bo,"$(P)$(H)AND-4_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-4_IN1_Signal")
}
record(bo,"$(P)$(H)AND-4_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-4_IN1_Signal")
}
record(stringout,"$(P)$(H)AND-4_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),107,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)AND-4_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),107,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-4_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-4_IN2_BI")
}
record(bo,"$(P)$(H)AND-4_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-4_IN2_Signal")
}
record(bo,"$(P)$(H)AND-4_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-4_IN2_Signal")
}
record(stringout,"$(P)$(H)OR-1_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),108,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-1_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),108,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-1_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-1_IN1_BI")
}
record(bo,"$(P)$(H)OR-1_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-1_IN1_Signal")
}
record(bo,"$(P)$(H)OR-1_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-1_IN1_Signal")
}
record(stringout,"$(P)$(H)OR-1_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),109,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-1_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),109,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-1_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-1_IN2_BI")
}
record(bo,"$(P)$(H)OR-1_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-1_IN2_Signal")
}
record(bo,"$(P)$(H)OR-1_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-1_IN2_Signal")
}
record(stringout,"$(P)$(H)OR-2_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),110,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-2_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),110,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-2_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-2_IN1_BI")
}
record(bo,"$(P)$(H)OR-2_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-2_IN1_Signal")
}
record(bo,"$(P)$(H)OR-2_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-2_IN1_Signal")
}
record(stringout,"$(P)$(H)OR-2_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),111,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-2_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),111,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-2_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-2_IN2_BI")
}
record(bo,"$(P)$(H)OR-2_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-2_IN2_Signal")
}
record(bo,"$(P)$(H)OR-2_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-2_IN2_Signal")
}
record(stringout,"$(P)$(H)OR-3_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),112,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-3_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),112,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-3_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-3_IN1_BI")
}
record(bo,"$(P)$(H)OR-3_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-3_IN1_Signal")
}
record(bo,"$(P)$(H)OR-3_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-3_IN1_Signal")
}
record(stringout,"$(P)$(H)OR-3_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),113,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-3_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),113,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-3_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-3_IN2_BI")
}
record(bo,"$(P)$(H)OR-3_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-3_IN2_Signal")
}
record(bo,"$(P)$(H)OR-3_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-3_IN2_Signal")
}
record(stringout,"$(P)$(H)OR-4_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),114,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-4_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),114,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-4_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-4_IN1_BI")
}
record(bo,"$(P)$(H)OR-4_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-4_IN1_Signal")
}
record(bo,"$(P)$(H)OR-4_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-4_IN1_Signal")
}
record(stringout,"$(P)$(H)OR-4_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),115,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)OR-4_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),115,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-4_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-4_IN2_BI")
}
record(bo,"$(P)$(H)OR-4_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-4_IN2_Signal")
}
record(bo,"$(P)$(H)OR-4_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-4_IN2_Signal")
}
record(stringout,"$(P)$(H)XOR-1_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),116,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)XOR-1_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),116,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)XOR-1_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)XOR-1_IN1_BI")
}
record(bo,"$(P)$(H)XOR-1_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)XOR-1_IN1_Signal")
}
record(bo,"$(P)$(H)XOR-1_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)XOR-1_IN1_Signal")
}
record(stringout,"$(P)$(H)XOR-1_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),117,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)XOR-1_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),117,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)XOR-1_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)XOR-1_IN2_BI")
}
record(bo,"$(P)$(H)XOR-1_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)XOR-1_IN2_Signal")
}
record(bo,"$(P)$(H)XOR-1_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)XOR-1_IN2_Signal")
}
record(stringout,"$(P)$(H)XOR-2_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),118,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)XOR-2_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),118,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)XOR-2_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)XOR-2_IN1_BI")
}
record(bo,"$(P)$(H)XOR-2_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)XOR-2_IN1_Signal")
}
record(bo,"$(P)$(H)XOR-2_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)XOR-2_IN1_Signal")
}
record(stringout,"$(P)$(H)XOR-2_IN2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),119,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)XOR-2_IN2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),119,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)XOR-2_IN2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)XOR-2_IN2_BI")
}
record(bo,"$(P)$(H)XOR-2_IN2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)XOR-2_IN2_Signal")
}
record(bo,"$(P)$(H)XOR-2_IN2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)XOR-2_IN2_Signal")
}
record(stringout,"$(P)$(H)BUFFER-1_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),120,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)BUFFER-1_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),120,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-1_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-1_IN_BI")
}
record(bo,"$(P)$(H)BUFFER-1_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-1_IN_Signal")
}
record(bo,"$(P)$(H)BUFFER-1_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-1_IN_Signal")
}
record(stringout,"$(P)$(H)BUFFER-2_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),121,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)BUFFER-2_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),121,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-2_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-2_IN_BI")
}
record(bo,"$(P)$(H)BUFFER-2_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-2_IN_Signal")
}
record(bo,"$(P)$(H)BUFFER-2_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-2_IN_Signal")
}
record(stringout,"$(P)$(H)BUFFER-3_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),122,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)BUFFER-3_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),122,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-3_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-3_IN_BI")
}
record(bo,"$(P)$(H)BUFFER-3_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-3_IN_Signal")
}
record(bo,"$(P)$(H)BUFFER-3_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-3_IN_Signal")
}
record(stringout,"$(P)$(H)BUFFER-4_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),123,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)BUFFER-4_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),123,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-4_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-4_IN_BI")
}
record(bo,"$(P)$(H)BUFFER-4_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-4_IN_Signal")
}
record(bo,"$(P)$(H)BUFFER-4_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-4_IN_Signal")
}
record(stringout,"$(P)$(H)DFF-1_D_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),124,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-1_D_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),124,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-1_D_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-1_D_BI")
}
record(bo,"$(P)$(H)DFF-1_D_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-1_D_Signal")
}
record(bo,"$(P)$(H)DFF-1_D_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-1_D_Signal")
}
record(stringout,"$(P)$(H)DFF-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),125,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),125,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-1_CLOCK_BI")
}
record(bo,"$(P)$(H)DFF-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)DFF-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DFF-1_SET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),126,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-1_SET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),126,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-1_SET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-1_SET_BI")
}
record(bo,"$(P)$(H)DFF-1_SET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-1_SET_Signal")
}
record(bo,"$(P)$(H)DFF-1_SET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-1_SET_Signal")
}
record(stringout,"$(P)$(H)DFF-1_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),127,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-1_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),127,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-1_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-1_CLEAR_BI")
}
record(bo,"$(P)$(H)DFF-1_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-1_CLEAR_Signal")
}
record(bo,"$(P)$(H)DFF-1_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-1_CLEAR_Signal")
}
record(stringout,"$(P)$(H)DFF-2_D_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),128,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-2_D_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),128,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-2_D_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-2_D_BI")
}
record(bo,"$(P)$(H)DFF-2_D_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-2_D_Signal")
}
record(bo,"$(P)$(H)DFF-2_D_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-2_D_Signal")
}
record(stringout,"$(P)$(H)DFF-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),129,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),129,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-2_CLOCK_BI")
}
record(bo,"$(P)$(H)DFF-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)DFF-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DFF-2_SET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),130,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-2_SET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),130,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-2_SET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-2_SET_BI")
}
record(bo,"$(P)$(H)DFF-2_SET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-2_SET_Signal")
}
record(bo,"$(P)$(H)DFF-2_SET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-2_SET_Signal")
}
record(stringout,"$(P)$(H)DFF-2_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),131,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-2_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),131,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-2_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-2_CLEAR_BI")
}
record(bo,"$(P)$(H)DFF-2_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-2_CLEAR_Signal")
}
record(bo,"$(P)$(H)DFF-2_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-2_CLEAR_Signal")
}
record(stringout,"$(P)$(H)DFF-3_D_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),132,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-3_D_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),132,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-3_D_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-3_D_BI")
}
record(bo,"$(P)$(H)DFF-3_D_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-3_D_Signal")
}
record(bo,"$(P)$(H)DFF-3_D_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-3_D_Signal")
}
record(stringout,"$(P)$(H)DFF-3_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),133,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-3_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),133,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-3_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-3_CLOCK_BI")
}
record(bo,"$(P)$(H)DFF-3_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-3_CLOCK_Signal")
}
record(bo,"$(P)$(H)DFF-3_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-3_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DFF-3_SET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),134,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-3_SET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),134,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-3_SET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-3_SET_BI")
}
record(bo,"$(P)$(H)DFF-3_SET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-3_SET_Signal")
}
record(bo,"$(P)$(H)DFF-3_SET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-3_SET_Signal")
}
record(stringout,"$(P)$(H)DFF-3_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),135,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-3_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),135,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-3_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-3_CLEAR_BI")
}
record(bo,"$(P)$(H)DFF-3_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-3_CLEAR_Signal")
}
record(bo,"$(P)$(H)DFF-3_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-3_CLEAR_Signal")
}
record(stringout,"$(P)$(H)DFF-4_D_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),136,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-4_D_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),136,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-4_D_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-4_D_BI")
}
record(bo,"$(P)$(H)DFF-4_D_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-4_D_Signal")
}
record(bo,"$(P)$(H)DFF-4_D_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-4_D_Signal")
}
record(stringout,"$(P)$(H)DFF-4_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),137,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-4_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),137,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-4_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-4_CLOCK_BI")
}
record(bo,"$(P)$(H)DFF-4_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-4_CLOCK_Signal")
}
record(bo,"$(P)$(H)DFF-4_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-4_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DFF-4_SET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),138,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-4_SET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),138,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-4_SET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-4_SET_BI")
}
record(bo,"$(P)$(H)DFF-4_SET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-4_SET_Signal")
}
record(bo,"$(P)$(H)DFF-4_SET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-4_SET_Signal")
}
record(stringout,"$(P)$(H)DFF-4_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),139,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DFF-4_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),139,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-4_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-4_CLEAR_BI")
}
record(bo,"$(P)$(H)DFF-4_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-4_CLEAR_Signal")
}
record(bo,"$(P)$(H)DFF-4_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-4_CLEAR_Signal")
}
record(stringout,"$(P)$(H)DnCntr-1_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),140,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-1_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),140,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-1_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-1_ENABLE_BI")
}
record(bo,"$(P)$(H)DnCntr-1_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-1_ENABLE_Signal")
}
record(bo,"$(P)$(H)DnCntr-1_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-1_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DnCntr-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),141,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),141,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-1_CLOCK_BI")
}
record(bo,"$(P)$(H)DnCntr-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)DnCntr-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DnCntr-1_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),142,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-1_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),142,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-1_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-1_LOAD_BI")
}
record(bo,"$(P)$(H)DnCntr-1_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-1_LOAD_Signal")
}
record(bo,"$(P)$(H)DnCntr-1_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-1_LOAD_Signal")
}
record(stringout,"$(P)$(H)DnCntr-2_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),143,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-2_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),143,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-2_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-2_ENABLE_BI")
}
record(bo,"$(P)$(H)DnCntr-2_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-2_ENABLE_Signal")
}
record(bo,"$(P)$(H)DnCntr-2_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-2_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DnCntr-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),144,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),144,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-2_CLOCK_BI")
}
record(bo,"$(P)$(H)DnCntr-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)DnCntr-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DnCntr-2_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),145,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-2_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),145,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-2_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-2_LOAD_BI")
}
record(bo,"$(P)$(H)DnCntr-2_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-2_LOAD_Signal")
}
record(bo,"$(P)$(H)DnCntr-2_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-2_LOAD_Signal")
}
record(stringout,"$(P)$(H)DnCntr-3_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),146,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-3_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),146,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-3_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-3_ENABLE_BI")
}
record(bo,"$(P)$(H)DnCntr-3_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-3_ENABLE_Signal")
}
record(bo,"$(P)$(H)DnCntr-3_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-3_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DnCntr-3_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),147,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-3_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),147,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-3_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-3_CLOCK_BI")
}
record(bo,"$(P)$(H)DnCntr-3_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-3_CLOCK_Signal")
}
record(bo,"$(P)$(H)DnCntr-3_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-3_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DnCntr-3_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),148,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-3_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),148,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-3_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-3_LOAD_BI")
}
record(bo,"$(P)$(H)DnCntr-3_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-3_LOAD_Signal")
}
record(bo,"$(P)$(H)DnCntr-3_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-3_LOAD_Signal")
}
record(stringout,"$(P)$(H)DnCntr-4_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),149,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-4_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),149,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-4_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-4_ENABLE_BI")
}
record(bo,"$(P)$(H)DnCntr-4_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-4_ENABLE_Signal")
}
record(bo,"$(P)$(H)DnCntr-4_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-4_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DnCntr-4_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),150,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-4_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),150,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-4_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-4_CLOCK_BI")
}
record(bo,"$(P)$(H)DnCntr-4_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-4_CLOCK_Signal")
}
record(bo,"$(P)$(H)DnCntr-4_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-4_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DnCntr-4_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),151,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DnCntr-4_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),151,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-4_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-4_LOAD_BI")
}
record(bo,"$(P)$(H)DnCntr-4_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-4_LOAD_Signal")
}
record(bo,"$(P)$(H)DnCntr-4_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-4_LOAD_Signal")
}
record(stringout,"$(P)$(H)UpCntr-1_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),152,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-1_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),152,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-1_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-1_ENABLE_BI")
}
record(bo,"$(P)$(H)UpCntr-1_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-1_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpCntr-1_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-1_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpCntr-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),153,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),153,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-1_CLOCK_BI")
}
record(bo,"$(P)$(H)UpCntr-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpCntr-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpCntr-1_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),154,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-1_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),154,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-1_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-1_CLEAR_BI")
}
record(bo,"$(P)$(H)UpCntr-1_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-1_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpCntr-1_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-1_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpCntr-2_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),155,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-2_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),155,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-2_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-2_ENABLE_BI")
}
record(bo,"$(P)$(H)UpCntr-2_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-2_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpCntr-2_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-2_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpCntr-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),156,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),156,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-2_CLOCK_BI")
}
record(bo,"$(P)$(H)UpCntr-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpCntr-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpCntr-2_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),157,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-2_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),157,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-2_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-2_CLEAR_BI")
}
record(bo,"$(P)$(H)UpCntr-2_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-2_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpCntr-2_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-2_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpCntr-3_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),158,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-3_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),158,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-3_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-3_ENABLE_BI")
}
record(bo,"$(P)$(H)UpCntr-3_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-3_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpCntr-3_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-3_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpCntr-3_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),159,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-3_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),159,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-3_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-3_CLOCK_BI")
}
record(bo,"$(P)$(H)UpCntr-3_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-3_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpCntr-3_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-3_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpCntr-3_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),160,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-3_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),160,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-3_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-3_CLEAR_BI")
}
record(bo,"$(P)$(H)UpCntr-3_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-3_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpCntr-3_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-3_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpCntr-4_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),161,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-4_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),161,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-4_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-4_ENABLE_BI")
}
record(bo,"$(P)$(H)UpCntr-4_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-4_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpCntr-4_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-4_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpCntr-4_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),162,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-4_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),162,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-4_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-4_CLOCK_BI")
}
record(bo,"$(P)$(H)UpCntr-4_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-4_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpCntr-4_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-4_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpCntr-4_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),163,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpCntr-4_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),163,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpCntr-4_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpCntr-4_CLEAR_BI")
}
record(bo,"$(P)$(H)UpCntr-4_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpCntr-4_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpCntr-4_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpCntr-4_CLEAR_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-1_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),164,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DEMUX2-1_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),164,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-1_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-1_IN_BI")
}
record(bo,"$(P)$(H)DEMUX2-1_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-1_IN_Signal")
}
record(bo,"$(P)$(H)DEMUX2-1_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-1_IN_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-1_SEL_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),165,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DEMUX2-1_SEL_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),165,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-1_SEL_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-1_SEL_BI")
}
record(bo,"$(P)$(H)DEMUX2-1_SEL_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-1_SEL_Signal")
}
record(bo,"$(P)$(H)DEMUX2-1_SEL_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-1_SEL_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-2_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),166,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DEMUX2-2_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),166,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-2_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-2_IN_BI")
}
record(bo,"$(P)$(H)DEMUX2-2_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-2_IN_Signal")
}
record(bo,"$(P)$(H)DEMUX2-2_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-2_IN_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-2_SEL_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),167,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DEMUX2-2_SEL_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),167,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-2_SEL_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-2_SEL_BI")
}
record(bo,"$(P)$(H)DEMUX2-2_SEL_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-2_SEL_Signal")
}
record(bo,"$(P)$(H)DEMUX2-2_SEL_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-2_SEL_Signal")
}
record(stringout,"$(P)$(H)MUX2-1_IN0_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),168,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)MUX2-1_IN0_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),168,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-1_IN0_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-1_IN0_BI")
}
record(bo,"$(P)$(H)MUX2-1_IN0_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-1_IN0_Signal")
}
record(bo,"$(P)$(H)MUX2-1_IN0_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-1_IN0_Signal")
}
record(stringout,"$(P)$(H)MUX2-1_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),169,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)MUX2-1_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),169,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-1_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-1_IN1_BI")
}
record(bo,"$(P)$(H)MUX2-1_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-1_IN1_Signal")
}
record(bo,"$(P)$(H)MUX2-1_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-1_IN1_Signal")
}
record(stringout,"$(P)$(H)MUX2-1_SEL_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),170,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)MUX2-1_SEL_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),170,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-1_SEL_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-1_SEL_BI")
}
record(bo,"$(P)$(H)MUX2-1_SEL_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-1_SEL_Signal")
}
record(bo,"$(P)$(H)MUX2-1_SEL_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-1_SEL_Signal")
}
record(stringout,"$(P)$(H)MUX2-2_IN0_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),171,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)MUX2-2_IN0_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),171,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-2_IN0_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-2_IN0_BI")
}
record(bo,"$(P)$(H)MUX2-2_IN0_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-2_IN0_Signal")
}
record(bo,"$(P)$(H)MUX2-2_IN0_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-2_IN0_Signal")
}
record(stringout,"$(P)$(H)MUX2-2_IN1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),172,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)MUX2-2_IN1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),172,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-2_IN1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-2_IN1_BI")
}
record(bo,"$(P)$(H)MUX2-2_IN1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-2_IN1_Signal")
}
record(bo,"$(P)$(H)MUX2-2_IN1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-2_IN1_Signal")
}
record(stringout,"$(P)$(H)MUX2-2_SEL_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),173,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)MUX2-2_SEL_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),173,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-2_SEL_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-2_SEL_BI")
}
record(bo,"$(P)$(H)MUX2-2_SEL_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-2_SEL_Signal")
}
record(bo,"$(P)$(H)MUX2-2_SEL_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-2_SEL_Signal")
}
record(stringout,"$(P)$(H)DivByN-1_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),174,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-1_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),174,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-1_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-1_ENABLE_BI")
}
record(bo,"$(P)$(H)DivByN-1_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-1_ENABLE_Signal")
}
record(bo,"$(P)$(H)DivByN-1_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-1_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DivByN-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),175,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),175,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-1_CLOCK_BI")
}
record(bo,"$(P)$(H)DivByN-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)DivByN-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DivByN-1_RESET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),176,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-1_RESET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),176,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-1_RESET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-1_RESET_BI")
}
record(bo,"$(P)$(H)DivByN-1_RESET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-1_RESET_Signal")
}
record(bo,"$(P)$(H)DivByN-1_RESET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-1_RESET_Signal")
}
record(stringout,"$(P)$(H)DivByN-2_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),177,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-2_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),177,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-2_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-2_ENABLE_BI")
}
record(bo,"$(P)$(H)DivByN-2_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-2_ENABLE_Signal")
}
record(bo,"$(P)$(H)DivByN-2_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-2_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DivByN-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),178,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),178,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-2_CLOCK_BI")
}
record(bo,"$(P)$(H)DivByN-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)DivByN-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DivByN-2_RESET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),179,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-2_RESET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),179,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-2_RESET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-2_RESET_BI")
}
record(bo,"$(P)$(H)DivByN-2_RESET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-2_RESET_Signal")
}
record(bo,"$(P)$(H)DivByN-2_RESET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-2_RESET_Signal")
}
record(stringout,"$(P)$(H)DivByN-3_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),180,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-3_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),180,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-3_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-3_ENABLE_BI")
}
record(bo,"$(P)$(H)DivByN-3_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-3_ENABLE_Signal")
}
record(bo,"$(P)$(H)DivByN-3_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-3_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DivByN-3_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),181,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-3_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),181,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-3_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-3_CLOCK_BI")
}
record(bo,"$(P)$(H)DivByN-3_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-3_CLOCK_Signal")
}
record(bo,"$(P)$(H)DivByN-3_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-3_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DivByN-3_RESET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),182,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-3_RESET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),182,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-3_RESET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-3_RESET_BI")
}
record(bo,"$(P)$(H)DivByN-3_RESET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-3_RESET_Signal")
}
record(bo,"$(P)$(H)DivByN-3_RESET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-3_RESET_Signal")
}
record(stringout,"$(P)$(H)DivByN-4_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),183,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-4_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),183,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-4_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-4_ENABLE_BI")
}
record(bo,"$(P)$(H)DivByN-4_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-4_ENABLE_Signal")
}
record(bo,"$(P)$(H)DivByN-4_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-4_ENABLE_Signal")
}
record(stringout,"$(P)$(H)DivByN-4_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),184,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-4_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),184,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-4_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-4_CLOCK_BI")
}
record(bo,"$(P)$(H)DivByN-4_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-4_CLOCK_Signal")
}
record(bo,"$(P)$(H)DivByN-4_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-4_CLOCK_Signal")
}
record(stringout,"$(P)$(H)DivByN-4_RESET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),185,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)DivByN-4_RESET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),185,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-4_RESET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-4_RESET_BI")
}
record(bo,"$(P)$(H)DivByN-4_RESET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-4_RESET_Signal")
}
record(bo,"$(P)$(H)DivByN-4_RESET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-4_RESET_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-1_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),186,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-1_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),186,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-1_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-1_ENABLE_BI")
}
record(bo,"$(P)$(H)UpDnCntr-1_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-1_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-1_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-1_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),187,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),187,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-1_CLOCK_BI")
}
record(bo,"$(P)$(H)UpDnCntr-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-1_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),188,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-1_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),188,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-1_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-1_LOAD_BI")
}
record(bo,"$(P)$(H)UpDnCntr-1_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-1_LOAD_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-1_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-1_LOAD_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-1_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),189,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-1_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),189,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-1_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-1_CLEAR_BI")
}
record(bo,"$(P)$(H)UpDnCntr-1_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-1_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-1_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-1_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-1_UPDOWN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),190,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-1_UPDOWN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),190,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-1_UPDOWN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-1_UPDOWN_BI")
}
record(bo,"$(P)$(H)UpDnCntr-1_UPDOWN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-1_UPDOWN_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-1_UPDOWN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-1_UPDOWN_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-2_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),191,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-2_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),191,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-2_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-2_ENABLE_BI")
}
record(bo,"$(P)$(H)UpDnCntr-2_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-2_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-2_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-2_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),192,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),192,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-2_CLOCK_BI")
}
record(bo,"$(P)$(H)UpDnCntr-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-2_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),193,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-2_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),193,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-2_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-2_LOAD_BI")
}
record(bo,"$(P)$(H)UpDnCntr-2_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-2_LOAD_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-2_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-2_LOAD_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-2_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),194,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-2_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),194,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-2_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-2_CLEAR_BI")
}
record(bo,"$(P)$(H)UpDnCntr-2_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-2_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-2_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-2_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-2_UPDOWN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),195,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-2_UPDOWN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),195,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-2_UPDOWN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-2_UPDOWN_BI")
}
record(bo,"$(P)$(H)UpDnCntr-2_UPDOWN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-2_UPDOWN_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-2_UPDOWN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-2_UPDOWN_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-3_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),196,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-3_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),196,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-3_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-3_ENABLE_BI")
}
record(bo,"$(P)$(H)UpDnCntr-3_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-3_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-3_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-3_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-3_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),197,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-3_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),197,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-3_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-3_CLOCK_BI")
}
record(bo,"$(P)$(H)UpDnCntr-3_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-3_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-3_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-3_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-3_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),198,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-3_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),198,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-3_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-3_LOAD_BI")
}
record(bo,"$(P)$(H)UpDnCntr-3_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-3_LOAD_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-3_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-3_LOAD_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-3_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),199,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-3_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),199,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-3_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-3_CLEAR_BI")
}
record(bo,"$(P)$(H)UpDnCntr-3_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-3_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-3_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-3_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-3_UPDOWN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),200,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-3_UPDOWN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),200,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-3_UPDOWN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-3_UPDOWN_BI")
}
record(bo,"$(P)$(H)UpDnCntr-3_UPDOWN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-3_UPDOWN_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-3_UPDOWN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-3_UPDOWN_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-4_ENABLE_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),201,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-4_ENABLE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),201,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-4_ENABLE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-4_ENABLE_BI")
}
record(bo,"$(P)$(H)UpDnCntr-4_ENABLE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-4_ENABLE_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-4_ENABLE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-4_ENABLE_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-4_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),202,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-4_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),202,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-4_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-4_CLOCK_BI")
}
record(bo,"$(P)$(H)UpDnCntr-4_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-4_CLOCK_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-4_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-4_CLOCK_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-4_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),203,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-4_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),203,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-4_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-4_LOAD_BI")
}
record(bo,"$(P)$(H)UpDnCntr-4_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-4_LOAD_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-4_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-4_LOAD_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-4_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),204,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-4_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),204,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-4_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-4_CLEAR_BI")
}
record(bo,"$(P)$(H)UpDnCntr-4_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-4_CLEAR_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-4_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-4_CLEAR_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-4_UPDOWN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),205,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)UpDnCntr-4_UPDOWN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),205,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-4_UPDOWN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-4_UPDOWN_BI")
}
record(bo,"$(P)$(H)UpDnCntr-4_UPDOWN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-4_UPDOWN_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-4_UPDOWN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-4_UPDOWN_Signal")
}
record(stringout,"$(P)$(H)HistScal-1_EN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),206,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)HistScal-1_EN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),206,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HistScal-1_EN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HistScal-1_EN_BI")
}
record(bo,"$(P)$(H)HistScal-1_EN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HistScal-1_EN_Signal")
}
record(bo,"$(P)$(H)HistScal-1_EN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HistScal-1_EN_Signal")
}
record(stringout,"$(P)$(H)HistScal-1_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),207,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)HistScal-1_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),207,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HistScal-1_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HistScal-1_CLEAR_BI")
}
record(bo,"$(P)$(H)HistScal-1_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HistScal-1_CLEAR_Signal")
}
record(bo,"$(P)$(H)HistScal-1_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HistScal-1_CLEAR_Signal")
}
record(stringout,"$(P)$(H)HistScal-1_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),208,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)HistScal-1_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),208,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HistScal-1_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HistScal-1_CLK_BI")
}
record(bo,"$(P)$(H)HistScal-1_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HistScal-1_CLK_Signal")
}
record(bo,"$(P)$(H)HistScal-1_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HistScal-1_CLK_Signal")
}
record(stringout,"$(P)$(H)HistScal-1_SYNC_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),209,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)HistScal-1_SYNC_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),209,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HistScal-1_SYNC_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HistScal-1_SYNC_BI")
}
record(bo,"$(P)$(H)HistScal-1_SYNC_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HistScal-1_SYNC_Signal")
}
record(bo,"$(P)$(H)HistScal-1_SYNC_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HistScal-1_SYNC_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),210,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),210,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_CLOCK_BI")
}
record(bo,"$(P)$(H)QuadDec-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_A_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),211,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-1_A_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),211,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_A_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_A_BI")
}
record(bo,"$(P)$(H)QuadDec-1_A_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_A_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_A_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_A_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_B_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),212,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-1_B_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),212,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_B_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_B_BI")
}
record(bo,"$(P)$(H)QuadDec-1_B_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_B_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_B_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_B_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_MISSCLR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),213,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-1_MISSCLR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),213,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_MISSCLR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_MISSCLR_BI")
}
record(bo,"$(P)$(H)QuadDec-1_MISSCLR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_MISSCLR_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_MISSCLR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_MISSCLR_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),214,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),214,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_CLOCK_BI")
}
record(bo,"$(P)$(H)QuadDec-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_A_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),215,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-2_A_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),215,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_A_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_A_BI")
}
record(bo,"$(P)$(H)QuadDec-2_A_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_A_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_A_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_A_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_B_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),216,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-2_B_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),216,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_B_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_B_BI")
}
record(bo,"$(P)$(H)QuadDec-2_B_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_B_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_B_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_B_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_MISSCLR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),217,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)QuadDec-2_MISSCLR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),217,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_MISSCLR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_MISSCLR_BI")
}
record(bo,"$(P)$(H)QuadDec-2_MISSCLR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_MISSCLR_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_MISSCLR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_MISSCLR_Signal")
}
record(stringout,"$(P)$(H)GateDly-1_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),218,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-1_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),218,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-1_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-1_IN_BI")
}
record(bo,"$(P)$(H)GateDly-1_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-1_IN_Signal")
}
record(bo,"$(P)$(H)GateDly-1_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-1_IN_Signal")
}
record(stringout,"$(P)$(H)GateDly-1_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),219,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-1_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),219,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-1_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-1_CLK_BI")
}
record(bo,"$(P)$(H)GateDly-1_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-1_CLK_Signal")
}
record(bo,"$(P)$(H)GateDly-1_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-1_CLK_Signal")
}
record(stringout,"$(P)$(H)GateDly-2_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),220,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-2_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),220,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-2_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-2_IN_BI")
}
record(bo,"$(P)$(H)GateDly-2_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-2_IN_Signal")
}
record(bo,"$(P)$(H)GateDly-2_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-2_IN_Signal")
}
record(stringout,"$(P)$(H)GateDly-2_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),221,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-2_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),221,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-2_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-2_CLK_BI")
}
record(bo,"$(P)$(H)GateDly-2_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-2_CLK_Signal")
}
record(bo,"$(P)$(H)GateDly-2_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-2_CLK_Signal")
}
record(stringout,"$(P)$(H)GateDly-3_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),222,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-3_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),222,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-3_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-3_IN_BI")
}
record(bo,"$(P)$(H)GateDly-3_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-3_IN_Signal")
}
record(bo,"$(P)$(H)GateDly-3_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-3_IN_Signal")
}
record(stringout,"$(P)$(H)GateDly-3_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),223,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-3_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),223,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-3_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-3_CLK_BI")
}
record(bo,"$(P)$(H)GateDly-3_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-3_CLK_Signal")
}
record(bo,"$(P)$(H)GateDly-3_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-3_CLK_Signal")
}
record(stringout,"$(P)$(H)GateDly-4_IN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),224,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-4_IN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),224,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-4_IN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-4_IN_BI")
}
record(bo,"$(P)$(H)GateDly-4_IN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-4_IN_Signal")
}
record(bo,"$(P)$(H)GateDly-4_IN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-4_IN_Signal")
}
record(stringout,"$(P)$(H)GateDly-4_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),225,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)GateDly-4_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),225,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-4_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-4_CLK_BI")
}
record(bo,"$(P)$(H)GateDly-4_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-4_CLK_Signal")
}
record(bo,"$(P)$(H)GateDly-4_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-4_CLK_Signal")
}
record(stringout,"$(P)$(H)HistScal-1_DET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),226,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)HistScal-1_DET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),226,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HistScal-1_DET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HistScal-1_DET_BI")
}
record(bo,"$(P)$(H)HistScal-1_DET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HistScal-1_DET_Signal")
}
record(bo,"$(P)$(H)HistScal-1_DET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HistScal-1_DET_Signal")
}
record(stringout,"$(P)$(H)FreqCntr-1_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),227,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FreqCntr-1_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),227,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FreqCntr-1_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FreqCntr-1_CLK_BI")
}
record(bo,"$(P)$(H)FreqCntr-1_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FreqCntr-1_CLK_Signal")
}
record(bo,"$(P)$(H)FreqCntr-1_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FreqCntr-1_CLK_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_EN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),228,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)Scaler-1_EN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),228,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_EN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_EN_BI")
}
record(bo,"$(P)$(H)Scaler-1_EN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_EN_Signal")
}
record(bo,"$(P)$(H)Scaler-1_EN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_EN_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_CLR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),229,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)Scaler-1_CLR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),229,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_CLR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_CLR_BI")
}
record(bo,"$(P)$(H)Scaler-1_CLR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_CLR_Signal")
}
record(bo,"$(P)$(H)Scaler-1_CLR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_CLR_Signal")
}
record(stringout,"$(P)$(H)scalersToFIFO-1_CHADV_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),230,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)scalersToFIFO-1_CHADV_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),230,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)scalersToFIFO-1_CHADV_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)scalersToFIFO-1_CHADV_BI")
}
record(bo,"$(P)$(H)scalersToFIFO-1_CHADV_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)scalersToFIFO-1_CHADV_Signal")
}
record(bo,"$(P)$(H)scalersToFIFO-1_CHADV_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)scalersToFIFO-1_CHADV_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_A1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),255,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_A1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),255,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_A1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_A1_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_A1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_A1_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_A1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_A1_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_B1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),256,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_B1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),256,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_B1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_B1_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_B1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_B1_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_B1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_B1_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_A2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),257,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_A2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),257,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_A2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_A2_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_A2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_A2_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_A2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_A2_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_B2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),258,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_B2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),258,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_B2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_B2_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_B2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_B2_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_B2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_B2_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),259,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),259,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_CLOCK_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_CLOCK_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_CLOCK_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_MISSCLR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),260,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_MISSCLR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),260,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_MISSCLR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_MISSCLR_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_MISSCLR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_MISSCLR_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_MISSCLR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_MISSCLR_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_EN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),261,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_EN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),261,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_EN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_EN_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_EN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_EN_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_EN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_EN_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),262,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),262,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_LOAD_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_LOAD_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_LOAD_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),263,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-1_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),263,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_CLEAR_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_CLEAR_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_CLEAR_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_A1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),264,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_A1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),264,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_A1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_A1_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_A1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_A1_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_A1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_A1_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_B1_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),265,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_B1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),265,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_B1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_B1_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_B1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_B1_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_B1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_B1_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_A2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),266,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_A2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),266,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_A2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_A2_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_A2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_A2_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_A2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_A2_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_B2_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),267,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_B2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),267,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_B2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_B2_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_B2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_B2_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_B2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_B2_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_CLOCK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),268,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),268,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_CLOCK_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_CLOCK_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_CLOCK_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_MISSCLR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),269,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_MISSCLR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),269,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_MISSCLR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_MISSCLR_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_MISSCLR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_MISSCLR_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_MISSCLR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_MISSCLR_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_EN_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),270,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_EN_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),270,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_EN_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_EN_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_EN_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_EN_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_EN_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_EN_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_LOAD_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),271,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_LOAD_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),271,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_LOAD_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_LOAD_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_LOAD_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_LOAD_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_LOAD_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_LOAD_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_CLEAR_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),272,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)pixelTrig-2_CLEAR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),272,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_CLEAR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_CLEAR_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_CLEAR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_CLEAR_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_CLEAR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_CLEAR_Signal")
}
record(stringout,"$(P)$(H)scalToStream-1_CHADV_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),273,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)scalToStream-1_CHADV_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),273,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)scalToStream-1_CHADV_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)scalToStream-1_CHADV_BI")
}
record(bo,"$(P)$(H)scalToStream-1_CHADV_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)scalToStream-1_CHADV_Signal")
}
record(bo,"$(P)$(H)scalToStream-1_CHADV_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)scalToStream-1_CHADV_Signal")
}
record(stringout,"$(P)$(H)HistScal-1_READ_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),278,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)HistScal-1_READ_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),278,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HistScal-1_READ_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HistScal-1_READ_BI")
}
record(bo,"$(P)$(H)HistScal-1_READ_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HistScal-1_READ_Signal")
}
record(bo,"$(P)$(H)HistScal-1_READ_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HistScal-1_READ_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_CNT_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),281,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)Scaler-1_CNT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),281,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_CNT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_CNT_BI")
}
record(bo,"$(P)$(H)Scaler-1_CNT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_CNT_Signal")
}
record(bo,"$(P)$(H)Scaler-1_CNT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_CNT_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_STOP_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),282,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)Scaler-1_STOP_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),282,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_STOP_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_STOP_BI")
}
record(bo,"$(P)$(H)Scaler-1_STOP_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_STOP_Signal")
}
record(bo,"$(P)$(H)Scaler-1_STOP_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_STOP_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_CLK_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),283,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)Scaler-1_CLK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),283,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_CLK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_CLK_BI")
}
record(bo,"$(P)$(H)Scaler-1_CLK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_CLK_Signal")
}
record(bo,"$(P)$(H)Scaler-1_CLK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_CLK_Signal")
}
record(stringout,"$(P)$(H)scalToStream-1_RESET_Signal") {
	field(DESC,"IN")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	# mask is bits ndaaaaa, where 'n' says "negate", 'd' is direct-set bit value
	# (used if address bits 'a' are all zero).
	field(OUT,"@asynMask($(PORT),299,0x7f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)scalToStream-1_RESET_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),299,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)scalToStream-1_RESET_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)scalToStream-1_RESET_BI")
}
record(bo,"$(P)$(H)scalToStream-1_RESET_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)scalToStream-1_RESET_Signal")
}
record(bo,"$(P)$(H)scalToStream-1_RESET_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)scalToStream-1_RESET_Signal")
}
record(stringout,"$(P)$(H)AND-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),0,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)AND-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),0,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-1_OUT_BI")
}
record(bo,"$(P)$(H)AND-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-1_OUT_Signal")
}
record(bo,"$(P)$(H)AND-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-1_OUT_Signal")
}
record(stringout,"$(P)$(H)AND-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),1,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)AND-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),1,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-2_OUT_BI")
}
record(bo,"$(P)$(H)AND-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-2_OUT_Signal")
}
record(bo,"$(P)$(H)AND-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-2_OUT_Signal")
}
record(stringout,"$(P)$(H)AND-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),2,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)AND-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),2,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-3_OUT_BI")
}
record(bo,"$(P)$(H)AND-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-3_OUT_Signal")
}
record(bo,"$(P)$(H)AND-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-3_OUT_Signal")
}
record(stringout,"$(P)$(H)AND-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),3,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)AND-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),3,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)AND-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)AND-4_OUT_BI")
}
record(bo,"$(P)$(H)AND-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)AND-4_OUT_Signal")
}
record(bo,"$(P)$(H)AND-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)AND-4_OUT_Signal")
}
record(stringout,"$(P)$(H)OR-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),4,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)OR-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),4,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-1_OUT_BI")
}
record(bo,"$(P)$(H)OR-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-1_OUT_Signal")
}
record(bo,"$(P)$(H)OR-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-1_OUT_Signal")
}
record(stringout,"$(P)$(H)OR-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),5,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)OR-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),5,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-2_OUT_BI")
}
record(bo,"$(P)$(H)OR-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-2_OUT_Signal")
}
record(bo,"$(P)$(H)OR-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-2_OUT_Signal")
}
record(stringout,"$(P)$(H)OR-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),6,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)OR-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),6,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-3_OUT_BI")
}
record(bo,"$(P)$(H)OR-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-3_OUT_Signal")
}
record(bo,"$(P)$(H)OR-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-3_OUT_Signal")
}
record(stringout,"$(P)$(H)OR-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),7,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)OR-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),7,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)OR-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)OR-4_OUT_BI")
}
record(bo,"$(P)$(H)OR-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)OR-4_OUT_Signal")
}
record(bo,"$(P)$(H)OR-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)OR-4_OUT_Signal")
}
record(stringout,"$(P)$(H)XOR-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),8,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)XOR-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),8,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)XOR-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)XOR-1_OUT_BI")
}
record(bo,"$(P)$(H)XOR-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)XOR-1_OUT_Signal")
}
record(bo,"$(P)$(H)XOR-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)XOR-1_OUT_Signal")
}
record(stringout,"$(P)$(H)XOR-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),9,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)XOR-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),9,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)XOR-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)XOR-2_OUT_BI")
}
record(bo,"$(P)$(H)XOR-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)XOR-2_OUT_Signal")
}
record(bo,"$(P)$(H)XOR-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)XOR-2_OUT_Signal")
}
record(stringout,"$(P)$(H)BUFFER-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),10,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)BUFFER-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),10,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-1_OUT_BI")
}
record(bo,"$(P)$(H)BUFFER-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-1_OUT_Signal")
}
record(bo,"$(P)$(H)BUFFER-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-1_OUT_Signal")
}
record(stringout,"$(P)$(H)BUFFER-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),11,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)BUFFER-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),11,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-2_OUT_BI")
}
record(bo,"$(P)$(H)BUFFER-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-2_OUT_Signal")
}
record(bo,"$(P)$(H)BUFFER-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-2_OUT_Signal")
}
record(stringout,"$(P)$(H)BUFFER-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),12,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)BUFFER-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),12,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-3_OUT_BI")
}
record(bo,"$(P)$(H)BUFFER-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-3_OUT_Signal")
}
record(bo,"$(P)$(H)BUFFER-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-3_OUT_Signal")
}
record(stringout,"$(P)$(H)BUFFER-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),13,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)BUFFER-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),13,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)BUFFER-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)BUFFER-4_OUT_BI")
}
record(bo,"$(P)$(H)BUFFER-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)BUFFER-4_OUT_Signal")
}
record(bo,"$(P)$(H)BUFFER-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)BUFFER-4_OUT_Signal")
}
record(stringout,"$(P)$(H)DFF-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),14,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DFF-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),14,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-1_OUT_BI")
}
record(bo,"$(P)$(H)DFF-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-1_OUT_Signal")
}
record(bo,"$(P)$(H)DFF-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-1_OUT_Signal")
}
record(stringout,"$(P)$(H)DFF-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),15,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DFF-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),15,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-2_OUT_BI")
}
record(bo,"$(P)$(H)DFF-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-2_OUT_Signal")
}
record(bo,"$(P)$(H)DFF-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-2_OUT_Signal")
}
record(stringout,"$(P)$(H)DFF-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),16,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DFF-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),16,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-3_OUT_BI")
}
record(bo,"$(P)$(H)DFF-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-3_OUT_Signal")
}
record(bo,"$(P)$(H)DFF-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-3_OUT_Signal")
}
record(stringout,"$(P)$(H)DFF-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),17,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DFF-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),17,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DFF-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DFF-4_OUT_BI")
}
record(bo,"$(P)$(H)DFF-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DFF-4_OUT_Signal")
}
record(bo,"$(P)$(H)DFF-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DFF-4_OUT_Signal")
}
record(stringout,"$(P)$(H)DnCntr-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),18,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DnCntr-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),18,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-1_OUT_BI")
}
record(bo,"$(P)$(H)DnCntr-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-1_OUT_Signal")
}
record(bo,"$(P)$(H)DnCntr-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-1_OUT_Signal")
}
record(stringout,"$(P)$(H)DnCntr-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),19,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DnCntr-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),19,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-2_OUT_BI")
}
record(bo,"$(P)$(H)DnCntr-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-2_OUT_Signal")
}
record(bo,"$(P)$(H)DnCntr-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-2_OUT_Signal")
}
record(stringout,"$(P)$(H)DnCntr-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),20,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DnCntr-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),20,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-3_OUT_BI")
}
record(bo,"$(P)$(H)DnCntr-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-3_OUT_Signal")
}
record(bo,"$(P)$(H)DnCntr-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-3_OUT_Signal")
}
record(stringout,"$(P)$(H)DnCntr-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),21,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DnCntr-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),21,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DnCntr-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DnCntr-4_OUT_BI")
}
record(bo,"$(P)$(H)DnCntr-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DnCntr-4_OUT_Signal")
}
record(bo,"$(P)$(H)DnCntr-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DnCntr-4_OUT_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-1_OUT0_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),22,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DEMUX2-1_OUT0_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),22,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-1_OUT0_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-1_OUT0_BI")
}
record(bo,"$(P)$(H)DEMUX2-1_OUT0_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-1_OUT0_Signal")
}
record(bo,"$(P)$(H)DEMUX2-1_OUT0_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-1_OUT0_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-1_OUT1_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),23,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DEMUX2-1_OUT1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),23,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-1_OUT1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-1_OUT1_BI")
}
record(bo,"$(P)$(H)DEMUX2-1_OUT1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-1_OUT1_Signal")
}
record(bo,"$(P)$(H)DEMUX2-1_OUT1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-1_OUT1_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-2_OUT0_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),24,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DEMUX2-2_OUT0_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),24,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-2_OUT0_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-2_OUT0_BI")
}
record(bo,"$(P)$(H)DEMUX2-2_OUT0_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-2_OUT0_Signal")
}
record(bo,"$(P)$(H)DEMUX2-2_OUT0_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-2_OUT0_Signal")
}
record(stringout,"$(P)$(H)DEMUX2-2_OUT1_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),25,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DEMUX2-2_OUT1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),25,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DEMUX2-2_OUT1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DEMUX2-2_OUT1_BI")
}
record(bo,"$(P)$(H)DEMUX2-2_OUT1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DEMUX2-2_OUT1_Signal")
}
record(bo,"$(P)$(H)DEMUX2-2_OUT1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DEMUX2-2_OUT1_Signal")
}
record(stringout,"$(P)$(H)MUX2-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),26,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)MUX2-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),26,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-1_OUT_BI")
}
record(bo,"$(P)$(H)MUX2-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-1_OUT_Signal")
}
record(bo,"$(P)$(H)MUX2-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-1_OUT_Signal")
}
record(stringout,"$(P)$(H)MUX2-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),27,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)MUX2-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),27,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)MUX2-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)MUX2-2_OUT_BI")
}
record(bo,"$(P)$(H)MUX2-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)MUX2-2_OUT_Signal")
}
record(bo,"$(P)$(H)MUX2-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)MUX2-2_OUT_Signal")
}
record(stringout,"$(P)$(H)DivByN-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),28,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DivByN-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),28,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-1_OUT_BI")
}
record(bo,"$(P)$(H)DivByN-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-1_OUT_Signal")
}
record(bo,"$(P)$(H)DivByN-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-1_OUT_Signal")
}
record(stringout,"$(P)$(H)DivByN-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),29,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DivByN-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),29,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-2_OUT_BI")
}
record(bo,"$(P)$(H)DivByN-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-2_OUT_Signal")
}
record(bo,"$(P)$(H)DivByN-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-2_OUT_Signal")
}
record(stringout,"$(P)$(H)DivByN-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),30,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DivByN-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),30,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-3_OUT_BI")
}
record(bo,"$(P)$(H)DivByN-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-3_OUT_Signal")
}
record(bo,"$(P)$(H)DivByN-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-3_OUT_Signal")
}
record(stringout,"$(P)$(H)DivByN-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),31,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)DivByN-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),31,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)DivByN-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)DivByN-4_OUT_BI")
}
record(bo,"$(P)$(H)DivByN-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)DivByN-4_OUT_Signal")
}
record(bo,"$(P)$(H)DivByN-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)DivByN-4_OUT_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),32,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)UpDnCntr-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),32,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-1_OUT_BI")
}
record(bo,"$(P)$(H)UpDnCntr-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-1_OUT_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-1_OUT_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),33,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)UpDnCntr-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),33,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-2_OUT_BI")
}
record(bo,"$(P)$(H)UpDnCntr-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-2_OUT_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-2_OUT_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),34,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)UpDnCntr-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),34,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-3_OUT_BI")
}
record(bo,"$(P)$(H)UpDnCntr-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-3_OUT_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-3_OUT_Signal")
}
record(stringout,"$(P)$(H)UpDnCntr-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),35,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)UpDnCntr-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),35,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)UpDnCntr-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)UpDnCntr-4_OUT_BI")
}
record(bo,"$(P)$(H)UpDnCntr-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)UpDnCntr-4_OUT_Signal")
}
record(bo,"$(P)$(H)UpDnCntr-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)UpDnCntr-4_OUT_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_MISS_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),36,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)QuadDec-1_MISS_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),36,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_MISS_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_MISS_BI")
}
record(bo,"$(P)$(H)QuadDec-1_MISS_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_MISS_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_MISS_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_MISS_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_MISS_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),37,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)QuadDec-2_MISS_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),37,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_MISS_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_MISS_BI")
}
record(bo,"$(P)$(H)QuadDec-2_MISS_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_MISS_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_MISS_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_MISS_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_STEP_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),38,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)QuadDec-1_STEP_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),38,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_STEP_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_STEP_BI")
}
record(bo,"$(P)$(H)QuadDec-1_STEP_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_STEP_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_STEP_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_STEP_Signal")
}
record(stringout,"$(P)$(H)QuadDec-1_DIR_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),39,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)QuadDec-1_DIR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),39,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-1_DIR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-1_DIR_BI")
}
record(bo,"$(P)$(H)QuadDec-1_DIR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-1_DIR_Signal")
}
record(bo,"$(P)$(H)QuadDec-1_DIR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-1_DIR_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_STEP_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),40,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)QuadDec-2_STEP_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),40,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_STEP_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_STEP_BI")
}
record(bo,"$(P)$(H)QuadDec-2_STEP_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_STEP_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_STEP_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_STEP_Signal")
}
record(stringout,"$(P)$(H)QuadDec-2_DIR_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),41,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)QuadDec-2_DIR_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),41,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)QuadDec-2_DIR_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)QuadDec-2_DIR_BI")
}
record(bo,"$(P)$(H)QuadDec-2_DIR_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)QuadDec-2_DIR_Signal")
}
record(bo,"$(P)$(H)QuadDec-2_DIR_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)QuadDec-2_DIR_Signal")
}
record(stringout,"$(P)$(H)HW_OR-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),42,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)HW_OR-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),42,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HW_OR-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HW_OR-1_OUT_BI")
}
record(bo,"$(P)$(H)HW_OR-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HW_OR-1_OUT_Signal")
}
record(bo,"$(P)$(H)HW_OR-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HW_OR-1_OUT_Signal")
}
record(stringout,"$(P)$(H)HW_OR-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),43,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)HW_OR-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),43,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)HW_OR-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)HW_OR-2_OUT_BI")
}
record(bo,"$(P)$(H)HW_OR-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)HW_OR-2_OUT_Signal")
}
record(bo,"$(P)$(H)HW_OR-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)HW_OR-2_OUT_Signal")
}
record(stringout,"$(P)$(H)50MHZ_CLOCK_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),45,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)50MHZ_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),45,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)50MHZ_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)50MHZ_CLOCK_BI")
}
record(bo,"$(P)$(H)50MHZ_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)50MHZ_CLOCK_Signal")
}
record(bo,"$(P)$(H)50MHZ_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)50MHZ_CLOCK_Signal")
}
record(stringout,"$(P)$(H)20MHZ_CLOCK_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),46,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)20MHZ_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),46,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)20MHZ_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)20MHZ_CLOCK_BI")
}
record(bo,"$(P)$(H)20MHZ_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)20MHZ_CLOCK_Signal")
}
record(bo,"$(P)$(H)20MHZ_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)20MHZ_CLOCK_Signal")
}
record(stringout,"$(P)$(H)10MHZ_CLOCK_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),47,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)10MHZ_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),47,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)10MHZ_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)10MHZ_CLOCK_BI")
}
record(bo,"$(P)$(H)10MHZ_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)10MHZ_CLOCK_Signal")
}
record(bo,"$(P)$(H)10MHZ_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)10MHZ_CLOCK_Signal")
}
record(stringout,"$(P)$(H)GateDly-1_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),48,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)GateDly-1_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),48,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-1_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-1_OUT_BI")
}
record(bo,"$(P)$(H)GateDly-1_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-1_OUT_Signal")
}
record(bo,"$(P)$(H)GateDly-1_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-1_OUT_Signal")
}
record(stringout,"$(P)$(H)GateDly-2_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),49,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)GateDly-2_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),49,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-2_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-2_OUT_BI")
}
record(bo,"$(P)$(H)GateDly-2_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-2_OUT_Signal")
}
record(bo,"$(P)$(H)GateDly-2_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-2_OUT_Signal")
}
record(stringout,"$(P)$(H)GateDly-3_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),50,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)GateDly-3_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),50,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-3_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-3_OUT_BI")
}
record(bo,"$(P)$(H)GateDly-3_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-3_OUT_Signal")
}
record(bo,"$(P)$(H)GateDly-3_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-3_OUT_Signal")
}
record(stringout,"$(P)$(H)GateDly-4_OUT_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),51,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)GateDly-4_OUT_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),51,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)GateDly-4_OUT_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)GateDly-4_OUT_BI")
}
record(bo,"$(P)$(H)GateDly-4_OUT_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)GateDly-4_OUT_Signal")
}
record(bo,"$(P)$(H)GateDly-4_OUT_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)GateDly-4_OUT_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_TRIG_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),76,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)pixelTrig-1_TRIG_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),76,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_TRIG_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_TRIG_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_TRIG_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_TRIG_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_TRIG_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_TRIG_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-1_MISS_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),77,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)pixelTrig-1_MISS_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),77,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-1_MISS_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-1_MISS_BI")
}
record(bo,"$(P)$(H)pixelTrig-1_MISS_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-1_MISS_Signal")
}
record(bo,"$(P)$(H)pixelTrig-1_MISS_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-1_MISS_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_TRIG_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),78,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)pixelTrig-2_TRIG_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),78,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_TRIG_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_TRIG_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_TRIG_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_TRIG_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_TRIG_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_TRIG_Signal")
}
record(stringout,"$(P)$(H)pixelTrig-2_MISS_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),79,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)pixelTrig-2_MISS_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),79,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)pixelTrig-2_MISS_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)pixelTrig-2_MISS_BI")
}
record(bo,"$(P)$(H)pixelTrig-2_MISS_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)pixelTrig-2_MISS_Signal")
}
record(bo,"$(P)$(H)pixelTrig-2_MISS_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)pixelTrig-2_MISS_Signal")
}
record(stringout,"$(P)$(H)scalersToFIFO-1_WRTCK_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),80,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)scalersToFIFO-1_WRTCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),80,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)scalersToFIFO-1_WRTCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)scalersToFIFO-1_WRTCK_BI")
}
record(bo,"$(P)$(H)scalersToFIFO-1_WRTCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)scalersToFIFO-1_WRTCK_Signal")
}
record(bo,"$(P)$(H)scalersToFIFO-1_WRTCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)scalersToFIFO-1_WRTCK_Signal")
}
record(stringout,"$(P)$(H)PixelTrig_ENTRIG_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),81,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)PixelTrig_ENTRIG_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),81,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)PixelTrig_ENTRIG_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)PixelTrig_ENTRIG_BI")
}
record(bo,"$(P)$(H)PixelTrig_ENTRIG_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)PixelTrig_ENTRIG_Signal")
}
record(bo,"$(P)$(H)PixelTrig_ENTRIG_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)PixelTrig_ENTRIG_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_Q_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),82,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)Scaler-1_Q_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),82,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_Q_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_Q_BI")
}
record(bo,"$(P)$(H)Scaler-1_Q_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_Q_Signal")
}
record(bo,"$(P)$(H)Scaler-1_Q_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_Q_Signal")
}
record(stringout,"$(P)$(H)Scaler-1_CNTG_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),83,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)Scaler-1_CNTG_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),83,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)Scaler-1_CNTG_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)Scaler-1_CNTG_BI")
}
record(bo,"$(P)$(H)Scaler-1_CNTG_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)Scaler-1_CNTG_Signal")
}
record(bo,"$(P)$(H)Scaler-1_CNTG_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)Scaler-1_CNTG_Signal")
}
record(stringout,"$(P)$(H)scalToStream-1_ADVDONE_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),84,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)scalToStream-1_ADVDONE_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),84,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)scalToStream-1_ADVDONE_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)scalToStream-1_ADVDONE_BI")
}
record(bo,"$(P)$(H)scalToStream-1_ADVDONE_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)scalToStream-1_ADVDONE_Signal")
}
record(bo,"$(P)$(H)scalToStream-1_ADVDONE_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)scalToStream-1_ADVDONE_Signal")
}
record(stringout,"$(P)$(H)VAR_CLOCK_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),85,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)VAR_CLOCK_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),85,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)VAR_CLOCK_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)VAR_CLOCK_BI")
}
record(bo,"$(P)$(H)VAR_CLOCK_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)VAR_CLOCK_Signal")
}
record(bo,"$(P)$(H)VAR_CLOCK_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)VAR_CLOCK_Signal")
}
record(stringout,"$(P)$(H)scalToStream-1_FULL_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),98,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)scalToStream-1_FULL_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),98,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)scalToStream-1_FULL_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)scalToStream-1_FULL_BI")
}
record(bo,"$(P)$(H)scalToStream-1_FULL_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)scalToStream-1_FULL_Signal")
}
record(bo,"$(P)$(H)scalToStream-1_FULL_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)scalToStream-1_FULL_Signal")
}
record(stringout,"$(P)$(H)PixelTrig_TRIG_Signal") {
	field(DESC,"OUT")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),99,0x1f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)PixelTrig_TRIG_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),99,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)PixelTrig_TRIG_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)PixelTrig_TRIG_BI")
}
record(bo,"$(P)$(H)PixelTrig_TRIG_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)PixelTrig_TRIG_Signal")
}
record(bo,"$(P)$(H)PixelTrig_TRIG_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)PixelTrig_TRIG_Signal")
}
record(stringout,"$(P)$(H)FI1_Signal") {
	field(DESC,"1")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),52,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),52,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI1_BI")
}
record(bo,"$(P)$(H)FI1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI1_Signal")
}
record(bo,"$(P)$(H)FI1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI1_Signal")
}
record(stringout,"$(P)$(H)FI2_Signal") {
	field(DESC,"2")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),53,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),53,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI2_BI")
}
record(bo,"$(P)$(H)FI2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI2_Signal")
}
record(bo,"$(P)$(H)FI2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI2_Signal")
}
record(stringout,"$(P)$(H)FI3_Signal") {
	field(DESC,"3")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),54,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI3_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),54,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI3_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI3_BI")
}
record(bo,"$(P)$(H)FI3_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI3_Signal")
}
record(bo,"$(P)$(H)FI3_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI3_Signal")
}
record(stringout,"$(P)$(H)FI4_Signal") {
	field(DESC,"4")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),55,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI4_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),55,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI4_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI4_BI")
}
record(bo,"$(P)$(H)FI4_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI4_Signal")
}
record(bo,"$(P)$(H)FI4_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI4_Signal")
}
record(stringout,"$(P)$(H)FI5_Signal") {
	field(DESC,"5")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),56,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI5_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),56,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI5_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI5_BI")
}
record(bo,"$(P)$(H)FI5_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI5_Signal")
}
record(bo,"$(P)$(H)FI5_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI5_Signal")
}
record(stringout,"$(P)$(H)FI6_Signal") {
	field(DESC,"6")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),57,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI6_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),57,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI6_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI6_BI")
}
record(bo,"$(P)$(H)FI6_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI6_Signal")
}
record(bo,"$(P)$(H)FI6_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI6_Signal")
}
record(stringout,"$(P)$(H)FI7_Signal") {
	field(DESC,"7")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),58,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI7_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),58,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI7_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI7_BI")
}
record(bo,"$(P)$(H)FI7_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI7_Signal")
}
record(bo,"$(P)$(H)FI7_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI7_Signal")
}
record(stringout,"$(P)$(H)FI8_Signal") {
	field(DESC,"8")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),59,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI8_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),59,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI8_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI8_BI")
}
record(bo,"$(P)$(H)FI8_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI8_Signal")
}
record(bo,"$(P)$(H)FI8_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI8_Signal")
}
record(stringout,"$(P)$(H)FI9_Signal") {
	field(DESC,"9")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),60,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI9_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),60,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI9_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI9_BI")
}
record(bo,"$(P)$(H)FI9_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI9_Signal")
}
record(bo,"$(P)$(H)FI9_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI9_Signal")
}
record(stringout,"$(P)$(H)FI10_Signal") {
	field(DESC,"10")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),61,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI10_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),61,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI10_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI10_BI")
}
record(bo,"$(P)$(H)FI10_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI10_Signal")
}
record(bo,"$(P)$(H)FI10_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI10_Signal")
}
record(stringout,"$(P)$(H)FI11_Signal") {
	field(DESC,"11")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),62,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI11_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),62,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI11_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI11_BI")
}
record(bo,"$(P)$(H)FI11_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI11_Signal")
}
record(bo,"$(P)$(H)FI11_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI11_Signal")
}
record(stringout,"$(P)$(H)FI12_Signal") {
	field(DESC,"12")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),63,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI12_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),63,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI12_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI12_BI")
}
record(bo,"$(P)$(H)FI12_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI12_Signal")
}
record(bo,"$(P)$(H)FI12_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI12_Signal")
}
record(stringout,"$(P)$(H)FI13_Signal") {
	field(DESC,"13")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),64,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI13_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),64,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI13_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI13_BI")
}
record(bo,"$(P)$(H)FI13_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI13_Signal")
}
record(bo,"$(P)$(H)FI13_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI13_Signal")
}
record(stringout,"$(P)$(H)FI14_Signal") {
	field(DESC,"14")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),65,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI14_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),65,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI14_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI14_BI")
}
record(bo,"$(P)$(H)FI14_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI14_Signal")
}
record(bo,"$(P)$(H)FI14_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI14_Signal")
}
record(stringout,"$(P)$(H)FI15_Signal") {
	field(DESC,"15")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),66,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI15_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),66,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI15_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI15_BI")
}
record(bo,"$(P)$(H)FI15_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI15_Signal")
}
record(bo,"$(P)$(H)FI15_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI15_Signal")
}
record(stringout,"$(P)$(H)FI16_Signal") {
	field(DESC,"16")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),67,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI16_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),67,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI16_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI16_BI")
}
record(bo,"$(P)$(H)FI16_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI16_Signal")
}
record(bo,"$(P)$(H)FI16_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI16_Signal")
}
record(stringout,"$(P)$(H)FI17_Signal") {
	field(DESC,"17")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),68,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI17_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),68,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI17_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI17_BI")
}
record(bo,"$(P)$(H)FI17_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI17_Signal")
}
record(bo,"$(P)$(H)FI17_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI17_Signal")
}
record(stringout,"$(P)$(H)FI18_Signal") {
	field(DESC,"18")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),69,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI18_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),69,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI18_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI18_BI")
}
record(bo,"$(P)$(H)FI18_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI18_Signal")
}
record(bo,"$(P)$(H)FI18_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI18_Signal")
}
record(stringout,"$(P)$(H)FI19_Signal") {
	field(DESC,"19")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),70,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI19_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),70,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI19_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI19_BI")
}
record(bo,"$(P)$(H)FI19_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI19_Signal")
}
record(bo,"$(P)$(H)FI19_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI19_Signal")
}
record(stringout,"$(P)$(H)FI20_Signal") {
	field(DESC,"20")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),71,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI20_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),71,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI20_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI20_BI")
}
record(bo,"$(P)$(H)FI20_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI20_Signal")
}
record(bo,"$(P)$(H)FI20_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI20_Signal")
}
record(stringout,"$(P)$(H)FI21_Signal") {
	field(DESC,"21")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),72,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI21_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),72,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI21_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI21_BI")
}
record(bo,"$(P)$(H)FI21_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI21_Signal")
}
record(bo,"$(P)$(H)FI21_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI21_Signal")
}
record(stringout,"$(P)$(H)FI22_Signal") {
	field(DESC,"22")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),73,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI22_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),73,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI22_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI22_BI")
}
record(bo,"$(P)$(H)FI22_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI22_Signal")
}
record(bo,"$(P)$(H)FI22_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI22_Signal")
}
record(stringout,"$(P)$(H)FI23_Signal") {
	field(DESC,"23")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),74,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI23_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),74,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI23_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI23_BI")
}
record(bo,"$(P)$(H)FI23_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI23_Signal")
}
record(bo,"$(P)$(H)FI23_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI23_Signal")
}
record(stringout,"$(P)$(H)FI24_Signal") {
	field(DESC,"24")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),75,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI24_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),75,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI24_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI24_BI")
}
record(bo,"$(P)$(H)FI24_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI24_Signal")
}
record(bo,"$(P)$(H)FI24_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI24_Signal")
}
record(stringout,"$(P)$(H)FI25_Signal") {
	field(DESC,"25")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),86,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI25_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),86,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI25_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI25_BI")
}
record(bo,"$(P)$(H)FI25_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI25_Signal")
}
record(bo,"$(P)$(H)FI25_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI25_Signal")
}
record(stringout,"$(P)$(H)FI26_Signal") {
	field(DESC,"26")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),87,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI26_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),87,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI26_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI26_BI")
}
record(bo,"$(P)$(H)FI26_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI26_Signal")
}
record(bo,"$(P)$(H)FI26_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI26_Signal")
}
record(stringout,"$(P)$(H)FI27_Signal") {
	field(DESC,"27")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),88,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI27_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),88,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI27_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI27_BI")
}
record(bo,"$(P)$(H)FI27_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI27_Signal")
}
record(bo,"$(P)$(H)FI27_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI27_Signal")
}
record(stringout,"$(P)$(H)FI28_Signal") {
	field(DESC,"28")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),89,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI28_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),89,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI28_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI28_BI")
}
record(bo,"$(P)$(H)FI28_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI28_Signal")
}
record(bo,"$(P)$(H)FI28_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI28_Signal")
}
record(stringout,"$(P)$(H)FI29_Signal") {
	field(DESC,"29")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),90,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI29_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),90,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI29_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI29_BI")
}
record(bo,"$(P)$(H)FI29_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI29_Signal")
}
record(bo,"$(P)$(H)FI29_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI29_Signal")
}
record(stringout,"$(P)$(H)FI30_Signal") {
	field(DESC,"30")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),91,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI30_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),91,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI30_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI30_BI")
}
record(bo,"$(P)$(H)FI30_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI30_Signal")
}
record(bo,"$(P)$(H)FI30_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI30_Signal")
}
record(stringout,"$(P)$(H)FI31_Signal") {
	field(DESC,"31")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),92,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI31_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),92,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI31_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI31_BI")
}
record(bo,"$(P)$(H)FI31_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI31_Signal")
}
record(bo,"$(P)$(H)FI31_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI31_Signal")
}
record(stringout,"$(P)$(H)FI32_Signal") {
	field(DESC,"32")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),93,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI32_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),93,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI32_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI32_BI")
}
record(bo,"$(P)$(H)FI32_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI32_Signal")
}
record(bo,"$(P)$(H)FI32_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI32_Signal")
}
record(stringout,"$(P)$(H)FI33_Signal") {
	field(DESC,"33")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),94,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI33_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),94,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI33_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI33_BI")
}
record(bo,"$(P)$(H)FI33_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI33_Signal")
}
record(bo,"$(P)$(H)FI33_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI33_Signal")
}
record(stringout,"$(P)$(H)FI34_Signal") {
	field(DESC,"34")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),95,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI34_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),95,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI34_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI34_BI")
}
record(bo,"$(P)$(H)FI34_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI34_Signal")
}
record(bo,"$(P)$(H)FI34_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI34_Signal")
}
record(stringout,"$(P)$(H)FI35_Signal") {
	field(DESC,"35")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),96,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI35_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),96,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI35_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI35_BI")
}
record(bo,"$(P)$(H)FI35_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI35_Signal")
}
record(bo,"$(P)$(H)FI35_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI35_Signal")
}
record(stringout,"$(P)$(H)FI36_Signal") {
	field(DESC,"36")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),97,0x7f)")
	info(softGlueIO,"OUT")
}
record(bi,"$(P)$(H)FI36_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),97,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FI36_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FI36_BI")
}
record(bo,"$(P)$(H)FI36_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FI36_Signal")
}
record(bo,"$(P)$(H)FI36_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FI36_Signal")
}
record(stringout,"$(P)$(H)FO1_Signal") {
	field(DESC,"1")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),231,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO1_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),231,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO1_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO1_BI")
}
record(bo,"$(P)$(H)FO1_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO1_Signal")
}
record(bo,"$(P)$(H)FO1_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO1_Signal")
}
record(stringout,"$(P)$(H)FO2_Signal") {
	field(DESC,"2")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),232,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO2_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),232,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO2_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO2_BI")
}
record(bo,"$(P)$(H)FO2_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO2_Signal")
}
record(bo,"$(P)$(H)FO2_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO2_Signal")
}
record(stringout,"$(P)$(H)FO3_Signal") {
	field(DESC,"3")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),233,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO3_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),233,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO3_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO3_BI")
}
record(bo,"$(P)$(H)FO3_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO3_Signal")
}
record(bo,"$(P)$(H)FO3_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO3_Signal")
}
record(stringout,"$(P)$(H)FO4_Signal") {
	field(DESC,"4")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),234,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO4_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),234,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO4_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO4_BI")
}
record(bo,"$(P)$(H)FO4_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO4_Signal")
}
record(bo,"$(P)$(H)FO4_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO4_Signal")
}
record(stringout,"$(P)$(H)FO5_Signal") {
	field(DESC,"5")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),235,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO5_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),235,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO5_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO5_BI")
}
record(bo,"$(P)$(H)FO5_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO5_Signal")
}
record(bo,"$(P)$(H)FO5_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO5_Signal")
}
record(stringout,"$(P)$(H)FO6_Signal") {
	field(DESC,"6")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),236,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO6_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),236,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO6_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO6_BI")
}
record(bo,"$(P)$(H)FO6_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO6_Signal")
}
record(bo,"$(P)$(H)FO6_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO6_Signal")
}
record(stringout,"$(P)$(H)FO7_Signal") {
	field(DESC,"7")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),237,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO7_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),237,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO7_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO7_BI")
}
record(bo,"$(P)$(H)FO7_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO7_Signal")
}
record(bo,"$(P)$(H)FO7_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO7_Signal")
}
record(stringout,"$(P)$(H)FO8_Signal") {
	field(DESC,"8")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),238,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO8_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),238,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO8_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO8_BI")
}
record(bo,"$(P)$(H)FO8_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO8_Signal")
}
record(bo,"$(P)$(H)FO8_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO8_Signal")
}
record(stringout,"$(P)$(H)FO9_Signal") {
	field(DESC,"9")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),239,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO9_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),239,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO9_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO9_BI")
}
record(bo,"$(P)$(H)FO9_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO9_Signal")
}
record(bo,"$(P)$(H)FO9_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO9_Signal")
}
record(stringout,"$(P)$(H)FO10_Signal") {
	field(DESC,"10")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),240,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO10_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),240,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO10_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO10_BI")
}
record(bo,"$(P)$(H)FO10_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO10_Signal")
}
record(bo,"$(P)$(H)FO10_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO10_Signal")
}
record(stringout,"$(P)$(H)FO11_Signal") {
	field(DESC,"11")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),241,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO11_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),241,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO11_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO11_BI")
}
record(bo,"$(P)$(H)FO11_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO11_Signal")
}
record(bo,"$(P)$(H)FO11_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO11_Signal")
}
record(stringout,"$(P)$(H)FO12_Signal") {
	field(DESC,"12")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),242,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO12_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),242,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO12_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO12_BI")
}
record(bo,"$(P)$(H)FO12_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO12_Signal")
}
record(bo,"$(P)$(H)FO12_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO12_Signal")
}
record(stringout,"$(P)$(H)FO13_Signal") {
	field(DESC,"13")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),243,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO13_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),243,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO13_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO13_BI")
}
record(bo,"$(P)$(H)FO13_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO13_Signal")
}
record(bo,"$(P)$(H)FO13_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO13_Signal")
}
record(stringout,"$(P)$(H)FO14_Signal") {
	field(DESC,"14")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),244,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO14_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),244,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO14_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO14_BI")
}
record(bo,"$(P)$(H)FO14_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO14_Signal")
}
record(bo,"$(P)$(H)FO14_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO14_Signal")
}
record(stringout,"$(P)$(H)FO15_Signal") {
	field(DESC,"15")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),245,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO15_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),245,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO15_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO15_BI")
}
record(bo,"$(P)$(H)FO15_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO15_Signal")
}
record(bo,"$(P)$(H)FO15_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO15_Signal")
}
record(stringout,"$(P)$(H)FO16_Signal") {
	field(DESC,"16")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),246,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO16_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),246,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO16_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO16_BI")
}
record(bo,"$(P)$(H)FO16_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO16_Signal")
}
record(bo,"$(P)$(H)FO16_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO16_Signal")
}
record(stringout,"$(P)$(H)FO17_Signal") {
	field(DESC,"17")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),247,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO17_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),247,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO17_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO17_BI")
}
record(bo,"$(P)$(H)FO17_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO17_Signal")
}
record(bo,"$(P)$(H)FO17_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO17_Signal")
}
record(stringout,"$(P)$(H)FO18_Signal") {
	field(DESC,"18")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),248,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO18_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),248,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO18_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO18_BI")
}
record(bo,"$(P)$(H)FO18_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO18_Signal")
}
record(bo,"$(P)$(H)FO18_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO18_Signal")
}
record(stringout,"$(P)$(H)FO19_Signal") {
	field(DESC,"19")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),249,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO19_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),249,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO19_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO19_BI")
}
record(bo,"$(P)$(H)FO19_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO19_Signal")
}
record(bo,"$(P)$(H)FO19_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO19_Signal")
}
record(stringout,"$(P)$(H)FO20_Signal") {
	field(DESC,"20")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),250,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO20_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),250,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO20_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO20_BI")
}
record(bo,"$(P)$(H)FO20_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO20_Signal")
}
record(bo,"$(P)$(H)FO20_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO20_Signal")
}
record(stringout,"$(P)$(H)FO21_Signal") {
	field(DESC,"21")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),251,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO21_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),251,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO21_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO21_BI")
}
record(bo,"$(P)$(H)FO21_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO21_Signal")
}
record(bo,"$(P)$(H)FO21_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO21_Signal")
}
record(stringout,"$(P)$(H)FO22_Signal") {
	field(DESC,"22")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),252,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO22_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),252,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO22_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO22_BI")
}
record(bo,"$(P)$(H)FO22_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO22_Signal")
}
record(bo,"$(P)$(H)FO22_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO22_Signal")
}
record(stringout,"$(P)$(H)FO23_Signal") {
	field(DESC,"23")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),253,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO23_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),253,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO23_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO23_BI")
}
record(bo,"$(P)$(H)FO23_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO23_Signal")
}
record(bo,"$(P)$(H)FO23_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO23_Signal")
}
record(stringout,"$(P)$(H)FO24_Signal") {
	field(DESC,"24")
	field(PINI,"YES")
	field(DTYP,"softGlue")
	field(OUT,"@asynMask($(PORT),254,0x1f)")
	info(softGlueIO,"IN")
}
record(bi,"$(P)$(H)FO24_BI") {
	field(DTYP,"asynUInt32Digital")
	field(INP,"@asynMask($(PORT),254,0x80)")
	field(ZNAM,"0")
	field(ONAM,"1")
}
record(bo,"$(P)$(H)FO24_SCAN") {
	field(SCAN,"Event")
	field(EVNT,"$(READEVENT)")
	field(FLNK,"$(P)$(H)FO24_BI")
}
record(bo,"$(P)$(H)FO24_SigShow") {
	field(DTYP,"softGlueShow")
	field(OUT,"@MATCH $(P)$(H)FO24_Signal")
}
record(bo,"$(P)$(H)FO24_Show") {
	field(DTYP,"softGlueShow")
	field(OUT,"@SHOW $(P)$(H)FO24_Signal")
}
record(stringout, "$(P)$(H)circuit_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)circuit_desc") {
#	field(SIZV, "300")
#}
record(stringout, "$(P)$(H)10MHZ_CLOCK_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)10MHZ_CLOCK_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)20MHZ_CLOCK_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)20MHZ_CLOCK_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)50MHZ_CLOCK_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)50MHZ_CLOCK_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)VAR_CLOCK_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)VAR_CLOCK_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)AND-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)AND-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)AND-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)AND-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)AND-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)AND-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)AND-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)AND-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)OR-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)OR-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)OR-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)OR-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)OR-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)OR-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)OR-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)OR-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)XOR-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)XOR-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)XOR-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)XOR-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)BUFFER-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)BUFFER-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)BUFFER-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)BUFFER-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)BUFFER-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)BUFFER-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)BUFFER-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)BUFFER-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DEMUX2-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DEMUX2-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DEMUX2-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DEMUX2-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DFF-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DFF-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DFF-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DFF-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DFF-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DFF-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DFF-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DFF-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DivByN-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DivByN-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DivByN-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DivByN-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DivByN-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DivByN-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DivByN-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DivByN-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DnCntr-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DnCntr-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DnCntr-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DnCntr-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DnCntr-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DnCntr-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)DnCntr-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)DnCntr-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)MUX2-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)MUX2-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)MUX2-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)MUX2-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpCntr-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpCntr-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpCntr-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpCntr-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpCntr-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpCntr-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpCntr-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpCntr-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpDnCntr-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpDnCntr-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpDnCntr-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpDnCntr-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpDnCntr-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpDnCntr-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpDnCntr-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpDnCntr-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)UpDnCntr-5_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)UpDnCntr-5_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)QuadDec-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)QuadDec-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)QuadDec-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)QuadDec-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)MagCmp-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)MagCmp-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)HistScal-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)HistScal-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)HW_OR-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)HW_OR-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)HW_OR-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)HW_OR-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)PixelFIFO-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)PixelFIFO-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)scalToStream-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)scalToStream-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)GateDly-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)GateDly-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)GateDly-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)GateDly-2_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)GateDly-3_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)GateDly-3_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)GateDly-4_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)GateDly-4_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)FreqCntr-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)FreqCntr-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)pixelTrig-1_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)pixelTrig-1_desc") {
#	field(SIZV, "80")
#}
record(stringout, "$(P)$(H)pixelTrig-2_desc") {
}
# In 3.15, we'll be able to use long strings
#record(lso, "$(P)$(H)pixelTrig-2_desc") {
#	field(SIZV, "80")
#}
